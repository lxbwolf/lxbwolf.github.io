<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>树莓派 on Xiaobin&#39;s Blog</title>
        <link>http://lxb.wiki/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/</link>
        <description>Recent content in 树莓派 on Xiaobin&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 30 May 2020 22:05:48 +0000</lastBuildDate><atom:link href="http://lxb.wiki/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/atom.xml" rel="self" type="application/rss+xml" /><item>
        <title>树莓派安装TT-RSS</title>
        <link>http://lxb.wiki/afdc720c/</link>
        <pubDate>Sat, 30 May 2020 22:05:48 +0000</pubDate>
        
        <guid>http://lxb.wiki/afdc720c/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tiny Tiny RSS&lt;/a&gt;（TT-RSS）是一个自由开源的基于 Web 的新闻&lt;!-- raw HTML omitted --&gt;馈送&lt;!-- raw HTML omitted --&gt;feed&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（RSS/Atom）阅读器和聚合工具。它非常适合那些注重隐私，并且仍然依赖 RSS 来获取日常新闻的人。TT-RSS 是自行托管的软件，因此你可以 100% 的掌控你的服务器、数据以及你的全部隐私。它还支持大量的插件、扩展和主题。你喜欢黑暗模式的界面？没问题。想基于关键词过滤发来的消息？TT-RSS 也能让你得偿所愿。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/tt-rss.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Tiny Tiny RSS screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现在你知道 TT-RSS 是什么了，那么为什么你可能会想用它。我会讲述要把它安装到树莓派或 Debian 10 服务器上你需要了解的所有的东西。&lt;/p&gt;
&lt;h3 id=&#34;安装和配置-tt-rss&#34;&gt;安装和配置 TT-RSS&lt;/h3&gt;
&lt;p&gt;要把 TT-RSS 安装到树莓派上，你还需要安装和配置最新版本的 PHP（本文撰写时 PHP 最新版本是 7.3）、后端数据库 PostgreSQL、Nginx web 服务器、Git，最后才是 TT-RSS。&lt;/p&gt;
&lt;h4 id=&#34;1安装-php-7&#34;&gt;1、安装 PHP 7&lt;/h4&gt;
&lt;p&gt;安装 PHP 7 是整个过程中最复杂的部分。幸运的是，它并不像看起来那样困难。从安装下面的支持包开始：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y ca-certificates apt-transport-https
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，添加存储库 PGP 密钥：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ wget -q https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下一步，把 PHP 库添加到你的 apt 源：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ echo &amp;#34;deb https://packages.sury.org/php/ buster main&amp;#34; | sudo tee /etc/apt/sources.list.d/php.list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后更新你的存储库索引：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后，安装 PHP 7.3（或最新版本）和一些通用组件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y php7.3 php7.3-cli php7.3-fpm php7.3-opcache php7.3-curl php7.3-mbstring php7.3-pgsql php7.3-zip php7.3-xml php7.3-gd php7.3-intl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的命令默认你使用的后端数据库是 PostgreSQL，会安装 &lt;code&gt;php7.3-pgsql&lt;/code&gt;。如果你想用 MySQL 或 MariaDB，你可以把命令参数改为 &lt;code&gt;php7.3-mysql&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下一步，确认 PHP 已安装并在你的树莓派上运行着：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ php -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在是时候安装和配置 Web 服务器了。&lt;/p&gt;
&lt;h4 id=&#34;2安装-nginx&#34;&gt;2、安装 Nginx&lt;/h4&gt;
&lt;p&gt;可以用下面的命令安装 Nginx：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y nginx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改默认的 Nginx 虚拟主机配置，这样 Web 服务器才能识别 PHP 文件以及知道如何处理它们。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo nano /etc/nginx/sites-available/default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以安全地删除原文件中的所有内容，用下面的内容替换：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;
        index index.html index.htm index.php;
        server_name _;

        location / {
                try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
          include snippets/fastcgi-php.conf;
          fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        }

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;按 &lt;code&gt;Ctrl+O&lt;/code&gt; 保存修改后的配置文件，然后按 &lt;code&gt;Ctrl+X&lt;/code&gt; 退出 Nano。你可以用下面的命令测试你的新配置文件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ nginx -t
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果没有报错，重启 Nginx 服务：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3安装-postgresql&#34;&gt;3、安装 PostgreSQL&lt;/h4&gt;
&lt;p&gt;接下来是安装数据库服务器。在树莓派上安装 PostgreSQL 超级简单：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y postgresql postgresql-client postgis
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入下面的命令看一下数据库服务器安装是否成功：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ psql --version
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4创建-tiny-tiny-rss-数据库&#34;&gt;4、创建 Tiny Tiny RSS 数据库&lt;/h4&gt;
&lt;p&gt;在做其他事之前，你需要创建一个数数据库，用来给 TT-RSS 软件保存数据。首先，登录 PostgreSQL 服务器：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo -u postgres psql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下一步，新建一个用户，设置密码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER username WITH PASSWORD &amp;#39;your_password&amp;#39; VALID UNTIL &amp;#39;infinity&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后创建一个给 TT-RSS 用的数据库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE DATABASE tinyrss;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后，给新建的用户赋最高权限：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GRANT ALL PRIVILEGES ON DATABASE tinyrss to user_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这是安装数据库的步骤。你可以输入 &lt;code&gt;\q&lt;/code&gt; 来退出 &lt;code&gt;psql&lt;/code&gt; 程序。&lt;/p&gt;
&lt;h4 id=&#34;5安装-git&#34;&gt;5、安装 Git&lt;/h4&gt;
&lt;p&gt;安装 TT-RSS 需要用 Git，所以输入下面的命令安装 Git：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install git -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，进入到 Nginx 服务器的根目录：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd /var/www/html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下载 TT-RSS 最新源码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git clone https://git.tt-rss.org/fox/tt-rss.git tt-rss
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意，这一步会创建一个 &lt;code&gt;tt-rss&lt;/code&gt; 文件夹。&lt;/p&gt;
&lt;h4 id=&#34;6安装和配置tiny-tiny-rss&#34;&gt;6、安装和配置Tiny Tiny RSS&lt;/h4&gt;
&lt;p&gt;现在是安装和配置你的新 TT-RSS 服务器的最后时刻了。首先，确认下你在浏览器中能打开 &lt;code&gt;http://your.site/tt-rss/install/index.php&lt;/code&gt;。如果浏览器显示 &lt;code&gt;403 Forbidden&lt;/code&gt;，那么就证明 &lt;code&gt;/var/www/html&lt;/code&gt; 文件夹的权限没有设置正确。下面的命令通常能解决这个问题：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ chmod 755 /var/www/html/ -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果一切正常，你会看到 TT-RSS 安装页面，它会让你输入一些数据的信息。你只需要输入前面你创建的数据库用户名和密码；数据库名；主机名填 &lt;code&gt;localhost&lt;/code&gt;；端口填 &lt;code&gt;5432&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;点击“Test Configuration”。如果一切正常，你会看到一个标记着“Initialize Database”的红色按钮。点击它来开始安装。结束后，你会看到一个配置文件，你可以把它复制到 TT-RSS 的目录，另存为 &lt;code&gt;config.php&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;安装过程结束后，浏览器输入 &lt;code&gt;http://yoursite/tt-rss/&lt;/code&gt; 打开 TT-RSS，使用默认的凭证登录（用户名：&lt;code&gt;admin&lt;/code&gt;，密码：&lt;code&gt;password&lt;/code&gt;）。登录后系统会提示你修改密码。我强烈建议你尽快修改密码。&lt;/p&gt;
&lt;h3 id=&#34;配置-tt-rss&#34;&gt;配置 TT-RSS&lt;/h3&gt;
&lt;p&gt;如果一切正常，你现在就可以开始使用 TT-RSS 了。建议你新建一个非管理员用户，使用新用户名登录，并开始导入你的馈送、订阅，按照你的意愿来配置它。&lt;/p&gt;
&lt;p&gt;最后，并且是超级重要的事，不要忘了阅读 TT-RSS 维基上的 &lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/wiki/UpdatingFeeds&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Updating Feeds&lt;/a&gt; 部分。它讲述了如何创建一个简单的 systemd 服务来更新馈送。如果你跳过了这一步，你的 RSS 馈送就不会自动更新。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;呵！工作量不小，但是你做完了！你现在有自己的 RSS 聚合服务器了。想了解 TT-RSS 更多的知识？我推荐你去看官方的 &lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/wiki/FAQ&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FAQ&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://community.tt-rss.org/c/tiny-tiny-rss/support&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;支持&lt;/a&gt;论坛，和详细的&lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/wiki/InstallationNotes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安装&lt;/a&gt;笔记。如果你有任何问题，尽情地在下面评论吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/20/2/ttrss-raspberry-pi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/20/2/ttrss-raspberry-pi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://opensource.com/users/pmullins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Patrick H. Mullins&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lxbwolf&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派做BT下载器</title>
        <link>http://lxb.wiki/fb1d9193/</link>
        <pubDate>Wed, 11 Mar 2020 22:29:00 +0000</pubDate>
        
        <guid>http://lxb.wiki/fb1d9193/</guid>
        <description>&lt;p&gt;可以用 &lt;a class=&#34;link&#34; href=&#34;https://www.transmissionbt.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;transmission&lt;/a&gt;，它提供了 Web 界面&lt;/p&gt;
&lt;h4 id=&#34;1-安装-transmission&#34;&gt;1. 安装 transmission：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install transmission-daemon
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-创建下载目录一个是下载完成的目录一个是未完成的目录&#34;&gt;2. 创建下载目录，一个是下载完成的目录，一个是未完成的目录&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir Public/bt_complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir Public/bt_incomplete
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-配置目录权限&#34;&gt;3. 配置目录权限&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -a -G debian-transmission pi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chgrp debian-transmission bt_complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chgrp debian-transmission bt_incomplete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;770&lt;/span&gt; bt_complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;770&lt;/span&gt; bt_incomplete
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4-修改配置文件-etctransmission-daemonsettingsjson&#34;&gt;4. 修改配置文件 /etc/transmission-daemon/settings.json&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;download-dir&amp;#34;:&amp;#34;/home/pi/Public/bt_complete&amp;#34;
&amp;#34;incomplete-dir&amp;#34;:&amp;#34;/home/pi/Public/bt_incomplete&amp;#34;
&amp;#34;rpc-host-whitelist&amp;#34;: &amp;#34;192.168.1.*&amp;#34;,
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;5-重启-transmission&#34;&gt;5. 重启 transmission&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo service transmission-daemon reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo service transmission-daemon restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;两个命令按顺序执行，单独 restart 的话配置不会保存：&lt;/p&gt;
&lt;p&gt;浏览器中输入 &lt;code&gt;http://192.168.1.8:9091/&lt;/code&gt;，默认用户名密码：&lt;code&gt;transmission&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改 transmission 用户名和密码的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先停止服务： &lt;code&gt;sudo service transmission-daemon stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改配置文件，看到这个是加密的密码，直接把密码改为密码明文就可以：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“rpc-username”: “明文”,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“rpc-password”: “密文”,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;再此启动服务 ：&lt;code&gt;sudo service transmission-daemon start&lt;/code&gt;
启动的时候 transmission 会自动把新密码加密。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;transmission 默认监听 51413 端口，最好在路由器上做个端口转发，把这个端口转到它的 IP 地址&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派搭建GitHub镜像服务</title>
        <link>http://lxb.wiki/2073ae8b/</link>
        <pubDate>Tue, 10 Mar 2020 19:03:42 +0000</pubDate>
        
        <guid>http://lxb.wiki/2073ae8b/</guid>
        <description>&lt;h3 id=&#34;1--树莓派上创建-git-账号创建用于存放代码的目录&#34;&gt;1.  树莓派上创建 git 账号，创建用于存放代码的目录&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/srv/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-github-库-clone-到树莓派&#34;&gt;2. GitHub 库 clone 到树莓派&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git clone git@github.com:user/XXXX.git /srv/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-添加-remote&#34;&gt;3. 添加 remote&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git remote add upstream https://github.com/abcd/XXXX&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-修改-hook&#34;&gt;4. 修改 hook&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#.git/hooks/post-update&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;push_branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;param##refs/heads/&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#获取到更新的分支名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin $push_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-添加定时任务&#34;&gt;5. 添加定时任务&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;5,35 * * * * cd /srv/XXXX &amp;amp;&amp;amp; git pull upstream master&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-在本地代码添加-remote&#34;&gt;6. 在本地代码添加 remote&lt;/h3&gt;
&lt;h4 id=&#34;61-有多个项目时为避免修改每个项目的-remote直接添加-host&#34;&gt;6.1 有多个项目时，为避免修改每个项目的 remote，直接添加 host&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;192.168.1.8 gitsrv&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;62-在每个项目在添加一次-remote&#34;&gt;6.2 在每个项目在添加一次 remote&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git remote add pi git@192.168.1.8:/srv/XXXX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样即使以后地址改变，只需要改一次 host 就可以了&lt;/p&gt;
&lt;h3 id=&#34;7-推拉代码时从-pi-推拉&#34;&gt;7. 推拉代码时，从 pi 推拉&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git pull pi branch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push pi branch&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派搭建迅雷远程下载服务器</title>
        <link>http://lxb.wiki/1846a864/</link>
        <pubDate>Thu, 01 Nov 2018 20:09:55 +0000</pubDate>
        
        <guid>http://lxb.wiki/1846a864/</guid>
        <description>&lt;h3 id=&#34;1-下载路由器固件&#34;&gt;1. 下载路由器固件&lt;/h3&gt;
&lt;p&gt;从 &lt;a class=&#34;link&#34; href=&#34;http://luyou.xunlei.com/forum-51-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt; 或者 百度网盘&lt;/p&gt;
&lt;p&gt;解压到指定目录如 &lt;code&gt;/root/xunlei&lt;/code&gt; 进入目录 执行&lt;code&gt;./portal&lt;/code&gt; 稍等片刻，会在最后输出一个激活码&lt;/p&gt;
&lt;h3 id=&#34;2-在迅雷远程下载页面绑定树莓派&#34;&gt;2. 在迅雷远程下载页面绑定树莓派&lt;/h3&gt;
&lt;p&gt;登录&lt;a class=&#34;link&#34; href=&#34;http://yuancheng.xunlei.com/login.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;迅雷远程下载&lt;/a&gt;主页,登录之后，左侧会有一个添加按钮，点击添加按钮&lt;/p&gt;
&lt;p&gt;不需要选择绑定设备类型, 直接将树莓派上获得的激活码填入框中，点击绑定后左侧就会出现树莓派对应的设备列表了，但是，如果我们此时就在右侧点击新建之后会发现,弹出的新建页面中会提示找不到挂载磁盘&lt;/p&gt;
&lt;h3 id=&#34;3-自定义迅雷的下载目录&#34;&gt;3. 自定义迅雷的下载目录&lt;/h3&gt;
&lt;p&gt;进入/mnt目录，创建目录TDDOWNLOAD(名字随意) 执行&lt;code&gt;mount --bind /data/TDDOWNLOAD /mnt/TDDOWNLOAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中/data/TDDOWNLOAD就是自定义的下载目录，你可以指定为其他任何目录。&lt;/p&gt;
&lt;p&gt;然后再刚刚迅雷固件的解压目录下创建目录etc,同时在etc下创建文件thunder_mounts.cfg,编辑此文件, 写入内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;avaliable_mount_path_pattern
{
/mnt/TDDOWNLOAD
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启路由器固件 &lt;code&gt;./root/xunlei/portal&lt;/code&gt; 再进入远程下载界面新建下载就没有了没挂载磁盘的提示了&lt;/p&gt;
&lt;h3 id=&#34;4-迅雷路由器固件开机启动&#34;&gt;4. 迅雷路由器固件开机启动&lt;/h3&gt;
&lt;p&gt;在/etc/init.d/下新建xunlei脚本，写入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh
#
# Xunlei initscript
#
### BEGIN INIT INFO
# Provides:          xunlei
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop::    $network $local_fs $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start xunlei at boot time
# Description:       A downloader
### END INIT INFO

do_start()
{
./root/xunlei/portal
}

do_stop()
{
./root/xunlei/portal -s
}

case &amp;quot;$1&amp;quot; in
start)
do_start
;;
stop)
do_stop
;;
esac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将该脚本加入默认自启动中 &lt;code&gt;update-rc.d xunlei defaults&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派基础环境</title>
        <link>http://lxb.wiki/5976aace/</link>
        <pubDate>Thu, 18 Oct 2018 22:24:19 +0000</pubDate>
        
        <guid>http://lxb.wiki/5976aace/</guid>
        <description>&lt;h3 id=&#34;修改软件源&#34;&gt;修改软件源&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo -s
echo -e &amp;quot;deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi \n deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi&amp;quot; &amp;amp;gt; /etc/apt/sources.list
echo -e &amp;quot;deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui&amp;quot; &amp;amp;gt; /etc/apt/sources.list.d/raspi.list
exit
sudo apt update &amp;amp;amp;&amp;amp;amp; sudo apt -y upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;中文输入法&#34;&gt;中文输入法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install -y ttf-wqy-zenhei
sudo apt-get install -y scim-pinyin
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;看门狗防止树莓派死机的监控&#34;&gt;看门狗(防止树莓派死机的监控)&lt;/h3&gt;
&lt;p&gt;当利用树莓派来做一些需要长期待机的应用时，如下载机、云储存、家庭影院等应用，我们往往会遇到的一个问题就是树莓派会因为过热而死机，需要我们重新启动树莓派，然后再次开启树莓派上的应用。这会给我们的日常操作带来许多麻烦。 Watchdog（看门狗）就能让树莓派永不死机。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//树莓派自带看门狗模块，我们需要添加进去就好。
sudo modprobe bcm2708_wdog
echo -e &amp;quot;\nbcm2708_wdog&amp;quot; &amp;amp;gt; sudo tee -a /etc/modules
// 安装看门狗软件
sudo apt-get install -y chkconfig watchdog
// 配置
sudo vim /etc/watchdog.conf
// 去掉&amp;quot;watchdog-device=/dev/watchdog&amp;quot;这一行的#注释
// 其它配置参考如下:
# 用于设定CPU温度重启条件
temperature-device = /sys/class/thermal/thermal_zone0/temp
# 最大温度为100度，超过立即重启
max-temperature = 100000
# 1分钟最多进程为24个，超过即重启
max-load-15=12
# 5分钟最多进程为18个，超过即重启
max-load-15=12
# 15分钟最多进程为12个，超过即重启
max-load-15=12

// 完成配置后，启动看门狗
sudo /etc/init.d/watchdog start
// 设置为开机自启
chkconfig watchdog on
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;screen让树莓派永不失联&#34;&gt;Screen(让树莓派永不失联)&lt;/h3&gt;
&lt;p&gt;利用SSH（Serare Shell，安全外壳协议）来远程控制树莓派应该是我们最常用的 操作树莓派的方式，但在用SSH连接时，我们常常会遇到连接突然断开的问题。连 接一旦断开，原米我们进行的操作也就中断了，若再使用，就得从头再来了。相信你肯定因为电脑待机而中断树莓派的任务而苦恼过。 Screen来让树莓派永不失联的方法。此方法下，就算连接断开了，当我们重新连接后依旧进行原来的操作，而不需要从头再来。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 直接安装Screen
sudo apt-get install -y screen
// 开启一个后台view（后台的终端，不会因为断开连接而终止）
screen -S 终端名
// 然后就可以继续你的操作了
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>树莓派3B&#43; 安装系统</title>
        <link>http://lxb.wiki/cfbe6b0a/</link>
        <pubDate>Wed, 17 Oct 2018 22:11:38 +0000</pubDate>
        
        <guid>http://lxb.wiki/cfbe6b0a/</guid>
        <description>&lt;p&gt;安装步骤: &lt;code&gt;官网下载系统 -- 刷入TF卡 -- 设置开启显示器和SSH -- 通电 -- 进入系统&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;0-很重要&#34;&gt;0. 很重要&lt;/h3&gt;
&lt;p&gt;装完系统，写完 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 配置文件后，无论如何不要 &lt;code&gt;reboot&lt;/code&gt;，不要 &lt;code&gt;reboot&lt;/code&gt;， 不要 &lt;code&gt;reboot&lt;/code&gt; ！！！
3B+ 有极大的概率，&lt;code&gt;reboot&lt;/code&gt; 后无法正常连接 WIFI，只能重新烧录系统。&lt;/p&gt;
&lt;h3 id=&#34;1-进入官方网站下载系统镜像&#34;&gt;1. 进入官方网站下载系统镜像&lt;/h3&gt;
&lt;p&gt;官方系统 raspbian地址 &lt;a class=&#34;link&#34; href=&#34;https://www.raspberrypi.org/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-windows系统下的安装&#34;&gt;2. Windows系统下的安装&lt;/h3&gt;
&lt;h4 id=&#34;21-下载sd格式化工具&#34;&gt;2.1 下载SD格式化工具&lt;/h4&gt;
&lt;p&gt;SDFormatter 地址 &lt;a class=&#34;link&#34; href=&#34;https://www.sdcard.org/downloads/formatter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.sdcard.org/downloads/formatter&lt;/a&gt;_4/eula_windows/&lt;/p&gt;
&lt;p&gt;安装后直接用默认选项 格式化SD卡&lt;/p&gt;
&lt;h4 id=&#34;22-下载写镜像工具&#34;&gt;2.2 下载写镜像工具&lt;/h4&gt;
&lt;p&gt;Win32 DiskImager 地址 &lt;a class=&#34;link&#34; href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://sourceforge.net/projects/win32diskimager/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-mac系统下的安装&#34;&gt;3. MAC系统下的安装&lt;/h3&gt;
&lt;h4 id=&#34;31-查看当前已挂载的卷&#34;&gt;3.1 查看当前已挂载的卷&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[liuxb@liuxb-mac]$ df -h
Filesystem      Size   Used  Avail Capacity iused      ifree %iused  Mounted on
/dev/disk1     112Gi   81Gi   30Gi    73% 1014786 4293952493    0%   /
devfs          188Ki  188Ki    0Bi   100%     654          0  100%   /dev
map -hosts       0Bi    0Bi    0Bi   100%       0          0  100%   /net
map auto_home    0Bi    0Bi    0Bi   100%       0          0  100%   /home
/dev/disk2s3    92Gi   51Gi   41Gi    56%  336662   42525054    1%   /Volumes/系统
/dev/disk2s4    20Gi   15Gi  4.4Gi    78%   92859    4579733    2%   /Volumes/数据
/dev/disk3s1    29Gi  2.3Mi   29Gi     1%  107876    8373436    2%   /Volumes/未命名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;对比Size和Name可以找到SD卡的分区在系统里对应的设备文件（这里是/dev/disk3s1），如果你有多个分区，可能还会有disk3s2之类的&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;32-使用diskutil-unmount将分区卸载&#34;&gt;3.2 使用diskutil unmount将分区卸载&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[liuxb@liuxb-mac]$ diskutil unmount /dev/disk3s1
Volume 未命名 on disk3s1 unmounted
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;33-先对下载的zip压缩包进行解压然后使用dd命令将系统镜像写入需要特别特别注意disk后的数字不能搞错&#34;&gt;3.3 先对下载的zip压缩包进行解压，然后使用dd命令将系统镜像写入，需要特别特别注意disk后的数字，不能搞错&lt;/h4&gt;
&lt;p&gt;这部分可以参考&lt;a class=&#34;link&#34; href=&#34;#correct&#34; &gt;Mac 烧录系统&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说明：/dev/disk3s1是分区，/dev/disk3是块设备，/dev/rdisk3是原始字符设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[liuxb@liuxb-mac]$ unzip 2017-09-07-raspbian-stretch.zip
[liuxb@liuxb-mac]$ sudo dd bs=16m if=2017-09-07-raspbian-stretch.img of=/dev/rdisk3
_
输入用户密码
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;经过几分钟的等待，出现下面的提示，说明TF卡刷好了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1172+1 records in
1172+1 records out
4916019200 bytes transferred in 127.253638 secs (9691442 bytes/sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-开启ssh&#34;&gt;4. 开启SSH&lt;/h3&gt;
&lt;p&gt;在TF卡分区里创建一个名为&amp;quot;ssh&amp;quot;的不带后缀的空文件&lt;/p&gt;
&lt;h3 id=&#34;5-开启强制hdmi输出&#34;&gt;5. 开启强制HDMI输出&lt;/h3&gt;
&lt;p&gt;在TF卡分区，打开config.txt文件(开机后位置： /boot/config.txt)，修改如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hdmi_safe=1
config_hdmi_boost=4
hdmi_ignore_edid=0xa5000080
hdmi_group=2
hdmi_mode=82
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参数介绍:&lt;/p&gt;
&lt;p&gt;项&lt;/p&gt;
&lt;p&gt;解释&lt;/p&gt;
&lt;p&gt;hdmi_safe=1&lt;/p&gt;
&lt;p&gt;安全启动HDMI&lt;/p&gt;
&lt;p&gt;config_hdmi_boost=4&lt;/p&gt;
&lt;p&gt;开启热插拔&lt;/p&gt;
&lt;p&gt;hdmi_group=1&lt;/p&gt;
&lt;p&gt;CEA电视显示器&lt;/p&gt;
&lt;p&gt;hdmi_group=2&lt;/p&gt;
&lt;p&gt;DMT电脑显示器&lt;/p&gt;
&lt;p&gt;hdmi_ignore_edid=0xa5000080&lt;/p&gt;
&lt;p&gt;忽略自动探测的分辨率&lt;/p&gt;
&lt;p&gt;输出分辨率：&lt;/p&gt;
&lt;p&gt;hdmi_mode=4&lt;/p&gt;
&lt;p&gt;640x480 60Hz&lt;/p&gt;
&lt;p&gt;hdmi_mode=9&lt;/p&gt;
&lt;p&gt;800x600 60Hz&lt;/p&gt;
&lt;p&gt;hdmi_mode=16&lt;/p&gt;
&lt;p&gt;1024x768 60Hz&lt;/p&gt;
&lt;p&gt;hdmi_mode=82&lt;/p&gt;
&lt;p&gt;1080p 60Hz&lt;/p&gt;
&lt;h3 id=&#34;6设置无线wi-fi连接假设没有网线而且没能连接显示器&#34;&gt;6.设置无线WI-FI连接：（假设没有网线，而且没能连接显示器）&lt;/h3&gt;
&lt;p&gt;在TF卡的boot分区，创建wpa_supplicant.conf文件，加入如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;country=CN
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
ssid=&amp;quot;lxb-wifi&amp;quot;
psk=&amp;quot;123456789&amp;quot;
priority=1
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在树莓派通电后会自动添加到&lt;code&gt;/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt;文件里面，进行自动连接。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 详细介绍：
#ssid:网络的ssid
#psk:密码
#priority:连接优先级，数字越大优先级越高（不可以是负数）
#scan_ssid:连接隐藏WiFi时需要指定该值为1

// 如果WiFi 没有密码
network={
ssid=&amp;quot;无线网络名称（ssid）&amp;quot;
key_mgmt=NONE
}
// 如果WiFi 使用WEP加密

network={
ssid=&amp;quot;无线网络名称（ssid）&amp;quot;
key_mgmt=NONE
wep_key0=&amp;quot;wifi密码&amp;quot;
}
// 如果你的 WiFi 使用WPA/WPA2加密

network={
ssid=&amp;quot;无线网络名称（ssid）&amp;quot;
key_mgmt=WPA-PSK
psk=&amp;quot;wifi密码&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上设置完成后, TF卡可以插入树莓派了, 通电. 默认登录账号:&lt;code&gt;pi&lt;/code&gt; 密码: &lt;code&gt;raspberry&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Mac 烧录操作：&lt;!-- raw HTML omitted --&gt;&amp;gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;核心就一行指令
sudo dd bs=4m if=2017-11-29-raspbian-stretch.img of=/dev/rdisk4

其中if参数为镜像文件，of参数为设备名称。但是烧写系统进sd卡前需要一个准备工作，其一是将sd卡抹掉格式化一下，然后卸载sd卡分区，最后将系统烧进指定sd卡位置。

抹掉sd卡很简单，mac的磁盘工具，选中sd卡，点抹掉，格式选择MS-DOS(FAT)。
sd卡格式化之后，Mac命令行输入df -h，得到挂载的SD卡位置（卷），比如/dev/disk4s1。
然后使用 diskutil unmount /dev/disk4s1 卸载这个分区
最后，使用 diskutil list 这个命令，获得我们要安装系统的设备。
注意：此处我们看到的是 /dev/disk4，但是写核心指令的时候要加一个字母r，即/dev/rdisk4。
最终得到的就是
sudo dd bs=4m if=2017-11-29-raspbian-stretch.img of=/dev/rdisk4

最后安全退出sd卡
diskutil unmountDisk /dev/disk4
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
