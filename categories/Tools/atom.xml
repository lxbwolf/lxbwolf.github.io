<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Tools on Xiaobin&#39;s Notes</title>
        <link>https://lxb.wiki/categories/Tools/</link>
        <description>Recent content in Tools on Xiaobin&#39;s Notes</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 15 Mar 2024 22:05:49 +0800</lastBuildDate><atom:link href="https://lxb.wiki/categories/Tools/atom.xml" rel="self" type="application/rss+xml" /><item>
        <title>MacOS 14.4 引发Java 应用崩溃</title>
        <link>https://lxb.wiki/a520e262/</link>
        <pubDate>Fri, 15 Mar 2024 22:05:49 +0800</pubDate>
        
        <guid>https://lxb.wiki/a520e262/</guid>
        <description>&lt;p&gt;根据Java官方发布的文章，由于macOS上运行的进程可能会访问受保护内存区域中的内存。在 macOS 14.4 更新之前，在某些情况下，macOS 内核会通过向进程发送信号 SIGBUS 或 SIGSEGV 来响应这些受保护的内存访问。然后该进程可以选择处理该信号并继续执行。而在最新 macOS 14.4 中，当线程在写入模式下运行时，如果尝试对受保护的内存区域进行内存访问，macOS 将发送信号SIGKILL。该进程无法处理该信号，并且该进程将无条件终止。&lt;/p&gt;
&lt;p&gt;目前该问题主要受影响的Mac机型和Java版本包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac机型：M1、M2、M3（Apple Silicon m* 芯片）&lt;/li&gt;
&lt;li&gt;Java版本：Java 8 - Java 22 所有版本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果还在使用Intel芯片的话，这次不受影响。&lt;/p&gt;
&lt;p&gt;官方文章 &lt;a class=&#34;link&#34; href=&#34;https://blogs.oracle.com/java/post/java-on-macos-14-4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java users on macOS 14 running on Apple silicon systems should skip macOS 14.4 and update directly to macOS 14.4.1 (oracle.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在x上，Java开发领域的一些大v们，也发现了这个问题，并提醒大家不要升级。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202405091709429.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202405091712272.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;其他资料&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://lobste.rs/s/onr9sb/java_users_on_macos_14_running_on_apple&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java users on macOS 14 running on Apple silicon systems should consider delaying the macOS 14.4 update | Lobsters&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mac常用设置命令</title>
        <link>https://lxb.wiki/ef867fbd/</link>
        <pubDate>Sun, 20 Aug 2023 22:47:19 +0800</pubDate>
        
        <guid>https://lxb.wiki/ef867fbd/</guid>
        <description>&lt;h2 id=&#34;取消-4-位数密码限制&#34;&gt;取消 4 位数密码限制&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pwpolicy -clearaccountpolicies
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;允许安装任意来源的-app&#34;&gt;允许安装任意来源的 App&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo spctl --master-disable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xcode-命令行工具&#34;&gt;xcode 命令行工具&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xcode-select --install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;程序坞&#34;&gt;程序坞&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置启动坞动画时间设置为 0.5 秒 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.dock autohide-time-modifier -float 0.5 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置启动坞响应时间最短&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.dock autohide-delay -int &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 恢复启动坞默认动画时间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults delete com.apple.dock autohide-time-modifier &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 恢复默认启动坞响应时间&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults delete com.apple.Dock autohide-delay &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;启动台自定义行和列&#34;&gt;启动台自定义行和列&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置列数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.dock springboard-columns -int &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置行数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.dock springboard-rows -int &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 重启 Dock 生效&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;恢复默认的列数和行数&#34;&gt;恢复默认的列数和行数&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.dock springboard-rows Default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.dock springboard-columns Default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;重启-dock-生效&#34;&gt;重启 Dock 生效&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Mac OS守护进程优化建议</title>
        <link>https://lxb.wiki/62d417da/</link>
        <pubDate>Sun, 04 Jun 2023 22:03:49 +0800</pubDate>
        
        <guid>https://lxb.wiki/62d417da/</guid>
        <description>&lt;p&gt;&lt;strong&gt;/sbin/launchd&lt;/strong&gt;
系统及用户进程管理器，它是内核装载成功后在OS环境下启动的第一个进程，是Mac OS最重要的进程之一。你无法禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/libexec/kextd&lt;/strong&gt;&lt;br&gt;
内核扩展服务，响应内核或用户进程的请求，比如装载或卸载内核扩展或提供内核扩展信息给它们。这是Mac的关键守护进程，请不要去禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/notifyd&lt;/strong&gt;&lt;br&gt;
消息服务，这是Mac OS消息系统的组成部分之一。我们知道，操作系统的很多组件需要依赖异步消息来通信，这个服务能保证它们正常工作。请不要去禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/diskarbitrationd&lt;/strong&gt;&lt;br&gt;
磁盘仲裁服务，作用是为磁盘卷或其他存储部件进行挂载，取消挂载或弹出（比如光驱和dmg）。最常见的就是USB移动硬盘，MP3，IPHONE，IPAD等。&lt;br&gt;
它的原理是当内核发现有新硬件插入时，内核先识别该硬件，如果能识别，则为硬件装载驱动，并通知 diskarbitrationd 挂载它。取消挂载同理。&lt;br&gt;
如果这个服务被禁用，所有即插即用存储设备都会出现异常。建议不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/libexec/configd&lt;/strong&gt;&lt;br&gt;
保存计算机和系统环境的动态配置信息。为需要用到这些信息的进程提供变更通知。比如网络服务（tcp/ip或wins更新等）。&lt;br&gt;
如果这个服务被禁用，网络和一些需要动态配置信息的组件将会出现异常。建议不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/syslogd&lt;/strong&gt;&lt;br&gt;
系统日志服务，用于记录系统或软件的消息日志，是系统或软件崩溃时查错的关键途径。某些工具也可能依赖与日志在提供服务。&lt;br&gt;
如果这个服务被禁用，所有的消息日志都将停止记录，并可能导致某些软件工作异常。建议不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/DirectoryService&lt;/strong&gt;&lt;br&gt;
目录信息收集中心，它会收集各种目录的用户，用户组，权限和路径信息，并在应用程序需要时，反馈给它们。目录的介质主要是指本地磁 盘，LDAP，Netinfo, Active Directory, NIS, Bonjour/Rendesvous/, AppleTalk, Samba FS(SMB)等。&lt;br&gt;
如果这个服务被禁用，可能会导致部分程序性能降低或出现异常。建议不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/distnoted&lt;/strong&gt;&lt;br&gt;
提供分布式的消息服务，类似notifyd，但它主要是处理系统外部的一些消息，比如 itune与iphone, ipad, itouch的连接及消息传递功能。&lt;br&gt;
如果你有使用Apple的即插即用设备，为了保证其功能正常使用，建议你不要禁用它。如果没有apple设备，保险期间，还是留着它吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/ntpd&lt;/strong&gt;&lt;br&gt;
时间同步服务，负责与time.apple.com同步操作系统的时间。这个是基础功能，请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/PrivateFrameworks/MobileDevice.framework/Versions/A/Resources/usbmuxd&lt;/strong&gt;&lt;br&gt;
USB多路传输服务，为iphone和itouch提供原生的传输支持（无需越狱）。如果你没有iphone或ipod touch，&lt;strong&gt;可以禁用这个服务&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/securityd&lt;/strong&gt;&lt;br&gt;
Mac OS安全验证模块，它保存了系统的安全信息，可以仲裁一些加密操作，为软件提供安全验证。系统安全是大事，请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/mDNSResponder&lt;/strong&gt;&lt;br&gt;
DNS多播响应器，与DNS服务相关，附属作用是为你搜索局域网里的共享设备。包括mac, windows, ichat, ipad等等，并且会显示在finder的右侧菜单中。&lt;br&gt;
请不要禁用它，否则你的DNS将失效，并导致无法访问网络。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/CoreServices/loginwindow.app/Contents/MacOS/loginwindow&lt;/strong&gt;&lt;br&gt;
Mac OS用户登陆进程，展示登陆或注销界面，验证用户密码输入，启动Finder, Dock, 和一切需要启动时启动的第三方应用程序都是这个进程的责任。&lt;br&gt;
请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/KernelEventAgent&lt;/strong&gt;&lt;br&gt;
处理文件系统的状态。比如“您的磁盘看上去已经满了，您是否需要删除一些数据，以保证系统正常启动”或“一个服务器已经很久没有响应，您是否想需要重新连接它”等。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/libexec/hidd&lt;/strong&gt;&lt;br&gt;
人体学输入设备（HID）支持进程。比如键盘，鼠标，机密狗，蓝牙等。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Support/fseventsd&lt;/strong&gt;&lt;br&gt;
文件系统事件系统，它可以广播文件的创建，删除等事件给Mac OS下的所有应用程序，届时，应用程序可以做出一些应对措施。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/sbin/dynamic_pager&lt;/strong&gt;&lt;br&gt;
Mac OS下的虚拟内存。当你的物理内存不够用时，就会使用虚拟内存，有的时候，密钥等一些使用频率不高的信息也会直接从物理内存中移除并存入虚拟内存。在 Unix系统（Mac）下，不论你的物理内存有多大，都不要尝试禁用虚拟内存。因为Unix的内存管理策略是尽可能多地使用内存，再大的内存都回随着时间 慢慢被耗光。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;autofsd&lt;/strong&gt;&lt;br&gt;
自动挂载各种网络文件系统。比如NFS, SMB, AFS等。配置文件在 /etc/auto_master和/etc/auto_home，使用方式详见：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://commandlinemac.blogspot.com/2009/09/introduction-to-autofs-in-mac-os-x.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://commandlinemac.blogspot.com/2009/09/introduction-to-autofs-in-mac-os-x.html&lt;/a&gt;&lt;br&gt;
如果你不使用任何网络文件系统，&lt;strong&gt;可以禁用这个服务&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/CoreServices/coreservicesd&lt;/strong&gt;&lt;br&gt;
核心服务守护进程，禁用它可能导致系统停止运转或崩溃。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/coreaudiod&lt;/strong&gt;&lt;br&gt;
音频服务，提供声音相关的支持。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;System/Library/Frameworks/ApplicationServices.framework/Frameworks/CoreGraphics.framework/Resources/WindowServer&lt;/strong&gt;&lt;br&gt;
Mac OS的GUI界面系统。负责所有应用程序的窗口显示。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/cvmsServ&lt;/strong&gt;&lt;br&gt;
OPGL服务进程，用到高级图形API的程序需要用到它。比如游戏，支持滑动或谈出特效的软件。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/CoreServices/Dock.app/Contents/MacOS/Dock&lt;/strong&gt;&lt;br&gt;
Mac OS经典的任务栏。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/CoreServices/SystemUIServer.app/Contents/MacOS/SystemUIServer&lt;/strong&gt;&lt;br&gt;
Mac OS的菜单栏。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/CoreServices/Finder.app/Contents/MacOS/Finder&lt;/strong&gt;&lt;br&gt;
Mac OS的资源管理器。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/pboard&lt;/strong&gt;&lt;br&gt;
剪贴板支持。除非你不想用复制，黏贴。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/Frameworks/ApplicationServices.framework/Frameworks/ATS.framework/Support/fontd&lt;/strong&gt;&lt;br&gt;
字体服务进程。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/libexec/UserEventAgent&lt;/strong&gt;&lt;br&gt;
高级别的系统事件处理器。请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/System/Library/CoreServices/Menu Extras/TextInput.menu/Contents/SharedSupport/TISwitcher.app/Contents/MacOS/TISwitcher&lt;/strong&gt;&lt;br&gt;
输入法切换服务。除非你不想使用中文输入法，否则，请不要禁用它。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/libexec/taskgated&lt;/strong&gt;&lt;br&gt;
task_for_pid是用来帮助某些想控制其他进程的执行的进程实现功能的服务。taskgated会被内核呼叫，用来确认”控制“这个行为是否可以发生。它本身也有权限验证的功能。请不要禁用该服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AirPortBaseStationAgent&lt;/strong&gt;&lt;br&gt;
这个是Apple的无线基站设备搜索服务。如果你没有apple的无线基站设备，&lt;strong&gt;可以禁用它&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spotlight&lt;/strong&gt;&lt;br&gt;
如果你不喜欢用spotlight，&lt;strong&gt;可以禁用它&lt;/strong&gt;。详见文末给出的“Mac OS启动服务优化高级篇（launchd tuning）”里的优化方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/sbin/blued&lt;/strong&gt;&lt;br&gt;
蓝牙支持服务。如果你不想使用蓝牙，&lt;strong&gt;可以禁用它&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cupsd&lt;/strong&gt;&lt;br&gt;
打印机支持。如果你不想用打印机，&lt;strong&gt;可以禁用该服务&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SharedServices.Agent&lt;/strong&gt;&lt;br&gt;
Apple的MobileMe服务，如果你不使用，&lt;strong&gt;可以禁用该服务&lt;/strong&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【译】使用 Lens Desktop 监控和调试 Kubernetes</title>
        <link>https://lxb.wiki/e94f2376/</link>
        <pubDate>Fri, 05 May 2023 08:14:34 +0800</pubDate>
        
        <guid>https://lxb.wiki/e94f2376/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://img.linux.net.cn/data/attachment/album/202305/04/193543uvvdi14469ngnop4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lens Desktop 是一个令人兴奋的 Kubernetes 工作平台。它是基于 OpenLens 资源库的一个定制化发行版本。通过本文来了解下 Lens Desktop 能做什么以及它是如何工作的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lens Desktop 是免费的。你可以查看 &lt;a class=&#34;link&#34; href=&#34;https://app.k8slens.dev/subscribe&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://app.k8slens.dev/subscribe&lt;/a&gt; 来了解更多内容。Lens Desktop 有如下优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单高效 —— 你无需学习 &lt;code&gt;kubectl&lt;/code&gt; 命令&lt;/li&gt;
&lt;li&gt;可视化已有的 Kubernetes 资源&lt;/li&gt;
&lt;li&gt;基于开源代码构建&lt;/li&gt;
&lt;li&gt;可观测性 —— 实时的统计数据、事件和日志流&lt;/li&gt;
&lt;li&gt;错误和警告可以直接在 Lens 仪表盘上看到&lt;/li&gt;
&lt;li&gt;支持 EKS、AKS、GKE、Minikube、Rancher、k0s、k3s、OpenShift&lt;/li&gt;
&lt;li&gt;强大的社区支持 —— 有 450000 用户，在 GitHub 上共获得 17000 星&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;minikube-安装&#34;&gt;Minikube 安装&lt;/h3&gt;
&lt;p&gt;Minikube 是一个用于本地运行 Kubernetes 的工具。它运行一个单节点的 Kubernetes 集群，这样就可以在 Kubernetes 上进行日常软件开发的实践工作。&lt;/p&gt;
&lt;p&gt;我们将使用 Minikube 并验证 Lens 的用法。首先让我们在基于 Windows 的系统上安装 Minikube。你也可以把它安装在其他操作系统、虚拟机或笔记本电脑上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 核以上 CPU&lt;/li&gt;
&lt;li&gt;2GB RAM&lt;/li&gt;
&lt;li&gt;20GB 空闲硬盘空间&lt;/li&gt;
&lt;li&gt;能连接网络&lt;/li&gt;
&lt;li&gt;容器或虚拟机管理器，如 Docker、VirtualBox&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在终端或命令提示符处，运行 &lt;code&gt;minikube start&lt;/code&gt; 命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube start --driver&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;virtualbox
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* minikube v1.12.3 on Microsoft Windows &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; Home Single Language 10.0.19044 Build &lt;span style=&#34;color:#ae81ff&#34;&gt;19044&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Using the virtualbox driver based on existing profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* minikube 1.26.0 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.26.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* To disable this notice, run: ‘minikube config set WantUpdateNotification false’
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Starting control plane node minikube in cluster minikube
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* virtualbox “minikube” VM is missing, will recreate.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Creating virtualbox VM &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CPUs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2, Memory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3000MB, Disk&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;20000MB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;! This VM is having trouble accessing https://k8s.gcr.io
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Preparing Kubernetes v1.18.3 on Docker 19.03.12 ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Verifying Kubernetes components...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Enabled addons: default-storageclass, storage-provisioner
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Done! kubectl is now configured to use “minikube”
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进入你的 VirtualBox，并验证刚安装的 Minikube 虚拟机功能正常（图 1）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.opensourceforu.com/wp-content/uploads/2022/08/Figure-1-Minikube-virtual-machine-in-virtual-box.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 1: Minikube virtual machine in virtual box&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;minikube status&lt;/code&gt; 命令，查看状态是否与下面的输出一致：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;gt;&lt;/span&gt;minikube status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type: Control Plane
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;host: Running
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubelet: Running
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apiserver: Running
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubeconfig: Configured
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，使用 &lt;code&gt;kubectl cluster-info&lt;/code&gt; 命令查看 KubeDNS 详情：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl cluster-info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kubernetes master is running at https://192.168.99.103:8443
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;KubeDNS is running at https://192.168.99.103:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以使用 &lt;code&gt;kubectl cluster-info dump&lt;/code&gt; 命令来调试和诊断集群问题。&lt;/p&gt;
&lt;p&gt;当 Minikube 安装完成后，安装 &lt;code&gt;kubectl&lt;/code&gt;（&lt;a class=&#34;link&#34; href=&#34;https://kubernetes.io/docs/tasks/tools/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://kubernetes.io/docs/tasks/tools/&lt;/a&gt;）。它是一个命令行集群，用于对 Kubernetes 集群和 Minikube 执行命令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050826151.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 2: Lens&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;kubectl get nodes&lt;/code&gt; 命令获取所有 node 的详情，在本例中是获取 Minikube 的详情：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;gt;&lt;/span&gt;kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME       STATUS   ROLES    AGE     VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube   Ready    master   7m57s   v1.18.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &lt;code&gt;kubectl get all&lt;/code&gt; 命令获取默认命名空间下的所有详情：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;gt;&lt;/span&gt;kubectl get all
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;S&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/kubernetes   ClusterIP   10.96.0.1    &amp;lt;none&amp;gt;        443/TCP   7m58s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们现在已经有一个 Minikube 集群，并准备好了 Kubectl。下一步是安装和配置 Lens，并用示例应用程序来验证。&lt;/p&gt;
&lt;h3 id=&#34;lens-的安装和配置&#34;&gt;Lens 的安装和配置&lt;/h3&gt;
&lt;p&gt;打开 &lt;a class=&#34;link&#34; href=&#34;https://k8slens.dev/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://k8slens.dev/&lt;/a&gt; ，下载与你的操作系统匹配的安装包。&lt;/p&gt;
&lt;p&gt;然后，参照屏幕上的教程来安装 Lens，安装完成后打开 Lens。你会发现在目录中有一个 &lt;code&gt;minikube&lt;/code&gt;（图 3）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050828133.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 3: Lens catalogue&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;点击 “minikube” 后，你就进入了 Minikube 的世界，你会爱上它的。&lt;/p&gt;
&lt;p&gt;点击 nodes 获取有关 &lt;code&gt;kubectl get nodes&lt;/code&gt; 命令输出的 node 详情。&lt;/p&gt;
&lt;p&gt;现在，你可以使用 Lens 了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050829353.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 4: Lens cluster&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们现在部署 &lt;a class=&#34;link&#34; href=&#34;https://github.com/GoogleCloudPlatform/microservices-demo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/GoogleCloudPlatform/microservices-demo&lt;/a&gt;，这是一个云原生微服务演示应用程序。它有 11 层的微服务应用，是一个基于网络的电子商务应用。&lt;/p&gt;
&lt;p&gt;下载这个应用程序，把它解压到与 Minikube 相同的目录。&lt;/p&gt;
&lt;p&gt;进入 &lt;code&gt;release&lt;/code&gt; 目录，执行以下命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f kubernetes-manifests.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/emailservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/emailservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/checkoutservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/checkoutservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/recommendationservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/recommendationservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/frontend created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/frontend created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/frontend-external created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/paymentservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/paymentservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/productcatalogservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/productcatalogservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/cartservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/cartservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/loadgenerator created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/currencyservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/currencyservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/shippingservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/shippingservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/redis-cart created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/redis-cart created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/adservice created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service/adservice created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装过程现在应该已经开始了，不过它需要一些时间来反映出我们使用了 &lt;code&gt;kubectl&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050829421.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 5: Lens nodes&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                 READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adservice-775d8b9bf5-cp7jr   0/1     Pending   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;          8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cartservice-79749895f5-jrq4d  1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;checkoutservice-5645bf9c65-882m4  1/1   Running  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;currencyservice-545c79d477-8rhg7  1/1  Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;emailservice-7cc5c74b4f-hk74s     1/1  Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;frontend-9cdf787f5-klfkh    1/1     Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadgenerator-7b6874cb4c-645v9   1/1  Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;paymentservice-5f74bc7b87-l4248  1/1  Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;productcatalogservice-6846f59899-v4q4w  1/1  Running  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recommendationservice-d9c6c8b55-m2x9k  1/1  Running   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;redis-cart-57bd646894-v7kfr    0/1   Pending   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;         8h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shippingservice-8685dd9855-pmgjm  1/1  Running  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        8h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;表 1 列出了你可以通过 &lt;code&gt;kubectl&lt;/code&gt; 来获取信息的几个命令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050829835.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 6: Lens pods&#34;
	
	
&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;命令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出节点&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get node&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出集群中的所有资源&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get all –all-namespaces&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出部署&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get deployment&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;显示部署的完整状态&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl describe deployment &amp;lt;deployment_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;修改集群上的部署&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl edit deployment &amp;lt;deployment_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除部署&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl delete deployment &amp;lt;deployment_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出容器荚&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get pod&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;删除容器荚&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl delete pod &amp;lt;pod_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;显示容器荚的完整状态&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl describe pod &amp;lt;pod_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在 Shell 中运行一个单容器荚&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl exec -it &amp;lt;pod_name&amp;gt; /bin/bash&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出机密信息&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get secrets&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出服务&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get services&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出服务的完整状态&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl describe services&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;修改集群中的服务&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl edit services / kubectl edit deployment &amp;lt;deployment_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;列出命名空间&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl get namespace &amp;lt;namespace_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印容器荚日志&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl logs &amp;lt;pod_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;打印容器荚中特定容器的日志&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;kubectl logs -c &amp;lt;container_name&amp;gt; &amp;lt;pod_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Lens 不仅可以帮你获取表 1 中列出的所有信息，它还可以获取指定集群的信息。我们还能用 Lens 来对 Kubernetes 资源进行编辑和删除操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050830403.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 7: Lens deployments&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们来看下是如何操作的。在 Workloads 部分选择 Pods（图 6），我们能通过 Lens 来编辑、删除、查看日志、访问 Pod 的终端，这是不是很酷？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050830853.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 8: Lens Replicasets&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;你可以验证 Workloads 区域中所有 deployments（图 7），Workloads 区域中所有 Replicasets （图 8），Config 区域中所有 Secrets （图 9），以及 Network 区域中所有 Services 是否都正常（图 10），&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050830883.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 9: Lens Secrets&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;你可以看到，跳转到所有的资源以及在一个地方高效地查看所有资源就是如此轻松。我们可以用 Lens 修改 YAML 文件，在运行时应用它来查看变更。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/202305050831236.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Figure 10: Lens Services&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;对于配置在不同的云服务商部署的多个集群，我们仍可以用 Lens 来进行观察和故障处理。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（题图：MJ/069da8c5-9043-46b3-9b14-87a0ffc6bb35）&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://www.opensourceforu.com/2022/09/monitoring-and-debugging-kubernetes-with-lens-desktop/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.opensourceforu.com/2022/09/monitoring-and-debugging-kubernetes-with-lens-desktop/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://www.opensourceforu.com/author/mitesh_soni/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mitesh Soni&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lkxed&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lkxed&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xiaobin.Liu&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Raycast 插件开发</title>
        <link>https://lxb.wiki/be3b141a/</link>
        <pubDate>Wed, 26 Apr 2023 21:46:01 +0800</pubDate>
        
        <guid>https://lxb.wiki/be3b141a/</guid>
        <description>&lt;p&gt;Raycast 插件使用 tsx+react 开发，可以使用 &lt;code&gt;Nodejs(&amp;gt;=16.10)&lt;/code&gt; 生态来完成各种功能，但是在界面绘制上，仅支持官方在 &lt;code&gt;@raycast/api&lt;/code&gt; 包中提供的控件。
其新建项目的具体步骤可参考 &lt;a class=&#34;link&#34; href=&#34;https://developers.raycast.com/basics/create-your-first-extension&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;command&#34;&gt;Command&lt;/h2&gt;
&lt;p&gt;在 Raycast 中，插件的核心是 &amp;ldquo;Command&amp;rdquo; 。这些 Command 会直接列举在呼出的面板上，并依旧你的使用习惯进行排序。Command 之间可以共享，传递数据，但是并不共享页面。 这点与 uTools 有较大的不同。在 uTools 中，一个插件往往就是一个界面，通过对界面进行各种控件的排布来直接完成对应功能。 但是由于 Raycast 目前并不提供自行绘制 UI 的能力，所以基本的 UI 控件只能单独占有一个页面，通过跳转页面来完成功能执行结果的输出。 所以将其分为两大类，控件与功能，同时控件又分为以下三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;界面主体控件：它会铺满整个页面，而你的发挥也会被限制在它可接受的子控件范围内。&lt;/li&gt;
&lt;li&gt;命令面板： Raycast 中，无法自行放置按钮，而是统一通过右下角的命令面板来执行需要的功能。&lt;/li&gt;
&lt;li&gt;其它 UI 相关：可在界面中进行组合使用的小控件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主体控件&#34;&gt;主体控件&lt;/h3&gt;
&lt;p&gt;目前官方提供的主体控件有三种：列表(List)，详情(Detail)，和表单(Form)。&lt;/p&gt;
&lt;h4 id=&#34;列表-list&#34;&gt;列表 List&lt;/h4&gt;
&lt;p&gt;下图所示即为一个标准的列表页面。由顶部的输入框，页面中的列表，右下角的命令面板组成。 其中列表作为主体控件，其子控件为数个列表项(List.Item)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202402262055350.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;详情-detail&#34;&gt;详情 Detail&lt;/h4&gt;
&lt;p&gt;如图所示，其实它只是一个文本展示的界面。你可以靠它渲染一个 Markdown 文档，不过也仅此而已。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202402262055612.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;表单-form&#34;&gt;表单 Form&lt;/h4&gt;
&lt;p&gt;较新添加的控件，可以让你在页面上完成更进一步的交互，子控件也最为丰富，支持输入框，区域输入，下拉框，多选，标签选择，日期选择等功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202402262056241.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令面板&#34;&gt;命令面板&lt;/h2&gt;
&lt;p&gt;命令面板以 ActionPanel 为容器，以 Action 作为具体功能的执行入口，并且可以通过 Section 等将命令分组，达到更加直观高效的目的。 通过预设的 Action，你可以操作剪切板，打开浏览器，提交表单，开启访达，跳转页面等功能；当然亦可以自行编写函数来执行，可算得上 Raycast 的灵魂所在。 在主体控件(List,Detail,Form)中，均可以接受一个 actions 参数。而我们所编写的命令，也都是传入此处才可以被在当前页面访问到。&lt;/p&gt;
&lt;h2 id=&#34;其它-ui-相关&#34;&gt;其它 UI 相关&lt;/h2&gt;
&lt;p&gt;目前有两点：Icon 和 Color。 前者可以在 ListItem，Action 等控件上作为参数传入，提供显示图标的能力。而且同时支持 Raycast 内置的图标库和外部图片资源（打包进插件的图片或者网络图片） 后者则是提供对 Icon 的统一着色功能，支持直接调用内置的色彩变量与自行传入色值。&lt;/p&gt;
&lt;h2 id=&#34;功能性-api&#34;&gt;功能性 API&lt;/h2&gt;
&lt;p&gt;除了界面，作为一个效率工具，自然还需要和系统进行交互，来完成各种功能，绝大部分在 utilities 中提供。 包括但不限于：获取应用列表，获取默认应用，操作文件（打开、删除、显示），本地数据读写等。&lt;/p&gt;
&lt;h2 id=&#34;preference&#34;&gt;Preference&lt;/h2&gt;
&lt;p&gt;从层级来讲，它与 Command 呈现并列关系。同样，使用此功能需要在 package.json 中进行声明。如果设定为 required=true，则在运行 Command 前，插件会先要求用户完成设定项。适用于指引用户完成填写用户名，API，token 等行为。&lt;/p&gt;
&lt;h2 id=&#34;提交与发布&#34;&gt;提交与发布&lt;/h2&gt;
&lt;p&gt;目前来讲，插件的发布流程依旧不甚友好。在你构建的插件符合其官方的种种要求的基础上，你需要自行 fork 官方的插件仓库，补充你的插件代码以后提交一个 pr，经过审核后方才可以。值得注意的是，截止到本文写作，官方依旧仅支持英文插件，无论是插件指令还是操作说明，均需为英文（即使你的插件并不面向英文用户），否则无法通过审核。当然，即使不去发布，仅仅自用，也是完全可以的。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【译】用 Tekton 在 Kubernetes 中编写你的第一条 CI/CD 流水线</title>
        <link>https://lxb.wiki/2966fc1/</link>
        <pubDate>Sat, 01 Apr 2023 23:09:26 +0000</pubDate>
        
        <guid>https://lxb.wiki/2966fc1/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Tekton 是一个用于创建持续集成和持续交付（CI/CD）系统的 Kubernetes 原生开源框架。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://img.linux.net.cn/data/attachment/album/202304/01/180822blxgx0c1k43n4kl4.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Tekton 是一个用于创建持续集成和持续交付（CI/CD）系统的 Kubernetes 原生开源框架。通过对底层实施细节的抽象，它还可以帮助你在多个云供应商或企业内部系统中进行端到端（构建、测试、部署）应用开发。&lt;/p&gt;
&lt;h3 id=&#34;tekton-介绍&#34;&gt;Tekton 介绍&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/tektoncd/pipeline&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tekton&lt;/a&gt; 最初被称为 &lt;a class=&#34;link&#34; href=&#34;https://github.com/knative/build&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Knative Build&lt;/a&gt;，后来被重组为独立的开源项目，有自己的 &lt;a class=&#34;link&#34; href=&#34;https://cd.foundation/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;治理组织&lt;/a&gt;，现在是属于 &lt;a class=&#34;link&#34; href=&#34;https://www.linuxfoundation.org/projects/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux 基金会&lt;/a&gt; 的项目。Tekton 提供了一个集群内的容器镜像构建和部署工作流程，换句话说，它是一个 &lt;!-- raw HTML omitted --&gt;持续集成&lt;!-- raw HTML omitted --&gt;continuous integration&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（CI）和 &lt;!-- raw HTML omitted --&gt;持续交付&lt;!-- raw HTML omitted --&gt;continuous delivery&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（CD）服务。它由 Tekton 流水线和几个支持组件如 Tekton CLI、Triggers 和 Catalog 等组成。&lt;/p&gt;
&lt;p&gt;Tekton 是一个 Kubernetes 原生应用。它在 Kubernetes 集群中作为扩展被安装和运行，由一套Kubernetes 定制化资源组成，定义了你为流水线创建和复用的构建块。由于 Tekton 是一种 Kubernetes 原生技术，所以它非常容易扩展。当你需要增加你的工作负载时，你只需向你的集群添加节点就可以了。由于其可扩展的设计和社区贡献的组件库，它也很容易定制。&lt;/p&gt;
&lt;p&gt;对于需要 CI/CD 系统来开展工作的开发人员，和为其组织内的开发人员建立 CI/CD 系统的平台工程师，Tekton 是理想选择。&lt;/p&gt;
&lt;h3 id=&#34;tekton组件&#34;&gt;Tekton 组件&lt;/h3&gt;
&lt;p&gt;构建 CI/CD 流水线的过程非常复杂，因此 Tekton 为每一步都提供工具。以下是 Tekton 提供的主要组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;流水线&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;Pipeline&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;： 定义了一组 Kubernetes &lt;a class=&#34;link&#34; href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;自定义资源&lt;/a&gt;，作为你用来组装 CI/CD 流水线的构建块。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;触发器&lt;!-- raw HTML omitted --&gt;Triggers&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：一种 Kubernetes 自定义资源，允许你根据从事件有效载荷中提取的信息来创建流水线。例如，你可以在每次创建 Git 仓库的合并请求时，触发流水线的实例化和执行。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;命令行&lt;!-- raw HTML omitted --&gt;CLI&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：提供一个名为 &lt;code&gt;tkn&lt;/code&gt; 的命令行界面，你可以使用它从终端与 Tekton 进行交互。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;仪表盘&lt;!-- raw HTML omitted --&gt;Dashboard&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是 Tekton 流水线的一个基于网页的图形界面，显示流水线的执行信息。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;目录&lt;!-- raw HTML omitted --&gt;Catalog&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是一个高质量的、由社区贡献的 Tekton 构建块（任务、流水线等），可在你自己的流水线中使用。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;中心&lt;!-- raw HTML omitted --&gt;Hub&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是一个基于网页的图形界面，用于访问 Tekton 目录。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;操作员&lt;!-- raw HTML omitted --&gt;Operator&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是一种 Kubernetes &lt;a class=&#34;link&#34; href=&#34;https://operatorhub.io/what-is-an-operator&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;操作员模式&lt;/a&gt;，你可以在 Kubernetes 集群中安装、更新、升级和删除 Tekton 项目。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;链&lt;!-- raw HTML omitted --&gt;Chains&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是一个 Kubernetes &lt;!-- raw HTML omitted --&gt;自定义资源定义&lt;!-- raw HTML omitted --&gt;Custom Resource Definition&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（CRD）控制器，使你可以在 Tekton 中处理供应链安全的问题。正在开发中。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;结果&lt;!-- raw HTML omitted --&gt;Results&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：旨在帮助用户对 CI/CD 工作负载历史进行逻辑分组，并将长期结果的存储从流水线控制器中分离出来。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tekton-术语&#34;&gt;Tekton 术语&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/tekto-terminology.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Tekton terminology&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;步骤&lt;!-- raw HTML omitted --&gt;Step&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是 CI/CD 工作流程中最基本的实体，例如为 Python 网络应用程序运行一些单元测试或编译一个 Java 程序。Tekton 使用容器镜像执行每个步骤。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;任务&lt;!-- raw HTML omitted --&gt;Task&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：:** 是按特定顺序排列的步骤的集合。Tekton 以 &lt;a class=&#34;link&#34; href=&#34;https://kubebyexample.com/en/concept/pods&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kubernetes 容器荚&lt;/a&gt; 的形式运行任务，其中每个步骤都成为 &lt;!-- raw HTML omitted --&gt;容器荚&lt;!-- raw HTML omitted --&gt;pod&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; 中的一个运行容器。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;流水线&lt;!-- raw HTML omitted --&gt;Pipelines&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是按特定顺序排列的任务的集合。Tekton 把所有任务连接成一个 &lt;!-- raw HTML omitted --&gt;有向无环图&lt;!-- raw HTML omitted --&gt;directed acyclic graph&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（DAG），并按顺序执行图。换句话说，它创建了一些 Kubernetes 容器荚，并确保每个容器荚按预期成功运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/tekton-pipelines.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Tekton pipelines&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;流水线运行&lt;!-- raw HTML omitted --&gt;PipelineRun&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：顾名思义，是一条流水线的具体执行。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;任务运行&lt;!-- raw HTML omitted --&gt;TaskRun&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;：是一个任务的具体执行。你可以选择在流水线外运行一次任务运行，可以通过它查看任务中每个步骤执行的具体情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建你的-cicd-流水线&#34;&gt;创建你的 CI/CD 流水线&lt;/h3&gt;
&lt;p&gt;开始使用 Tekton 的最简单方法是自己编写一个简单的流水线。如果你每天都在使用 Kubernetes，那你可能对 YAML 很熟悉，这正是 Tekton 流水线的定义方式。下面是一个克隆代码库的简单流水线的例子。&lt;/p&gt;
&lt;p&gt;首先，创建一个 &lt;code&gt;task.yaml&lt;/code&gt; 文件，用你喜欢的文本编辑器打开它。这个文件定义了你要执行的 &lt;!-- raw HTML omitted --&gt;步骤&lt;!-- raw HTML omitted --&gt;Step&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;。在这个例子中，就是克隆一个仓库，所以我把这个步骤命名为 “clone”。该文件设置了一些环境变量，然后使用一个简单的 shell 脚本来执行克隆。&lt;/p&gt;
&lt;p&gt;接下来是 &lt;!-- raw HTML omitted --&gt;任务&lt;!-- raw HTML omitted --&gt;Task&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;。你可以把步骤看作是一个被任务调用的函数，而任务则设置步骤所需的参数和工作空间。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Task&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;git-clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; workspaces&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;The git repo will be cloned onto the volume backing this Workspace.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; params&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;url&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Repository URL to clone from.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;revision&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Revision to checkout. (branch, tag, sha, ref, etc...)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     default&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PARAM_URL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(params.url)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PARAM_REVISION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(params.revision)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;WORKSPACE_OUTPUT_PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(workspaces.output.path)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     script&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;     &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       set -eu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       CHECKOUT_DIR=&amp;#34;${WORKSPACE_OUTPUT_PATH}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       /ko-app/git-init \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;         -url=&amp;#34;${PARAM_URL}&amp;#34; \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;         -revision=&amp;#34;${PARAM_REVISION}&amp;#34; \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;         -path=&amp;#34;${CHECKOUT_DIR}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       cd &amp;#34;${CHECKOUT_DIR}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       EXIT_CODE=&amp;#34;$?&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       if [ &amp;#34;${EXIT_CODE}&amp;#34; != 0 ] ; then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;         exit &amp;#34;${EXIT_CODE}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       # Verify clone is success by reading readme file.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       cat ${CHECKOUT_DIR}/README.md&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建第二个文件 &lt;code&gt;pipeline.yaml&lt;/code&gt;，并用你喜欢的文本编辑器打开它。这个文件通过设置诸如可以运行和处理任务的工作区等重要参数来定义流水线。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Pipeline&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cat-branch-readme&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; params&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;repo-url&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;The git repository URL to clone from.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;branch-name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;The git branch to clone.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; workspaces&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;shared-data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     description&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;      This workspace will receive the cloned git repo and be passed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;       to the next Task for the repo&amp;#39;s README.md file to be read.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; tasks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;fetch-repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     taskRef&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;git-clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     workspaces&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         workspace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;shared-data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     params&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;url&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(params.repo-url)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;revision&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(params.branch-name)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，创建一个 &lt;code&gt;pipelinerun.yaml&lt;/code&gt; 文件，用喜欢的文本编辑器打开它。这个文件真正的运行流水线。它调用流水线中定义的参数（继而调用任务文件中定义的任务）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PipelineRun&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;git-clone-checking-out-a-branch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; pipelineRef&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cat-branch-readme&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; workspaces&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;shared-data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     volumeClaimTemplate&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;       spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         accessModes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;          - ReadWriteOnce&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;         resources&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;           requests&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;             storage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1Gi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt; params&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;repo-url&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;https://github.com/tektoncd/pipeline.git&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;   - name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;branch-name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;     value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release-v0.12.x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;把不同工作分在不同的文件中的好处是，&lt;code&gt;git-clone&lt;/code&gt; 任务可以在多条流水线中复用。&lt;/p&gt;
&lt;p&gt;例如，假设你想为一个流水线项目做端到端的测试。你可以使用 &lt;code&gt;git-clone&lt;/code&gt; 任务 &lt;strong&gt;来让每一次测试都基于最新的代码&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;只要你熟悉 Kubernetes，那 Tekton 对你来说就像其他 Kubernetes 原生应用一样简单。它有很多工具可以帮助你创建流水线并与之交互。如果你喜欢自动化，不妨试试 Tekton!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/21/11/cicd-pipeline-kubernetes-tekton&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/21/11/cicd-pipeline-kubernetes-tekton&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://opensource.com/users/savita-ashture&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Savita Ashture&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xiaobin.Liu&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Jenkins中的环境变量</title>
        <link>https://lxb.wiki/a5c52f2c/</link>
        <pubDate>Sun, 12 Mar 2023 21:51:09 +0800</pubDate>
        
        <guid>https://lxb.wiki/a5c52f2c/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122156161.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;准备&lt;/h2&gt;
&lt;p&gt;如果你想一边阅读本文，一边实践，但是没有 Jenkins 服务可用，又想快速尝试，可以应用 Docker 一个命令快速搭建 Jenkins 服务&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker container run --rm -p 8080:8080 -p 50000:50000 --name=jenkins -v $(pwd):/var/jenkins_home jenkins/jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;2021 年了，本地没有 Docker 说不过去了，过来瞧瞧 Docker 系列是否入得了你的法眼？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开浏览器输入：&lt;code&gt;localhost:8080&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到终端的临时密码登陆&lt;/li&gt;
&lt;li&gt;安装推荐的依赖&lt;/li&gt;
&lt;li&gt;创建新的 Pipeline 类型的 Item&lt;/li&gt;
&lt;li&gt;点击左侧 Config，然后在页面底部 Pipeline 部分输入我们接下来写的脚本进行测试就好了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122157396.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;就是这么简单&amp;hellip;..&lt;/p&gt;
&lt;h2 id=&#34;认识-jenkins-环境变量&#34;&gt;认识 Jenkins 环境变量&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Jenkins 环境变量就是通过 &lt;code&gt;env&lt;/code&gt; 关键字暴露出来的&lt;strong&gt;全局变量&lt;/strong&gt;，可以在 Jenkins 文件的&lt;strong&gt;任何位置使用&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实和你使用的编程语言中的全局变量没有实质差别&lt;/p&gt;
&lt;h3 id=&#34;查看-jenkins-系统内置环境变量&#34;&gt;查看 Jenkins 系统内置环境变量&lt;/h3&gt;
&lt;p&gt;Jenkins 在系统内置了很多环境变量方便我们快速使用，查看起来有两种方式：&lt;/p&gt;
&lt;h4 id=&#34;方式一&#34;&gt;方式一：&lt;/h4&gt;
&lt;p&gt;直接在浏览器中访问 &lt;code&gt;${YOUR_JENKINS_HOST}/env-vars.html&lt;/code&gt; 页面就可以，比如 &lt;code&gt;http://localhost:8080/env-vars.html&lt;/code&gt; ，每个变量的用途写的都很清楚&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122157715.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;方式二&#34;&gt;方式二&lt;/h4&gt;
&lt;p&gt;通过执行 &lt;code&gt;printenv&lt;/code&gt; shell 命令来获取：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipeline {
    agent any

    stages {
        stage(&amp;#34;Env Variables&amp;#34;) {
            steps {
                sh &amp;#34;printenv&amp;#34;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直接 Save - Build, 在终端 log 中你会看到相应的环境变量，并且可以快速看到他们当前的值&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122157942.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;通常这两种方式可以结合使用&lt;/p&gt;
&lt;h3 id=&#34;读取环境变量&#34;&gt;读取环境变量&lt;/h3&gt;
&lt;p&gt;上面我们说了 &lt;code&gt;env&lt;/code&gt; 是环境变量的关键字，但是读取 Jenkins 内置的这些环境变量，&lt;code&gt;env&lt;/code&gt; 关键字是可有可无, 但不能没了底裤，都要使用 &lt;code&gt;${xxx}&lt;/code&gt; 包围起来。以 &lt;code&gt;BUILD_NUMBER&lt;/code&gt; 这个内置环境变量举例来说明就是这样滴：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122157008.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果你在 Jenkins 文件中使用 shell 命令，使用这些内置环境变量甚至可以不用 &lt;code&gt;{}&lt;/code&gt;， 来看一下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipeline {
    agent any

    stages {
        stage(&amp;#34;Read Env Variables&amp;#34;) {
            steps {
                echo &amp;#34;带 env 的读取方式：${env.BUILD_NUMBER}&amp;#34;
                echo &amp;#34;不带 env 的读取方式：${BUILD_NUMBER}&amp;#34;
                sh &amp;#39;echo &amp;#34;shell 中读取方式 $BUILD_NUMBER&amp;#34;&amp;#39;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到结果是一样一样滴，&lt;strong&gt;不管有几种，记住第一种最稳妥&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122157970.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;内置的环境变量虽好，但也不能完全满足我们自定义的 pipeline 的执行逻辑，所以我们也得知道如何定义以及使用自定义环境变量&lt;/p&gt;
&lt;h2 id=&#34;自定义-jenkins-环境变量&#34;&gt;自定义 Jenkins 环境变量&lt;/h2&gt;
&lt;p&gt;Jenkins pipeline 分声明式（Declarative）和 脚本式（imperative）写法，相应的环境变量定义方式也略有不同，归纳起来有三种方式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122158337.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;还是看个实际例子吧：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipeline {
    agent any

    environment {
        FOO = &amp;#34;bar&amp;#34;
    }

    stages {
        stage(&amp;#34;Custom Env Variables&amp;#34;) {
            environment {
                NAME = &amp;#34;RGYB&amp;#34;
            }

            steps {
                echo &amp;#34;FOO = ${env.FOO}&amp;#34;
                echo &amp;#34;NAME = ${env.NAME}&amp;#34;

                script {
                    env.SCRIPT_VARIABLE = &amp;#34;Thumb Up&amp;#34;
                }

                echo &amp;#34;SCRIPT_VARIABLE = ${env.SCRIPT_VARIABLE}&amp;#34;

                withEnv([&amp;#34;WITH_ENV_VAR=Come On&amp;#34;]) {
                    echo &amp;#34;WITH_ENV_VAR = ${env.WITH_ENV_VAR}&amp;#34;
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来看运行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122158815.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;code&gt;withEnv([&amp;quot;WITH_ENV_VAR=Come On&amp;quot;]) {}&lt;/code&gt; &lt;strong&gt;这里的 = 号两侧不能有空格&lt;/strong&gt;，必须是 &lt;code&gt;key=value&lt;/code&gt; 的形式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个完整的 pipeline 通常会有很多个 stage，环境变量在不同的 stage 有不同的值是很常见的，知道如何设置以及读取环境变量后，我们还得知道如何重写环境变量&lt;/p&gt;
&lt;h2 id=&#34;重写-jenkins-环境变量&#34;&gt;重写 Jenkins 环境变量&lt;/h2&gt;
&lt;p&gt;Jenkins 让人相对困惑最多的地方就是重写环境变量，但是只要记住下面这三条规则，就可以搞定一切了&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;withEnv([&amp;quot;WITH_ENV_VAR=Come On&amp;quot;]) {}&lt;/code&gt; 内置函数的这种写法，可以重写任意环境变量&lt;/li&gt;
&lt;li&gt;定义在 &lt;code&gt;environment {}&lt;/code&gt; 的环境变量不能被脚本式定义的环境变量（&lt;code&gt;env.key=&amp;quot;value&amp;quot;&lt;/code&gt;）重写&lt;/li&gt;
&lt;li&gt;脚本式环境变量只能重写脚本式环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这三点是硬规则，没涵盖在这 3 点规则之内的也就是被允许的了&lt;/p&gt;
&lt;p&gt;三条规则就有点让人头大了，农夫选豆种，举例为证吧&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipeline {
    agent any

    environment {
        FOO = &amp;#34;你当像鸟飞往你的山&amp;#34;
        NAME = &amp;#34;Tan&amp;#34;
    }

    stages {
        stage(&amp;#34;Env Variables&amp;#34;) {
            environment {
                  // 会重写第 6 行 变量
                NAME = &amp;#34;RGYB&amp;#34; 
                  // 会重写系统内置的环境变量 BUILD_NUMBER
                BUILD_NUMBER = &amp;#34;10&amp;#34; 
            }

            steps {
                  // 应该打印出 &amp;#34;FOO = 你当像鸟飞往你的山&amp;#34;
                echo &amp;#34;FOO = ${env.FOO}&amp;#34; 
                  // 应该打印出 &amp;#34;NAME = RGYB&amp;#34;
                echo &amp;#34;NAME = ${env.NAME}&amp;#34; 
                  // 应该打印出 &amp;#34;BUILD_NUMBER = 10&amp;#34;
                echo &amp;#34;BUILD_NUMBER =  ${env.BUILD_NUMBER}&amp;#34; 

                script {
                      // 脚本式创建一个环境变量
                    env.SCRIPT_VARIABLE = &amp;#34;1&amp;#34; 
                }
            }
        }

        stage(&amp;#34;Override Variables&amp;#34;) {
            steps {
                script {
                      // 这里的 FOO 不会被重写，违背 Rule No.2
                    env.FOO = &amp;#34;Tara&amp;#34;
                      // SCRIPT_VARIABLE 变量会被重写，符合 Rule No.3
                    env.SCRIPT_VARIABLE = &amp;#34;2&amp;#34; 
                }

                  // FOO 在第 37 行重写失败，还会打印出 &amp;#34;FOO = 你当像鸟飞往你的山&amp;#34;
                echo &amp;#34;FOO = ${env.FOO}&amp;#34; 
                  // 会打印出 &amp;#34;SCRIPT_VARIABLE = 2&amp;#34;
                echo &amp;#34;SCRIPT_VARIABLE = ${env.SCRIPT_VARIABLE}&amp;#34; 

                  // FOO 会被重写，符合 Rule No.1
                withEnv([&amp;#34;FOO=Educated&amp;#34;]) { 
                      // 应该打印 &amp;#34;FOO = Educated&amp;#34;
                    echo &amp;#34;FOO = ${env.FOO}&amp;#34; 
                }

                  // 道理同上
                withEnv([&amp;#34;BUILD_NUMBER=15&amp;#34;]) {
                      // 应该打印出 &amp;#34;BUILD_NUMBER = 15&amp;#34;
                    echo &amp;#34;BUILD_NUMBER = ${env.BUILD_NUMBER}&amp;#34;
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来验证一下结果吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122158213.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122158747.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看到这，基本的设置应该就没有什么问题了，相信你也发现了，Jenkins 设置环境变量和编程语言的那种设置环境变量还是略有不同的，后者可以将变量赋值为对象，但 Jenkins 就不行，因为&lt;strong&gt;在 Jenkins 文件中，所有设置的值都会被当成 String&lt;/strong&gt;， 难道没办法应用 Boolean 值吗？&lt;/p&gt;
&lt;h2 id=&#34;jenkins-中使用-boolean-值&#34;&gt;Jenkins 中使用 Boolean 值&lt;/h2&gt;
&lt;p&gt;如果设置一个变量为 &lt;code&gt;false&lt;/code&gt; ，Jenkins 就会将其转换为 &lt;code&gt;&amp;quot;false&amp;quot;&lt;/code&gt;, 如果想使用 Boolean 来做条件判断，必须要调用 &lt;code&gt;toBoolean()&lt;/code&gt; 方法做转换&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipeline {
    agent any

    environment {
        IS_BOOLEAN = false
    }

    stages {
        stage(&amp;#34;Env Variables&amp;#34;) {
            steps {
                script {
                      
                    if (env.IS_BOOLEAN) {
                        echo &amp;#34;Hello&amp;#34;
                    }

                      
                    if (env.IS_BOOLEAN.toBoolean() == false) {
                        echo &amp;#34;日拱一兵&amp;#34;
                    }
                  
                      
                    if (!env.IS_BOOLEAN.toBoolean()) {
                        echo &amp;#34;RGYB&amp;#34;
                    }
                }
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来看运行结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122159629.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果你写过 Pipeline，你一定会知道，写 Pipeline 是离不开写 shell 的，有些时候，需要将 shell 的执行结果赋值给环境变量，Jenkins 也有方法支持&lt;/p&gt;
&lt;h2 id=&#34;shell-结果赋值给环境变量&#34;&gt;Shell 结果赋值给环境变量&lt;/h2&gt;
&lt;p&gt;实现这种方式很简单，只需要记住一个格式：&lt;code&gt;sh(script: &#39;cmd&#39;, returnStdout:true)&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipeline {
    agent any

    environment {
          
        LS_RESULT = &amp;#34;${sh(script:&amp;#39;ls -lah&amp;#39;, returnStdout: true).trim()}&amp;#34;
    }

    stages {
        stage(&amp;#34;Env Variables&amp;#34;) {
            steps {
                echo &amp;#34;LS_RESULT = ${env.LS_RESULT}&amp;#34;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202311122159489.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>开放共享协议</title>
        <link>https://lxb.wiki/c12bcad7/</link>
        <pubDate>Sun, 05 Feb 2023 21:58:44 +0800</pubDate>
        
        <guid>https://lxb.wiki/c12bcad7/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;Creative Commons Attribution 4.0 International License (CC BY 4.0)【署名】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：用户可以复制、发行、展览、表演、放映、广播或通过信息网络传播此作品，但必须按照提交者指定的方式对作品进行署名。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA4.0)【署名-相同方式共享】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：用户可以复制、发行、展览、表演、放映、广播或通过信息网络传播此作品，但必须按照提交者指定的方式对作品进行署名，若改变、转变或变更本作品，必须遵守与本作品相同的授权条款才能传播由本作品产生的演绎作品。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Creative Commons Attribution-Noncommercial 4.0 International License (CC BY-NC 4.0)【署名-非商业使用】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：用户可以复制、发行、展览、表演、放映、广播或通过信息网络传播此作品，但必须按照提交者指定的方式对作品进行署名，并且不得为商业目的使用本作品。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Creative Commons Attribution-Noncommercial-ShareAlike 4.0 International License (CC BY-NC-SA 4.0) 【署名-非商业使用-相同方式共享】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：用户可以复制、发行、展览、表演、放映、广播或通过信息网络传播此作品，但必须按照提交者指定的方式对作品进行署名，并且不得为商业目的而使用本作品。若改变、转变或变更本作品，必须遵守与本作品相同的授权条款才能传播由本作品产生的演绎作品。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Creative Commons Attribution-NoDerivatives 4.0 International License(CC BY-ND 4.0)【署名-禁止演绎】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：用户可以复制、发行、展览、表演、放映、广播或通过信息网络传播此作品，但必须按照提交者指定的方式对作品进行署名。若用户再混合、转换、或者基于该作品进行创作，则不可以传播由本作品产生的演绎作品。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License(CC BY-NC-ND 4.0)【署名-非商业使用-禁止演绎】&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：用户可以复制、发行、展览、表演、放映、广播或通过信息网络传播此作品，但必须按照提交者指定的方式对作品进行署名，并且不得为商业目的使用本作品。若用户再混合、转换、或者基于该作品进行创作，则不可以传播由本作品产生的演绎作品。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Creative Commons Public Domain Dedication (CC0 1.0)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：社会公众可以以任何方式、出于任何目的免费使用该作品)。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【译】10大静态网站生成工具</title>
        <link>https://lxb.wiki/690c8418/</link>
        <pubDate>Sun, 02 Oct 2022 18:26:55 +0000</pubDate>
        
        <guid>https://lxb.wiki/690c8418/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;在寻找部署静态网页的方法吗？这几个开源的静态网站生成工具可以帮你迅速部署界面优美、功能强大的静态网站，无需掌握复杂的 HTML 和 CSS 技能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;静态网站是什么&#34;&gt;静态网站是什么？&lt;/h3&gt;
&lt;p&gt;技术上来讲，静态网站是指网页不是由服务器动态生成的。HTML、CSS 和 JavaScript 文件就静静地躺在服务器的某个路径下，它们的内容与终端用户接收到的版本是一样的。原始的源码文件已经提前编译好了，源码在每次请求后都不会变化。&lt;/p&gt;
&lt;p&gt;Linux.CN 是一个依赖多个数据库的动态网站，当有浏览器的请求时，网页就会生成并提供服务。大部分网站是动态的，你与这些网站互动时，大量的内容会经常改变。&lt;/p&gt;
&lt;p&gt;静态网站有一些好处，比如加载时间更短，请求的服务器资源更少、更安全（值得商榷）。&lt;/p&gt;
&lt;p&gt;传统上，静态网站更适合于创建只有少量网页、内容变化不频繁的小网站。&lt;/p&gt;
&lt;p&gt;然而，随着静态网站生成工具出现后，静态网站的适用范围越来越大。你还可以使用这些工具搭建博客网站。&lt;/p&gt;
&lt;p&gt;我整理了几个开源的静态网站生成工具，这些工具可以帮你搭建界面优美的网站。&lt;/p&gt;
&lt;h3 id=&#34;最好的开源静态网站生成工具&#34;&gt;最好的开源静态网站生成工具&lt;/h3&gt;
&lt;p&gt;请注意，静态网站不会提供很复杂的功能。如果你需要复杂的功能，那么你可以参考适用于动态网站的&lt;a class=&#34;link&#34; href=&#34;https://itsfoss.com/open-source-cms/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;最佳开源 CMS&lt;/a&gt;列表。&lt;/p&gt;
&lt;h4 id=&#34;1jekyll&#34;&gt;1、Jekyll&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230847472.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Jekyll 是用 &lt;a class=&#34;link&#34; href=&#34;https://www.ruby-lang.org/en/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ruby&lt;/a&gt; 写的最受欢迎的开源静态生成工具之一。实际上，Jekyll 是 &lt;a class=&#34;link&#34; href=&#34;https://pages.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt; 的引擎，它可以让你免费用 GitHub 托管网站。&lt;/p&gt;
&lt;p&gt;你可以很轻松地跨平台配置 Jekyll，包括 Ubuntu。它利用 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Shopify/liquid/wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Markdown&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/Shopify/liquid/wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Liquid&lt;/a&gt;（模板语言）、HTML 和 CSS 来生成静态的网页文件。如果你要搭建一个没有广告或推广自己工具或服务的产品页的博客网站，它是个不错的选择。&lt;/p&gt;
&lt;p&gt;它还支持从常见的 CMS（&lt;!-- raw HTML omitted --&gt;内容管理系统&lt;!-- raw HTML omitted --&gt;Content management system&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;）如 Ghost、WordPress、Drupal 7 迁移你的博客。你可以管理永久链接、类别、页面、文章，还可以自定义布局，这些功能都很强大。因此，即使你已经有了一个网站，如果你想转成静态网站，Jekyll 会是一个完美的解决方案。你可以参考&lt;a class=&#34;link&#34; href=&#34;https://jekyllrb.com/docs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;或 &lt;a class=&#34;link&#34; href=&#34;https://github.com/jekyll/jekyll&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;了解更多内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://jekyllrb.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2hugo&#34;&gt;2、Hugo&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230848755.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Hugo 是另一个很受欢迎的用于搭建静态网站的开源框架。它是用 &lt;a class=&#34;link&#34; href=&#34;https://golang.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Go 语言&lt;/a&gt;写的。&lt;/p&gt;
&lt;p&gt;它运行速度快、使用简单、可靠性高。如果你需要，它也可以提供更高级的主题。它还提供了一些有用的快捷方式来帮助你轻松完成任务。无论是组合展示网站还是博客网站，Hogo 都有能力管理大量的内容类型。&lt;/p&gt;
&lt;p&gt;如果你想使用 Hugo，你可以参照它的&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;或它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;来安装以及了解更多相关的使用方法。如果需要的话，你还可以将 Hugo 部署在 GitHub 页面或任何 CDN 上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3hexo&#34;&gt;3、Hexo&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230849836.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Hexo 是一个有趣的开源框架，基于 &lt;a class=&#34;link&#34; href=&#34;https://nodejs.org/en/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Node.js&lt;/a&gt;。像其他的工具一样，你可以用它搭建相当快速的网站，不仅如此，它还提供了丰富的主题和插件。&lt;/p&gt;
&lt;p&gt;它还根据用户的每个需求提供了强大的 API 来扩展功能。如果你已经有一个网站，你可以用它的&lt;a class=&#34;link&#34; href=&#34;https://hexo.io/api/migrator.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;迁移&lt;/a&gt;扩展轻松完成迁移工作。&lt;/p&gt;
&lt;p&gt;你可以参照&lt;a class=&#34;link&#34; href=&#34;https://hexo.io/docs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;或 &lt;a class=&#34;link&#34; href=&#34;https://github.com/hexojs/hexo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt; 来使用 Hexo。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hexo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hexo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4gatsby&#34;&gt;4、Gatsby&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230850165.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Gatsby 是一个越来越流行的开源网站生成框架。它使用 &lt;a class=&#34;link&#34; href=&#34;https://reactjs.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;React.js&lt;/a&gt; 来生成快速、界面优美的网站。&lt;/p&gt;
&lt;p&gt;几年前在一个实验性的项目中，我曾经非常想尝试一下这个工具，它提供的成千上万的新插件和主题的能力让我印象深刻。与其他静态网站生成工具不同的是，你可以使用 Gatsby 生成一个网站，并在不损失任何功能的情况下获得静态网站的好处。&lt;/p&gt;
&lt;p&gt;它提供了与很多流行的服务的整合功能。当然，你可以不使用它的复杂的功能，或将其与你选择的流行 CMS 配合使用，这也会很有趣。你可以查看他们的&lt;a class=&#34;link&#34; href=&#34;https://www.gatsbyjs.com/docs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;或它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/gatsbyjs/gatsby&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;了解更多内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.gatsbyjs.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5vuepress&#34;&gt;5、VuePress&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230850623.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;VuePress 是由 &lt;a class=&#34;link&#34; href=&#34;https://vuejs.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vue.js&lt;/a&gt; 支持的静态网站生成工具，而 Vue.js 是一个开源的渐进式 JavaScript 框架。&lt;/p&gt;
&lt;p&gt;如果你了解 HTML、CSS 和 JavaScript，那么你可以无压力地使用 VuePress。你应该可以找到几个有用的插件和主题来为你的网站建设开个头。此外，看起来 Vue.js 的更新一直很活跃，很多开发者都在关注 Vue.js，这是一件好事。&lt;/p&gt;
&lt;p&gt;你可以参照他们的&lt;a class=&#34;link&#34; href=&#34;https://vuepress.vuejs.org/guide/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;和 &lt;a class=&#34;link&#34; href=&#34;https://github.com/vuejs/vuepress&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;了解更多。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://vuepress.vuejs.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VuePress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6nuxtjs&#34;&gt;6、Nuxt.js&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230851735.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Nuxt.js 使用了 Vue.js 和 Node.js，但它致力于模块化，并且有能力依赖服务端而非客户端。不仅如此，它的目标是为开发者提供直观的体验，并提供描述性错误，以及详细的文档等。&lt;/p&gt;
&lt;p&gt;正如它声称的那样，在你用来搭建静态网站的所有工具中，Nuxt.js 可以做到功能和灵活性两全其美。他们还提供了一个 &lt;a class=&#34;link&#34; href=&#34;https://template.nuxtjs.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nuxt 线上沙盒&lt;/a&gt;，让你不费吹灰之力就能直接测试它。&lt;/p&gt;
&lt;p&gt;你可以查看它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/nuxt/nuxt.js&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://nuxtjs.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方网站&lt;/a&gt;了解更多。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://nuxtjs.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nuxt.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7docusaurus&#34;&gt;7、Docusaurus&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230851189.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Docusaurus 是一个有趣的开源静态网站生成工具，为搭建文档类网站量身定制。它还是 &lt;a class=&#34;link&#34; href=&#34;https://opensource.facebook.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Facebook 开源计划&lt;/a&gt;的一个项目。&lt;/p&gt;
&lt;p&gt;Docusaurus 是用 React 构建的。你可以使用所有的基本功能，像文档版本管理、文档搜索和翻译大多是预先配置的。如果你想为你的产品或服务搭建一个文档网站，那么可以试试 Docusaurus。&lt;/p&gt;
&lt;p&gt;你可以从它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/facebook/docusaurus&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;和它的&lt;a class=&#34;link&#34; href=&#34;https://docusaurus.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt;获取更多信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docusaurus.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docusaurus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;8eleventy&#34;&gt;8、Eleventy&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230852491.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Eleventy 自称是 Jekyll 的替代品，旨在以更简单的方法来制作更快的静态网站。&lt;/p&gt;
&lt;p&gt;它似乎很容易上手，而且它还提供了适当的文档来帮助你。如果你想找一个简单的静态网站生成工具，Eleventy 似乎会是一个有趣的选择。&lt;/p&gt;
&lt;p&gt;你可以参照它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/11ty/eleventy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://www.11ty.dev/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt;来了解更多的细节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.11ty.dev/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Eleventy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9publii&#34;&gt;9、Publii&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230852316.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Publii 是一个令人印象深刻的开源 CMS，它能使生成一个静态网站变得很容易。它是用 &lt;a class=&#34;link&#34; href=&#34;https://www.electronjs.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Electron&lt;/a&gt; 和 Vue.js 构建的。如果有需要，你也可以把你的文章从 WorkPress 网站迁移过来。此外，它还提供了与 GitHub 页面、Netlify 及其它类似服务的一键同步功能。&lt;/p&gt;
&lt;p&gt;如果你利用 Publii 生成一个静态网站，你还可以得到一个所见即所得的编辑器。你可以从&lt;a class=&#34;link&#34; href=&#34;https://getpublii.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt;下载它，或者从它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/GetPublii/Publii&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;了解更多信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://getpublii.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Publii&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;10primo&#34;&gt;10、Primo&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304230852327.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;一个有趣的开源静态网站生成工具，目前开发工作仍很活跃。虽然与其他的静态生成工具相比，它还不是一个成熟的解决方案，有些功能还不完善，但它是一个独特的项目。&lt;/p&gt;
&lt;p&gt;Primo 旨在使用可视化的构建器帮你构建和搭建网站，这样你就可以轻松编辑和部署到任意主机上。&lt;/p&gt;
&lt;p&gt;你可以参照&lt;a class=&#34;link&#34; href=&#34;https://primo.af/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt;或查看它的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/primo-app/primo-desktop&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面&lt;/a&gt;了解更多信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://primo.af/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Primo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结语&#34;&gt;结语&lt;/h3&gt;
&lt;p&gt;还有很多文章中没有列出的网站生成工具。然而，我试图提到最好的静态生成器，为您提供最快的加载时间，最好的安全性和令人印象深刻的灵活性。&lt;/p&gt;
&lt;p&gt;列表中没有你最喜欢的工具？在下面的评论中告诉我。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://itsfoss.com/open-source-static-site-generators/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://itsfoss.com/open-source-static-site-generators/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://itsfoss.com/author/ankush/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ankush Das&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xiaobin.Liu&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Jenkins 僵尸任务&amp;排队任务清理</title>
        <link>https://lxb.wiki/c71b015c/</link>
        <pubDate>Tue, 06 Sep 2022 20:52:29 +0800</pubDate>
        
        <guid>https://lxb.wiki/c71b015c/</guid>
        <description>&lt;h2 id=&#34;通过api清理排队的任务&#34;&gt;通过API清理排队的任务&lt;/h2&gt;
&lt;p&gt;删除已经开始构建的任务（已有build_number）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X POST &amp;lt;jenkins-server&amp;gt;/job/&amp;lt;job-name&amp;gt;/&amp;lt;build-number&amp;gt;/doDelete
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于排队中的任务&lt;/p&gt;
&lt;p&gt;注意下面的id 不是build_number&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X POST &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://jenkins/queue/cancelItem?id=85&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To find x, you can parse the result of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://jenkins/queue/api/json?tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;items&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;id,task&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To cancel a build that is in progress:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://jenkins/job/&amp;lt;jobName&amp;gt;/y/stop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To find y, you can parse the result of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://jenkins/job/&amp;lt;jobName&amp;gt;/lastBuild/api/json?tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;building,number
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;脚本处理排队中的任务&#34;&gt;脚本处理排队中的任务&lt;/h2&gt;
&lt;p&gt;获取jenkins所有排队中任务，然后通过jobname过滤，然后想精确到某个任务可以在任务里通过判断任务的参数来确定：比如唯一的ID。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fun JenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cancelTaskInQueue&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;jobName: String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; p1: String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; p2: String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; p3: String&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    runScript&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runScriptHtml&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;jobName&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; URLEncoder&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;import hudson.model.*\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;def q = Jenkins.instance.queue\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q.items.findAll { \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  it.task.name.startsWith(\&amp;#34;${jobName}\&amp;#34;)\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;}.each { \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  p1=\&amp;#34;\&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  p2=\&amp;#34;\&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  p3=\&amp;#34;\&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  it.params.eachLine{\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    aa = it.split(\&amp;#34;=\&amp;#34;)\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    if(aa[0].equals(\&amp;#34;p1\&amp;#34;)){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      if(aa.length == 2){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      \tp1 = aa[1]\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    if(aa[0].equals(\&amp;#34;p2\&amp;#34;)){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      if(aa.length == 2){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      \tp2 = aa[1]\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    if(aa[0].equals(\&amp;#34;p3\&amp;#34;)){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      if(aa.length == 2){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      \tp3 = aa[1]\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  if(\&amp;#34;${p1}\&amp;#34;.equals(p1) &amp;amp;&amp;amp; \&amp;#34;${p2}\&amp;#34;.equals(p2) &amp;amp;&amp;amp; \&amp;#34;${p3}\&amp;#34;.equals(p3)){\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    println(\&amp;#34;cancel auto build ${p1}:${p2} is ${p3}\&amp;#34;)\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    q.cancel(it);\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  }\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;}\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;清除段时间内大量堆积的任务&#34;&gt;清除段时间内大量堆积的任务&lt;/h2&gt;
&lt;p&gt;进入 &lt;strong&gt;Manage Jenkins -&amp;gt; Script Console&lt;/strong&gt; , 然后执行后面的脚本&lt;/p&gt;
&lt;h3 id=&#34;单条结束任务&#34;&gt;单条结束任务&lt;/h3&gt;
&lt;p&gt;查看进程的名字&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getAllStackTraces&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;keySet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  t &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; println&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name:&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进程名字结果示例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:Thread-90
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:Scheduler-174573182-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:Thread-116
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:Thread-110
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:Thread-83
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#52]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:SCMTrigger &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#10]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;停止特定进程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getAllStackTraces&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;keySet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  t &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;刚才查出来的某条进程名字&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;   t&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;interrupt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;删掉所有进程&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getAllStackTraces&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;keySet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  t &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;   t&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;interrupt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;清掉所有build-queue&#34;&gt;清掉所有Build Queue&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Jenkins&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;instance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Dockerfile修改hosts</title>
        <link>https://lxb.wiki/265eeb54/</link>
        <pubDate>Mon, 22 Aug 2022 21:07:36 +0800</pubDate>
        
        <guid>https://lxb.wiki/265eeb54/</guid>
        <description>&lt;p&gt;[toc]&lt;/p&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在很多场景中，比如我们需要搭建一个集群，这时候容器要识别集群内的节点，就需要添加相应的host解析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;hosts文件其实并不是存储在Docker镜像中的，&lt;code&gt;/etc/hosts&lt;/code&gt;, &lt;code&gt;/etc/resolv.conf&lt;/code&gt;和&lt;code&gt;/etc/hostname&lt;/code&gt;，是存在主机上的&lt;code&gt;/var/lib/docker/containers/(docker_id)&lt;/code&gt; 目录下，容器启动时是通过mount将这些文件挂载到容器内部的。因此如果在容器中修改这些文件，修改部分不会存在于容器的top layer，而是直接写入这3个文件中。容器重启后修改内容不存在的原因是Docker每次创建新容器时，会根据当前docker0下的所有节点的IP信息重新建立hosts文件。也就是说，你的修改会被Docker给自动覆盖掉。&lt;/p&gt;
&lt;h2 id=&#34;解决办法&#34;&gt;解决办法&lt;/h2&gt;
&lt;h3 id=&#34;opt-1-开启时加参数&#34;&gt;OPT 1 开启时加参数&lt;/h3&gt;
&lt;p&gt;开启容器时候添加参数 &lt;code&gt;--add-host machine:ip&lt;/code&gt; 可以实现hosts修改，在容器中可以识别machine主机。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name nginx nginx:latest --add-host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;server:127.0.0.1&amp;#39;&lt;/span&gt; --add-host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;server2:127.0.0.2&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;opt-2-修改容器hosts查找目录&#34;&gt;OPT 2 修改容器hosts查找目录&lt;/h3&gt;
&lt;p&gt;让容器开启时候，不去找&lt;code&gt;/etc/hosts&lt;/code&gt;文件，而是去找自定义的hosts文件，下面是一个Dockerfile实例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM ubuntu:14.04
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN cp /etc/hosts /tmp/hosts &lt;span style=&#34;color:#75715e&#34;&gt;#路径长度最好保持一致&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN mkdir -p -- /lib-override &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp /lib/x86_64-linux-gnu/libnss_files.so.2 /lib-override
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s:/etc/hosts:/tmp/hosts:g&amp;#39;&lt;/span&gt; /lib-override/libnss_files.so.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ENV LD_LIBRARY_PATH /lib-override
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.1 node1&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /tmp/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;opt-3-在-一个-run-中-设置-etchosts-的同时运行需要dns服务的安装&#34;&gt;OPT 3 在 一个 RUN 中 设置 /etc/hosts 的同时，运行需要dns服务的安装&lt;/h3&gt;
&lt;p&gt;由于在不同的 RUN 层中，/etc/hosts 会被docker重写覆盖掉，所以必须在同一个 RUN 层中同时设置并使用对应的域名映射&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;111.8.8.111 mirror.npm.com&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/hosts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm install 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Jenkins的Api</title>
        <link>https://lxb.wiki/6316d574/</link>
        <pubDate>Tue, 05 Jul 2022 20:56:19 +0800</pubDate>
        
        <guid>https://lxb.wiki/6316d574/</guid>
        <description>&lt;h2 id=&#34;术语定义&#34;&gt;术语定义&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;名词&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;job&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;payload&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在POST请求中提交的数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;{optionalFolderPath}&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可选参数：任务所在目录的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;{job_name}&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;必须参数：任务名称&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;在 GET/POST 时需要附加 HTTP 认证才能访问 API&lt;/li&gt;
&lt;li&gt;本文使用的数据结构可以在 jenkins-rest/domain 中查看详细定义&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;api类型&#34;&gt;API类型&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;API类型&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;JobsAP&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任务管理（任务信息、创建、修改）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;OBPluginManagerAPI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;插件管理（插件信息、安装插件）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;QueueAPI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任务队列相关（队列状态）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;StatisticsAPI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Jenkins统计信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CrumbIssuerAPI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;系统哈希值信息（用于防御CSRF攻击）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;SystemAPI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Jenkins系统状态（版本、路径）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;api汇总&#34;&gt;API汇总&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;API&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;创建 Job&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://localhost:8080/createItem/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;更新 Job&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://localhost:8080/job/{job_name}/config.xml/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取 Job&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://localhost:8080/job/{job_name}/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取 JobXml&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://localhost:8080/job/{job_name}/config.xml/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;删除 Job&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/doDelete&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable Job&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/enable&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disable Job&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/disable&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取任务描述&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/description&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;设置任务描述&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/description&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;创建 Build&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://localhost:8080/job/{job_name}/build/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取 QueueItem&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://localhost:8080/queue/item/17/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;取消任务队列&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://127.0.0.1:8080/cancelItem?id={id}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;所有任务队列信息&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/queue/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取 Build信息&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://localhost:8080/job/test/6/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取上次构建序号&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/lastBuild/buildNumber&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取上次构建时间戳&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/lastBuild/buildTimestamp&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取TXT日志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://localhost:8080/job/test/{build_number}/logText/progressiveText/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;获取 Html 日志&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://localhost:8080/job/test/{build_number}/logText/progressiveHtml/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;系统哈希值信息&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/crumbIssuer/api/xml?{key}={value}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;load统计信息&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/overallLoad/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;插件管理&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GET http://127.0.0.1:8080/pluginManager/api/json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安装插件&lt;/td&gt;
&lt;td&gt;&lt;code&gt;POST http://127.0.0.1:8080/pluginManager/installNecessaryPlugins&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;api详述&#34;&gt;API详述&lt;/h2&gt;
&lt;h3 id=&#34;创建-job&#34;&gt;创建 Job&lt;/h3&gt;
&lt;p&gt;jenkins 的配置都是靠 xml 的格式落地的,所以配置其实都是 xml 的形式.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/createItem
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;key&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;name 任务名称&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;payload XML配置文件&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;返回类型：RequestStatus&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;value&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;errors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;List&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如何知道 config.xml应该如何编写呢?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在 jenkins 收工创建一个需要的项目,然后编辑完成后,到 jenkins 工作目录下 找到 jobs/{job_name}/config.xml 用他作为模板来书写你需要的模板.&lt;/li&gt;
&lt;li&gt;通过获取 xml 的 api 来获取&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;GET http://localhost:8080/job/{job_name}/config.xml/api/json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java Client&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto_test_job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; replacedText&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String xml &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJobXml&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto_test_job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;更新job&#34;&gt;更新Job&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://localhost:8080/job/{job_name}/config.xml/api/json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;payload&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;XML配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;config.xml的内容传入到 body 中,contentType 设置为&lt;code&gt;text/xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回类型：Boolean&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java Client&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;updateJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auto_test_job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; replacedText&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;job-info-获取任务信息&#34;&gt;job-info 获取任务信息&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/api/json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回类型：JobInfo&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;description&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;name&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;项目名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;url&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;buildable&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否可构建&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;builds&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;List&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;构建记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;lastBuild&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BuildInfo&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;上次构建记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;……&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;delete-删除任务&#34;&gt;delete 删除任务&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POST http://127.0.0.1:8080/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;optionalFolderPath&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;job/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;project_name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/doDelete
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返回类型：RequestStatus&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;补充：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也可以使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DELETE https://&amp;lt;Jenkins_url&amp;gt;/job/&amp;lt;job_name&amp;gt;/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意最后有个 &lt;code&gt;/&lt;/code&gt;，不加 &lt;code&gt;/&lt;/code&gt; 不能正常删除&lt;/p&gt;
&lt;h3 id=&#34;enable允许任务&#34;&gt;enable允许任务&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{project_name}/enable
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回类型：Boolean&lt;/p&gt;
&lt;h3 id=&#34;disable-禁止任务&#34;&gt;disable 禁止任务&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{project_name}/disable
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回类型：Boolean&lt;/p&gt;
&lt;h3 id=&#34;get-description-获取任务描述&#34;&gt;get-description 获取任务描述&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{project_name}/description
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回类型：String&lt;/p&gt;
&lt;h3 id=&#34;set-description-设置任务描述&#34;&gt;set-description 设置任务描述&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{project_name}/description
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;key&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;description&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;描述&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;返回类型：Boolean&lt;/p&gt;
&lt;h3 id=&#34;创建-build&#34;&gt;创建 Build&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/build
POST http://localhost:8080/job/{job_name}/build/api/json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回类型： IntegerResponse&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;value&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;errors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;List&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;build-with-params-使用参数创建任务&#34;&gt;build-with-params 使用参数创建任务&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POST http://127.0.0.1:8080/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;optionalFolderPath&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;job/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;job_name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/buildWithParameters
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;key&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;payload&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, List&amp;gt; properties&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;返回类型： IntegerResponse&lt;/p&gt;
&lt;p&gt;新的构建请求提交到服务器成功后返回一个类似于队列ID的东西,因为是异步构建,那么要获取构建的状态,就需要,用这个队列 id去进一步的获取. 例如:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -v  -XPOST http://localhost:8080/job/test/build/api/json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*   Trying ::1...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TCP_NODELAY set
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Connected to localhost &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;::1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; port &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#0)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; POST /job/test/build/api/json HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; Host: localhost:8080
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; User-Agent: curl/7.54.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; Accept: */*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; HTTP/1.1 &lt;span style=&#34;color:#ae81ff&#34;&gt;201&lt;/span&gt; Created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; Date: Sat, &lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt; Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; 08:33:45 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; X-Content-Type-Options: nosniff
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; Location: http://localhost:8080/queue/item/17/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; Server: Jetty&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;9.4.z-SNAPSHOT&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Connection &lt;span style=&#34;color:#75715e&#34;&gt;#0 to host localhost left intact&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的&lt;code&gt;Location: http://localhost:8080/queue/item/17/&lt;/code&gt;就是返回的队列信息,下面的 queueItem 获取就是依赖这个.&lt;/p&gt;
&lt;h3 id=&#34;根据-queueid-获取-queueitem&#34;&gt;根据 QueueId 获取 QueueItem&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET http://localhost:8080/queue/item/17/api/json 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;{queueId}&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任务队列ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：QueueItem&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl  http://localhost:8080/queue/item/17/api/json&lt;span style=&#34;color:#ae81ff&#34;&gt;\?&lt;/span&gt;pretty&lt;span style=&#34;color:#ae81ff&#34;&gt;\=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_class&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.model.Queue&lt;/span&gt;$LeftItem&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;actions&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_class&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.model.CauseAction&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;causes&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_class&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.model.Cause&lt;/span&gt;$UserIdCause&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shortDescription&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;由用户 anonymous 启动&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt; : null,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blocked&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;buildable&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; : 17,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;inQueueSince&amp;#34;&lt;/span&gt; : 1546677225670,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stuck&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;task&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_class&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.maven.MavenModuleSet&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8080/job/test/&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;queue/item/17/&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;why&amp;#34;&lt;/span&gt; : null,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cancelled&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executable&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_class&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hudson.maven.MavenModuleSetBuild&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; : 6,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8080/job/test/6/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;cancel-取消任务队列&#34;&gt;cancel 取消任务队列&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/cancelItem?id={id}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;{id}&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任务队列ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：RequestStatus&lt;/p&gt;
&lt;h3 id=&#34;queue-所有任务队列信息&#34;&gt;queue 所有任务队列信息&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/queue/api/json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：List&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;blocked&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否阻塞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;buildable&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否可构建&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;id&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;inQueueSince&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Long&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;params&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;任务参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;task&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Task&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Task中包含任务名称和URL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;……&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;获取-build-详情&#34;&gt;获取 Build 详情&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/{number}/api/json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：BuildInfo&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;artifacts&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;List&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;artifacts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;actions&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Lis&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;actions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;building&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;boolean 路径&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;description&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;……&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl http://localhost:8080/job/test/6/api/json&lt;span style=&#34;color:#ae81ff&#34;&gt;\?&lt;/span&gt;pretty&lt;span style=&#34;color:#ae81ff&#34;&gt;\=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;building&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt; : null,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;displayName&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#6&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;duration&amp;#34;&lt;/span&gt; : 13631,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;estimatedDuration&amp;#34;&lt;/span&gt; : 17999,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executor&amp;#34;&lt;/span&gt; : null,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fullDisplayName&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test #6&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;keepLog&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; : 6,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;queueId&amp;#34;&lt;/span&gt; : 17,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SUCCESS&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timestamp&amp;#34;&lt;/span&gt; : 1546677234794,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8080/job/test/6/&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;builtOn&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从返回结果可以看到 是否还在 build:&lt;code&gt;&amp;quot;building&amp;quot; : false&lt;/code&gt;,如果 build 结束状态就在:&lt;code&gt;&amp;quot;result&amp;quot; : &amp;quot;SUCCESS&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;获取上次build详情&#34;&gt;获取上次Build详情&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl http://172.12.12.234:8080/job/pytest_7.0/lastBuild/api/xml --user jenkins:1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;last-build-number-获取上次构建序号&#34;&gt;last-build-number 获取上次构建序号&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/lastBuild/buildNumber
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：Integer&lt;/p&gt;
&lt;h3 id=&#34;last-build-timestamp-获取上次构建时间戳&#34;&gt;last-build-timestamp 获取上次构建时间戳&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/lastBuild/buildTimestamp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：String&lt;/p&gt;
&lt;h3 id=&#34;progressive-text-获取构建控制台输出&#34;&gt;progressive-text 获取构建控制台输出&lt;/h3&gt;
&lt;p&gt;获取上次构建的日志&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/{optionalFolderPath}job/{job_name}/lastBuild/logText/progressiveText
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：ProgressiveText&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;text&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;控制台输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;size&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Integer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;字数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;hasMoreData&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否有更多数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;获取某次构建的日志&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET http://localhost:8080/job/test/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;build_number&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/logText/progressiveText/api/json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET http://localhost:8080/job/test/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;build_number&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/logText/progressiveHtml/api/json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JobWithDetails job &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;jenkinsJob&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; QueueReference reference &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QueueItem queueItem &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getQueueItem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; QueueReference&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;queuePart&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Build build &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getBuild&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;queueItem&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BuildWithDetails details &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;details&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BuildResult result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; details&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResult&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String logs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  details&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConsoleOutputText&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;crumbissuer-系统哈希值信息用于防御csrf攻击&#34;&gt;CrumbIssuer 系统哈希值信息（用于防御CSRF攻击）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CrumbIssuerApi&lt;/li&gt;
&lt;li&gt;path: /crumbIssuer/api/xml&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;crumb&#34;&gt;crumb&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/crumbIssuer/api/xml?{key}={value}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;key&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xpath&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;concat(//crumbRequestField,”:”,//crumb)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：Crumb&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;value&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;errors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;List&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;statistics-统计信息&#34;&gt;Statistics 统计信息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;StatisticsApi&lt;/li&gt;
&lt;li&gt;path: /&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;overall-load&#34;&gt;overall-load&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/overallLoad/api/json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：OverallLoad&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;availableExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;busyExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;connectingExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;definedExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;idleExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;onlineExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;queueLength&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;totalExecutors&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;totalQueueLength&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Map&amp;lt;String, String&amp;gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;system-系统信息&#34;&gt;System 系统信息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;path: /&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：SystemInfo&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;hudsonVersion&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;jenkinsVersion&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;jenkinsSession&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;instanceIdentity&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sshEndpoint&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;server&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;pluginmanager-插件管理插件信息安装插件&#34;&gt;PluginManager 插件管理（插件信息、安装插件）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PluginManagerApi&lt;/li&gt;
&lt;li&gt;path: /pluginManager&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;plugins-插件列表&#34;&gt;plugins 插件列表&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://127.0.0.1:8080/pluginManager/api/json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：List&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类型&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;active&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;backupVersion String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;bundled&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;deleted&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;downgradable&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;enabled&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Boolean&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;longName&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;String&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;……&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;installnecessaryplugins-安装插件&#34;&gt;installNecessaryPlugins 安装插件&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;POST http://127.0.0.1:8080/pluginManager/installNecessaryPlugins
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参数&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;payload: &amp;lt;jenkins&amp;gt;&amp;lt;install plugin=&amp;#34;{pluginID}&amp;#34;/&amp;gt;&amp;lt;/jenkins&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;字段&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;{pluginID}&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;要安装的插件ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;返回类型&lt;/strong&gt;：RequestStatus&lt;/p&gt;
&lt;h2 id=&#34;代码示例&#34;&gt;代码示例&lt;/h2&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;
&lt;p&gt;导入依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--jenkins-java-client--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.offbytwo.jenkins&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jenkins-client&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.3.8&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建连接配置，配置对应的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.JenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.client.JenkinsHttpClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.URI&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.net.URISyntaxException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JenkinsConnect&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JenkinsConnect&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 连接 Jenkins 需要设置的信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String JENKINS_URL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://jenkins:8080/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String JENKINS_USERNAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; String JENKINS_PASSWORD &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * Http 客户端工具
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 如果有些 API 该Jar工具包未提供，可以用此Http客户端操作远程接口，执行命令
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * @return
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; JenkinsHttpClient &lt;span style=&#34;color:#a6e22e&#34;&gt;getClient&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JenkinsHttpClient jenkinsHttpClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jenkinsHttpClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; JenkinsHttpClient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; URI&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JENKINS_URL&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; JENKINS_USERNAME&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; JENKINS_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;URISyntaxException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; jenkinsHttpClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 连接 Jenkins
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; JenkinsServer &lt;span style=&#34;color:#a6e22e&#34;&gt;connection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JenkinsServer jenkinsServer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jenkinsServer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; JenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; URI&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JENKINS_URL&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; JENKINS_USERNAME&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; JENKINS_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;URISyntaxException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;JENKINS_URL是Jenkins的反向代理地址， &lt;code&gt;Configure System -&amp;gt; Jenkins location url&lt;/code&gt;， 一般和Jenkins首页访问地址一致&lt;/p&gt;
&lt;p&gt;JENKINS_USERNAME Jenkins登录账号&lt;/p&gt;
&lt;p&gt;JENKINS_PASSWORD Jenkins账号密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/202304151033105.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;使用示例&#34;&gt;使用示例&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.JenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.client.JenkinsHttpClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.model.Build&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.model.Job&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.model.JobWithDetails&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; com.offbytwo.jenkins.model.MavenJobWithDetails&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.IOException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.HashMap&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Map&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;JobApi&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Jenkins 对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; JenkinsServer jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// http 客户端对象
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; JenkinsHttpClient jenkinsHttpClient&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 构造方法中调用连接 Jenkins 方法
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    JobApi&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 连接 Jenkins
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        jenkinsServer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JenkinsConnect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;connection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 设置客户端连接 Jenkins
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        jenkinsHttpClient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JenkinsConnect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getClient&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 创建 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ceateJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/**创建一个流水线任务，且设置一个简单的脚本**/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 创建 Pipeline 脚本
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            String script &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node(){ \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo &amp;#39;hello world!&amp;#39; \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// xml配置文件，且将脚本加入到配置中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            String xml &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;flow-definition plugin=\&amp;#34;workflow-job@2.32\&amp;#34;&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;description&amp;gt;测试项目&amp;lt;/description&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;definition class=\&amp;#34;org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition\&amp;#34; plugin=\&amp;#34;workflow-cps@2.66\&amp;#34;&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;script&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; script &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/script&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;sandbox&amp;gt;true&amp;lt;/sandbox&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/definition&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/flow-definition&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 创建 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;xml&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 更新 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     *
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 更改之前创建的无参数Job，更改其为参数Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;updateJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;             * 更改一个流水线任务，让一个无参数的任务变成带参数任务
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;             */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 创建 Pipeline 脚本，用一个key变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            String script &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node(){ \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo \&amp;#34;${key}\&amp;#34; \n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// xml配置文件，且将脚本加入到配置中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            String xml &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;flow-definition plugin=\&amp;#34;workflow-job@2.32\&amp;#34;&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;actions/&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;description&amp;gt;测试项目&amp;lt;/description&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;keepDependencies&amp;gt;false&amp;lt;/keepDependencies&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;properties&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;hudson.model.ParametersDefinitionProperty&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;parameterDefinitions&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;hudson.model.StringParameterDefinition&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;name&amp;gt;key&amp;lt;/name&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;description&amp;gt;用于测试的字符变量&amp;lt;/description&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;defaultValue&amp;gt;hello&amp;lt;/defaultValue&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;trim&amp;gt;false&amp;lt;/trim&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/hudson.model.StringParameterDefinition&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/parameterDefinitions&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/hudson.model.ParametersDefinitionProperty&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/properties&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;definition class=\&amp;#34;org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition\&amp;#34; plugin=\&amp;#34;workflow-cps@2.66\&amp;#34;&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;script&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; script &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/script&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;sandbox&amp;gt;true&amp;lt;/sandbox&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/definition&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;disabled&amp;gt;false&amp;lt;/disabled&amp;gt;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/flow-definition&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 创建 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;updateJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;xml&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 获取 Job 基本信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            JobWithDetails job &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;das-app-android-pkg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 名称
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job URL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getUrl&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 下一个 build 编号
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getNextBuildNumber&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 显示的名称
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDisplayName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 输出 Job 描述信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDescription&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 下游任务列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDownstreamProjects&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 上游任务列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getUpstreamProjects&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 获取 Maven Job 信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getMavenJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            MavenJobWithDetails job &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getMavenJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 获取 Job 列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getJobList&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; Job&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; jobs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJobs&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Job job&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;jobs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 获取 View 名称获取 Job 列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getJobListByView&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取 Job 列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;Job&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; jobs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJobs&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Job job&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;jobs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 查看 Job XML 信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getJobConfig&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            String xml &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJobXml&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;xml&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 执行无参数 Job build
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buildJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 执行带参数 Job build
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buildParamJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;             * 例如，现有一个job，拥有一个字符参数&amp;#34;key&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;             * 现在对这个值进行设置，然后执行一个输出这个值的脚本
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;             */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 设置参数值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; param &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; HashMap&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            param&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;way&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gm-R-b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 执行 build 任务
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;das-app-android-pkg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 停止最后构建的 Job Build
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stopLastJobBuild&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 获取最后的 build 信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            Build build &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getLastBuild&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 停止最后的 build
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            build&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Stop&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 删除 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;deleteJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;deleteJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 禁用 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;disableJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;disableJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     * 启用 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;     */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enableJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            jenkinsServer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;enableJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-job&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IOException e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JobApi jobApi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; JobApi&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getJobList();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        jobApi&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;buildParamJob&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 创建 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.ceateJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 构建无参数的 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.buildJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 构建带参数的 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.buildParamJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 停止最后构建的 Job Build
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.stopLastJobBuild();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 更新 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.updateJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 获取 Job 信息
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 获取 Maven 项目 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getMavenJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 获取 Job 配置xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getJobConfig();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 获取全部 Job 列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getJobList();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 根据 view 名称获取 Job 列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.getJobListByView();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 禁用 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.disableJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 启用 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.enableJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        // 删除 Job
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        jobApi.deleteJob();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>mermaid画流程图语法</title>
        <link>https://lxb.wiki/62afdbe0/</link>
        <pubDate>Mon, 20 Jun 2022 20:34:38 +0000</pubDate>
        
        <guid>https://lxb.wiki/62afdbe0/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;Mermaid 是一个基于 Javascript 的图表绘制工具，通过解析类 Markdown 的文本语法来实现图表的创建和动态修改。Mermaid 诞生的主要目的是让文档的更新能够及时跟上开发进度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;流程图分类&#34;&gt;流程图分类&lt;/h3&gt;
&lt;p&gt;有两种流程图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flowchart&lt;/li&gt;
&lt;li&gt;graph&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;flowchart 语法过于复杂，不赘述。下面内容只保留 graph 语法。&lt;/p&gt;
&lt;h4 id=&#34;示例&#34;&gt;示例&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD

start(程序开始)
--&amp;gt; 随机选取K个样本作为均值向量
--&amp;gt; id1([划分簇开始])
--&amp;gt; 计算样本与各均值向量之间的距离
--&amp;gt; 根据距离最近的均值向量确定每个样本的簇标记
--&amp;gt; 将样本划入相应的簇
--&amp;gt; id2{遍历完成?}
id2 -- NO --&amp;gt; id1
id2 -- YES --&amp;gt; id3([更新簇均值向量开始])
--&amp;gt; id4[计算各簇新均值向量μ]
--&amp;gt; id5{所有计算完成?}
id5 -- YES --&amp;gt; 保留μ集合为簇新中心点 --&amp;gt; id6{所有μ是否更新?}
id5 -- NO --&amp;gt; id3
id6 -- NO --&amp;gt; endd(结束, 输出均值向量)
id6 == YES ==&amp;gt;id1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;方向&#34;&gt;方向&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;graph&lt;/code&gt; 之后加上空格可以传入参数，可以定义流程图方向。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数值&lt;/th&gt;
&lt;th&gt;TB&lt;/th&gt;
&lt;th&gt;TD&lt;/th&gt;
&lt;th&gt;BT&lt;/th&gt;
&lt;th&gt;RL&lt;/th&gt;
&lt;th&gt;LR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;说明&lt;/td&gt;
&lt;td&gt;从上到下&lt;/td&gt;
&lt;td&gt;从上到下&lt;/td&gt;
&lt;td&gt;从下到上&lt;/td&gt;
&lt;td&gt;从右到左&lt;/td&gt;
&lt;td&gt;从左到右&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;节点&#34;&gt;节点&lt;/h3&gt;
&lt;p&gt;每一行输入任意字符都会被识别为一个新节点。输入的字符将被作为节点的ID，同时默认作为节点名称显示。默认形状是矩形。&lt;/p&gt;
&lt;h4 id=&#34;形状&#34;&gt;形状&lt;/h4&gt;
&lt;p&gt;除了矩形还有多种形状可选，在节点后面增加符号对即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20230320000056.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;名称&#34;&gt;名称&lt;/h4&gt;
&lt;p&gt;形状符号中输入字符作为展示的名称。&lt;/p&gt;
&lt;p&gt;默认可以不用引号，但如果需要使用转义符、或者括号，则需要用引号包裹。&lt;/p&gt;
&lt;h3 id=&#34;连接线&#34;&gt;连接线&lt;/h3&gt;
&lt;p&gt;语法结构大致是：&lt;code&gt;节点ID 连接线符号 节点ID&lt;/code&gt;（
例如 &lt;code&gt;NodeA &amp;lt;--&amp;gt; NodeB&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;如果一行末尾没有节点ID，则会找到下一行第一个节点ID连接，也就意味着连接线的语法是可以换行的。&lt;/p&gt;
&lt;p&gt;如果节点ID是前文没有出现过的，会当做一个新的节点处理。所以节点的创建与连接是可以一次性书写的。&lt;/p&gt;
&lt;h4 id=&#34;线的定义&#34;&gt;线的定义&lt;/h4&gt;
&lt;p&gt;连接线由三个字符组成，末尾符号代表端点图形，第一二个符号代表线的样式。&lt;/p&gt;
&lt;p&gt;绘制双向箭头的话，需要在头部增加一个符号，一共是四个字符。&lt;/p&gt;
&lt;p&gt;中间符号可以重复，重复会渲染出更长的连接线。&lt;/p&gt;
&lt;p&gt;如&lt;code&gt;NodeA &amp;lt;--&amp;gt; NodeB&lt;/code&gt;就是双箭头符号，中间代表线段形状，头尾代表箭头形状。&lt;/p&gt;
&lt;h4 id=&#34;线的形状&#34;&gt;线的形状&lt;/h4&gt;
&lt;p&gt;线条有三种：
&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20230320000338.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;箭头形状&#34;&gt;箭头形状&lt;/h4&gt;
&lt;p&gt;箭头形状有三种：
&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20230320000410.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;双向箭头：
&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20230320000438.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;多个节点连接&#34;&gt;多个节点连接&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; 符号可以让图形一次性连接多个节点：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20230320000522.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;连接线上的文字注释&#34;&gt;连接线上的文字注释&lt;/h4&gt;
&lt;p&gt;可以在连接线上增加连接线的注释。注释有两种写法：&lt;/p&gt;
&lt;p&gt;写在末尾：||符号，只需要在连接线符号末尾增加—&amp;gt;|文字|即可展示。&lt;/p&gt;
&lt;p&gt;写在中间：类似—文字—&amp;gt;、-. 文字 .-&amp;gt;，等于是重复连接符号，前半部分是定义上一个图形到文字的连接线样式，后半部分是定义文字到图形的连接线样式。&lt;/p&gt;
&lt;p&gt;通常来说写在末尾会比较方便点。
&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20230320000703.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;%%&lt;/code&gt; 号为注释符，会将符号之后到此行结束都视为注释。&lt;/p&gt;
&lt;h3 id=&#34;子图分组&#34;&gt;子图（分组）&lt;/h3&gt;
&lt;p&gt;子图实际上就是给图形分组，增加一个背景色块，使用subgraph ID、end包裹，中间图语法与此前一样。&lt;/p&gt;
&lt;p&gt;subgraph ID之后用方括号包裹可以定义显示名称。其中元素可以任意连接，用子图ID可以定义子图与子图的连接线。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TB

subgraph one
a --&amp;gt; b
end

subgraph tow
c --&amp;gt; d
end

c --&amp;gt; b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另一种用法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph LR
subgraph submo
D[&amp;#34;DDD&amp;#34;]
E[&amp;#34;EEE&amp;#34;]
F[&amp;#34;FFF&amp;#34;]
end

Start --&amp;gt; D
D --&amp;gt; E
D --&amp;gt; F

E &amp;amp; F --&amp;gt; End
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Hexo pure主题配置utteranc评论</title>
        <link>https://lxb.wiki/852e4155/</link>
        <pubDate>Wed, 11 May 2022 22:15:38 +0000</pubDate>
        
        <guid>https://lxb.wiki/852e4155/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;utteranc 官网
&lt;a class=&#34;link&#34; href=&#34;https://utteranc.es/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://utteranc.es/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-安装应用&#34;&gt;1 安装应用&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/apps/utterances&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/apps/utterances&lt;/a&gt;
设置指定仓库&lt;/p&gt;
&lt;h2 id=&#34;2-基本参数&#34;&gt;2 基本参数&lt;/h2&gt;
&lt;p&gt;官方的脚本如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;repo&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yansheng836/yansheng836.github.io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;issue&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github-light&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;crossorigin&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;主要参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;repo：存放评论的issues的仓库名（即步骤1指定访问的仓库），可以和博客相同，也可以不同。&lt;/li&gt;
&lt;li&gt;issue-term：指定issues的标题，title表示使用文章的标题作为issues的标题。可选参数（只介绍部分）：&lt;/li&gt;
&lt;li&gt;URL：博客网址：网址全路径&lt;/li&gt;
&lt;li&gt;pathname：URL 去掉域名&lt;/li&gt;
&lt;li&gt;title：博客标题（推荐使用这个，因为上面两个涉及到网址，如果网址包含中文，会被转义，不方便看。）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20221216220503.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;theme：评论系统的主题，在Theme里面，选择主题，页面会变色：https://utteranc.es/#heading-theme&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-pure-主题配置&#34;&gt;3 pure 主题配置&lt;/h2&gt;
&lt;p&gt;修改 &lt;code&gt;themes/pure/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;comment type 改为 utterance&lt;/strong&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20221216220923.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加 utterance 相关配置&lt;/strong&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20221216221120.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改 ejs&lt;/strong&gt;
在 &lt;code&gt;themes/pure/layout/_partial/post/comment.ejs&lt;/code&gt; 文件中插入以下代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;%&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utterance&amp;#39;&lt;/span&gt;) { &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;utterance&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt;){ &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            .&lt;span style=&#34;color:#a6e22e&#34;&gt;utterances&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/style&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://utteranc.es/client.js&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;repo&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;%= theme.comment.utterance.repo %&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;issue&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;term&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;%= theme.comment.utterance.issue_term %&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;%= theme.comment.utterance.theme %&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;crossorigin&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/section&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;%&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Mac上移除EasyConnect常驻后台进程</title>
        <link>https://lxb.wiki/446d3604/</link>
        <pubDate>Sun, 01 May 2022 20:04:28 +0000</pubDate>
        
        <guid>https://lxb.wiki/446d3604/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;EasyConnect 会在后台强行添加名为 EasyMonitor 的开机自启守护进程，执行以下命令关闭&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo launchctl unload /Library/LaunchDaemons/com.sangfor.EasyMonitor.plist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可实际上 EasyConnect 还启动了另一个“杀不掉”的后台进程 ECAgent，活动频率很低，似乎不会造成内存泄漏，略显不起眼。但这无法作为它肆意常驻的理由。&lt;/p&gt;
&lt;h2 id=&#34;禁用&#34;&gt;禁用&lt;/h2&gt;
&lt;p&gt;首先找到 plist 文件，在 &lt;code&gt;/Library/LaunchAgents/com.sangfor.ECAgentProxy.plist&lt;/code&gt;。它无法被 launchctl unload，不过没关系，你可以直接把它挪走或删除，并且今后都不再需要它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mv /Library/LaunchAgents/com.sangfor.ECAgentProxy.plist ~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然这时候它还是不能被 kill 掉，要想从 launchctl 中删除而不重启电脑，可以采用 launchctl remove。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;launchctl remove com.sangfor.ECAgentProxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;启用&#34;&gt;启用&lt;/h2&gt;
&lt;p&gt;关闭后台进程之后，启动 EasyConnect 会弹出警告：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alert
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Initialization failed. Please try reinstalling!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以 需要使用时，必须重新加载 EasyMonitor。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# EasyConnect v7.6.7 开始 EasyMonitor 必须在 root 权限下运行，此前版本可以不加 sudo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo launchctl load /Library/LaunchDaemons/com.sangfor.EasyMonitor.plist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而 ECAgent 就没这么麻烦了，它根本不必后台常驻 —— EasyConnect 启动时会自己创建一个，并且会随着 EasyConnect 进程一起退出。最终我删掉了 &lt;code&gt;com.sangfor.ECAgentProxy.plist&lt;/code&gt; 文件的备份。&lt;/p&gt;
&lt;h2 id=&#34;mac-下禁用开机自启软件&#34;&gt;Mac 下禁用开机自启软件&lt;/h2&gt;
&lt;p&gt;有部分软件的开机启动项放在 &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;sudo launchctl unload xxx.plist&lt;/code&gt; 可以去掉某个软件的开机自启&lt;/p&gt;
&lt;p&gt;深信服的 EasyConnect 有一个进程叫做 EasyMonitor 可以说是非常流氓了，开机自启 + 常驻内存 + 内存泄露，时间长了以后会占用 1g 以上的内存。
它的 plist 位于 &lt;code&gt;/Library/LaunchDaemons/com.sangfor.EasyMonitor.plist&lt;/code&gt; 使用上述命令可以干掉它。&lt;/p&gt;
&lt;p&gt;干掉他这个进程非常开心，但是会遇到一个问题，再次启动 EasyConnect 的时候，它不乐意了，会提示初始化失败，请重新安装，这时候就得重新 load 这个 plist 了，执行 &lt;code&gt;sudo launchctl load /Library/LaunchDaemons/com.sangfor.EasyMonitor.plist&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【译】如何把WordPress网站迁移到新主机</title>
        <link>https://lxb.wiki/ea5f4ef1/</link>
        <pubDate>Sun, 24 Apr 2022 21:36:34 +0000</pubDate>
        
        <guid>https://lxb.wiki/ea5f4ef1/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;使用这个简单的方法来迁移一个网站以及管理防火墙配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你有过把一个 WordPress 网站迁移到一台新主机上的需求吗？我曾经迁移过好多次，迁移过程相当简单。当然，的的市场时候我都不会用通用的推荐方法，这次也不例外 —— 我用更简单的方法，这才是我推荐的方法。&lt;/p&gt;
&lt;p&gt;这个迁移方法没有破坏性，因此如果出于某些原因你需要还原到原来的服务器上，很容易可以实现。&lt;/p&gt;
&lt;h3 id=&#34;一个-wordpress-网站的组成部分&#34;&gt;一个 WordPress 网站的组成部分&lt;/h3&gt;
&lt;p&gt;运行一个基于 &lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;WordPress&lt;/a&gt; 的网站有三个重要组成部分：WordPress 本身，一个 web 服务器，如 &lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;Apache&lt;/a&gt;（我正在用），以及 &lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;MariaDB&lt;/a&gt;。MariaDB 是 MySQL 的一个分支，功能相似。&lt;/p&gt;
&lt;p&gt;业界有大量的 Web 服务器，由于我使用了 Apache 很长时间，因此我推荐用 Apache。你可能需要把 Apache 的配置方法改成你用的 Web 服务器的方法。&lt;/p&gt;
&lt;h3 id=&#34;初始配置&#34;&gt;初始配置&lt;/h3&gt;
&lt;p&gt;我使用一台 Linux 主机作为防火墙和网络路由。在我的网络中 Web 服务器是另一台主机。我的内部网络使用的是 C 类私有网络地址范围，按 [无类别域间路由][5]Classless Internet Domain Routing（CIDR）方式简单地记作 192.168.0.0/24。&lt;/p&gt;
&lt;p&gt;对于防火墙，相比于更复杂的 &lt;code&gt;firewalld&lt;/code&gt;，我更喜欢用非常简单的 &lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;IPTables&lt;/a&gt;。这份防火墙配置中的一行会把 80 端口（HTTP）接收到的包发送给 Web 服务器。在 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt; 文件中，你可以在注释中看到，我添加了规则，把其他入站服务器连接转发到同一台服务器上合适的端口。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;我使用命名虚拟主机named virtual host来配置原来的 Apache Web 服务器，因为我在这个 HTTPD 实例上运行着多个网站。使用命名虚拟主机配置是个不错的方法，因为（像我一样）未来你可能会在运行其他的网站，这个方法可以使其变得容易。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/httpd/conf/httpd.conf&lt;/code&gt; 中需要迁移的虚拟主机的网站相关部分请参考下面代码。这个片段中不涉及到 IP 地址的修改，因此在新服务器上使用时不需要修改。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;在迁移之前，你需要在 &lt;code&gt;httpd.conf&lt;/code&gt; 的最顶端附近找到 &lt;code&gt;Listen&lt;/code&gt; 声明并修改成类似下面这样。这个地址是服务器的真实私有 IP 地址，不是公开 IP 地址。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;你需要修改新主机上 &lt;code&gt;Listen&lt;/code&gt; 的 IP 地址。&lt;/p&gt;
&lt;h3 id=&#34;前期工作&#34;&gt;前期工作&lt;/h3&gt;
&lt;p&gt;准备工作分为以下三步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装服务&lt;/li&gt;
&lt;li&gt;配置防火墙&lt;/li&gt;
&lt;li&gt;配置 web 服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;安装-apache-和-mariadb&#34;&gt;安装 Apache 和 MariaDB&lt;/h4&gt;
&lt;p&gt;如果你的新服务器上还没有 Apache 和 MariaDB，那么就安装它们。WordPress 的安装不是必要的。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;新服务器防火墙配置&#34;&gt;新服务器防火墙配置&lt;/h4&gt;
&lt;p&gt;确认下新服务器上的防火墙允许访问 80 端口。你&lt;em&gt;每台&lt;/em&gt;电脑上都有一个防火墙，对吗？大部分现代发行版使用的初始化配置包含的防火墙会阻止所有进来的网络流量，以此来提高安全等级。&lt;/p&gt;
&lt;p&gt;下面片段的第一行内容可能已经在你的 IPTables 或其他基于防火墙的网络过滤器中存在了。它标识已经被识别为来自可接受来源的入站包，并绕过后面的其它 INPUT 过滤规则，这样可以节省时间和 CPU 周期。片段中最后一行标识并放行 80 端口新进来的请求到 HTTPD 的连接。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;下面的示例 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt; 文件是 IPTables 最少规则的例子，可以允许 SSH（端口 22）和 HTTPD（端口 80）连接。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;在新服务器主机上我需要做的就是在 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt; 文件的防火墙规则里添加上面片段的最后一行，然后重新加载修改后的规则集。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;大部分基于红帽的发行版本，如 Fedora，使用的是 &lt;code&gt;firewalld&lt;/code&gt;。我发现对于它的适用场景（如家用、小到中型企业）而言，它过于复杂，因此我不用它。我建议你参照 &lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;firewalld 网页&lt;/a&gt; 来向 &lt;code&gt;firewalld&lt;/code&gt; 添加入站端口 80。&lt;/p&gt;
&lt;p&gt;你的防火墙及其配置可能跟这个有些差异，但最终的目的是允许新 Web 服务器 80 端口接收 HTTPD 连接。&lt;/p&gt;
&lt;h4 id=&#34;httpd-配置&#34;&gt;HTTPD 配置&lt;/h4&gt;
&lt;p&gt;在 &lt;code&gt;/etc/httpd/conf/httpd.conf&lt;/code&gt; 文件中配置 HTTPD。像下面一样在 &lt;code&gt;Listen&lt;/code&gt; 片段中设置 IP 地址。我的新 Web 服务器 IP 地址是 &lt;code&gt;192.168.0.125&lt;/code&gt;。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;复制（对应要迁移的网站的） &lt;code&gt;VirtualHost&lt;/code&gt; 片段，粘贴到新服务器上 &lt;code&gt;httpd.conf&lt;/code&gt; 文件的末尾。&lt;/p&gt;
&lt;h3 id=&#34;迁移过程&#34;&gt;迁移过程&lt;/h3&gt;
&lt;p&gt;只有两组数据需要迁移到新服务器 —— 数据库本身和网站目录结构。把两个目录打包成 &lt;code&gt;tar&lt;/code&gt; 文档。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;把两个 tar 文件复制到新服务器。我通常会把这类文件放到 &lt;code&gt;/tmp&lt;/code&gt; 下，这个目录就是用来做这种事的。在新服务器上运行下面的命令，把 tar 文档解压到正确的目录。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;WordPress 的所有文件都在 &lt;code&gt;/var/website1&lt;/code&gt; 下，因此不需要在新服务器上安装它。新服务器上不需要执行 WordPress 安装过程。&lt;/p&gt;
&lt;p&gt;这个目录就是需要迁移到新服务器上的全部内容。&lt;/p&gt;
&lt;p&gt;最后一步是启动（或重启）&lt;code&gt;mysqld&lt;/code&gt; 和 &lt;code&gt;httpd&lt;/code&gt; 服务守护进程。WrodPress 不是一个服务，因此不使用守护进程的方式来启动。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;启动之后，你应该检查下这些服务的状态。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;最终的修改&#34;&gt;最终的修改&lt;/h3&gt;
&lt;p&gt;现在所需的服务都已经运行了，你可以把 &lt;code&gt;/etc/sysconfig/iptables&lt;/code&gt; 文件中 HTTDP 的防火墙规则改成下面的样子：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;然后重新加载设置的 IPTables 规则。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;由于防火墙规则是在防火墙主机上，因此不需要把外部 DNS 入口改成指向新服务器。如果你使用的是内部 DNS 服务器，那么你需要把 IP 地址改成内部 DNS 数据库里的 A 记录。如果你没有用内部 DNS 服务器，那么请确保主机 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件里新服务器地址设置得没有问题。&lt;/p&gt;
&lt;h3 id=&#34;测试和清理&#34;&gt;测试和清理&lt;/h3&gt;
&lt;p&gt;请确保对新配置进行测试。首先，停止旧服务器上的 &lt;code&gt;mysqld&lt;/code&gt; 和 &lt;code&gt;httpd&lt;/code&gt; 服务。然后通过浏览器访问网站。如果一切符合预期，那么你可以关掉旧服务器上的 &lt;code&gt;mysqld&lt;/code&gt; 和 &lt;code&gt;httpd&lt;/code&gt;。如果有失败，你可以把 IPTables 的路由规则改回去到旧服务器上，直到问题解决。&lt;/p&gt;
&lt;p&gt;之后我把 MySQL 和 HTTPD 从旧服务器上删除了，这样来确保它们不会意外地被启动。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;就是这么简单。不需要执行数据库导出和导入的过程，因为 &lt;code&gt;mysql&lt;/code&gt; 目录下所有需要的东西都已经复制过去了。需要执行导出/导入过程的场景是：有网站自己的数据库之外的数据库；MariaDB 实例上还有其他网站，而你不想把这些网站复制到新服务器上。&lt;/p&gt;
&lt;p&gt;迁移旧服务器上的其他网站也很容易。其他网站依赖的所有数据库都已经随着 MariaDB 的迁移被转移到了新服务器上。你只需要把 &lt;code&gt;/var/website&lt;/code&gt; 目录迁移到新服务器，添加合适的虚拟主机片段，然后重启 HTTPD。&lt;/p&gt;
&lt;p&gt;我遵循这个过程把很多个网站从一个服务器迁移到另一个服务器，每次都没有问题。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/21/9/migrate-wordpress&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/21/9/migrate-wordpress&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;David Both&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xiaobin.Liu&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
&lt;p&gt;[a]    &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/users/dboth&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/users/dboth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[b]    &lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/lujun9972&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[1]    &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/browser_blue_text_editor_web.png?itok=lcf-m6N7&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/browser_blue_text_editor_web.png?itok=lcf-m6N7&lt;/a&gt; Text editor on a browser, in blue&lt;/p&gt;
&lt;p&gt;[2]    &lt;a class=&#34;link&#34; href=&#34;https://wordpress.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wordpress.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3]    &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/18/2/how-configure-apache-web-server&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/18/2/how-configure-apache-web-server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[4]    &lt;a class=&#34;link&#34; href=&#34;https://mariadb.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mariadb.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[5]    &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/16/12/cidr-network-notation-configuration-linux&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/16/12/cidr-network-notation-configuration-linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[6]    &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Iptables&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Iptables&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[7]    &lt;a class=&#34;link&#34; href=&#34;http://www.website1.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.website1.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[8]    mailto:me@website1.org&lt;/p&gt;
&lt;p&gt;[9]    &lt;a class=&#34;link&#34; href=&#34;https://firewalld.org/documentation/howto/open-a-port-or-service.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://firewalld.org/documentation/howto/open-a-port-or-service.html&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Postman 自动填充 Header</title>
        <link>https://lxb.wiki/3632d5ff/</link>
        <pubDate>Thu, 10 Mar 2022 22:51:15 +0000</pubDate>
        
        <guid>https://lxb.wiki/3632d5ff/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;基本流程&#34;&gt;基本流程&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram
participant c as Client
participant s as Server

c -&amp;gt;&amp;gt; s: request Head为空
s -&amp;gt;&amp;gt; c: token在response中

c -&amp;gt;&amp;gt; s: 取出token；设置Head
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;postman实现&#34;&gt;Postman实现&lt;/h3&gt;
&lt;h4 id=&#34;新增一个环境&#34;&gt;新增一个环境&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710185857.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710185930.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置环境变量&#34;&gt;设置环境变量&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;VARIABLE&lt;/code&gt; 名为为 &lt;code&gt;token&lt;/code&gt;, &lt;code&gt;VALUE&lt;/code&gt; 为空&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190008.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置-tests&#34;&gt;设置 Tests&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190305.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190344.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;然后点击发送。如果请求正常，那值就会填充到你的环境中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190423.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置自定义固定头部&#34;&gt;设置自定义固定头部&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190508.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190527.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710190547.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Joplin配置TeraCloud的WebDav进行同步</title>
        <link>https://lxb.wiki/f3376d3f/</link>
        <pubDate>Sat, 15 Jan 2022 20:01:15 +0000</pubDate>
        
        <guid>https://lxb.wiki/f3376d3f/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;为什么不再使用坚果云&#34;&gt;为什么不再使用坚果云&lt;/h3&gt;
&lt;p&gt;使用坚果云同步笔记，出现了无法解决的灾难性问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第三方应用访问的限制
文件上传大小限制： 当前 WebDAV 客户端和网页端上传大小的限制是一致的，默认为 500M（私有云可以通过相关设置调整）。&lt;/p&gt;
&lt;p&gt;访问频率限制： 由于WebDAV协议比较占用系统资源，免费版用户限制访问频率为每30分钟不超过600次请求。付费用户限制访问频率为每30分钟不超过1500次请求。&lt;/p&gt;
&lt;p&gt;同步目录数限制： 目前坚果云的WebDAV协议单次请求文件数（包含文件和文件夹）为750个，支持分多页多次加载。如果您使用WebDAV的三方工具未实现按分页多次加载，可能会出现文件同步不完整的情况，建议您使用坚果云客户端进行直接同步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用坚果云同步joplin是个糟糕的选择，目前有两个问题：
一个是短时间大量同步文件，会触发坚果云的限制，导致同步失败，当触发该限制后，我们能做的只有耐心等待6个小时，该限制与免费版/专业版没有关系。
另一个才是灾难，坚果云对同一文件夹内的文件采取分页传输的机制，导致Joplin一次不能获取全部文件列表，导致Joplin认为有些文件在服务器端不存在，即认为该文件要被删除，Joplin就会删除本地对应的内容，直接的表现就是当笔记达到一定数量后用坚果云同步就会出现频繁的丢笔记现象。&lt;/p&gt;
&lt;p&gt;目前Joplin官方也不建议使用坚果云。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://joplinapp.org/faq/#the-following-webdav-hosts-are-not-supported&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FAQ | Joplin (joplinapp.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 2021 年 1 月已经有用户提过 issue&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/laurent22/joplin/issues/4294&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Data lost when using the webdav to sync data · Issue #4294 · laurent22/joplin (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;joplin-配置teracloud-的webdav&#34;&gt;Joplin 配置teracloud 的WebDav&lt;/h3&gt;
&lt;h4 id=&#34;teracloud注册&#34;&gt;TeraCLOUD注册&lt;/h4&gt;
&lt;p&gt;官网地址：https://teracloud.jp/en/。&lt;/p&gt;
&lt;p&gt;进入上述官网地址之后，点击 &lt;code&gt;Create Account&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;登录填写推荐码&#34;&gt;登录&amp;amp;填写推荐码&lt;/h4&gt;
&lt;p&gt;注册账号之后，在官网地址点击 &lt;code&gt;Login&lt;/code&gt; 登录。
登录之后，点击 &lt;code&gt;My Page&lt;/code&gt; ，进入我的页面。&lt;/p&gt;
&lt;p&gt;免费用户默认只给10G空间，如果使用推荐码，可以再增加5G空间。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;My Page&lt;/code&gt; 页面，&lt;code&gt;Referral Bonus-&amp;gt;Enter Friends Referral Code&lt;/code&gt;，填写推荐码即可，如下所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710182918.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我的推荐码：BQMZ7。&lt;/p&gt;
&lt;h4 id=&#34;设置teracloud&#34;&gt;设置TeraCLOUD&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;开启WebDAV&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入 &lt;a class=&#34;link&#34; href=&#34;https://teracloud.jp/en/modules/mypage/usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;My Page&lt;/a&gt; 页面，找到&lt;code&gt;Apps Connection&lt;/code&gt;，勾选&lt;code&gt;Turn on Apps Connection&lt;/code&gt;，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710183145.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建Joplin同步文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从首页进入 &lt;a class=&#34;link&#34; href=&#34;https://aki.teracloud.jp/browser/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;File Browser&lt;/a&gt; 页面，创建用于Joplin同步的文件夹，如创建一个名为 &lt;code&gt;terajoplin&lt;/code&gt; 的文件件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710183450.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710183642.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置Joplin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开 Joplin 客户端的 &lt;code&gt;同步&lt;/code&gt; 选项&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lxbwolf/blog_source_image/main/20220710184839.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;同步目标选 &lt;code&gt;Nextcloud&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Nextcloud WebDAV URL&lt;/code&gt; 为 &lt;a class=&#34;link&#34; href=&#34;https://teracloud.jp/en/modules/mypage/usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;My Page|TeraCLOUD&lt;/a&gt; 中 &lt;code&gt;Apps Connection&lt;/code&gt; 里的 &lt;code&gt;WebDAV Connection URL&lt;/code&gt;后加刚刚在 &lt;code&gt;File Browser&lt;/code&gt; 创建的目录名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Nextcloud username&lt;/code&gt; 为 &lt;a class=&#34;link&#34; href=&#34;https://teracloud.jp/en/modules/mypage/usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;My Page|TeraCLOUD&lt;/a&gt; 中 &lt;code&gt;Apps Connection&lt;/code&gt; 里的 &lt;code&gt;Connection ID&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Nextcloud password&lt;/code&gt; 为 &lt;a class=&#34;link&#34; href=&#34;https://teracloud.jp/en/modules/mypage/usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;My Page|TeraCLOUD&lt;/a&gt; 中 &lt;code&gt;Apps Connection&lt;/code&gt; 里的 &lt;code&gt;Apps Password&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用的插件&#34;&gt;使用的插件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Embed Search&lt;/li&gt;
&lt;li&gt;Event Calendar
&lt;ul&gt;
&lt;li&gt;yaml 配置日历事件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Note list and sidebar toggle buttons
&lt;ul&gt;
&lt;li&gt;控制左侧 notebooks 和 note 栏的显示/隐藏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;macOS theme&lt;/li&gt;
&lt;li&gt;Enhancement(弃用)
&lt;ul&gt;
&lt;li&gt;在代码块中误输入后，无法撤销&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kitty Minder(naotu)(弃用)&lt;/li&gt;
&lt;li&gt;draw.io(弃用)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>hexo支持mermaid</title>
        <link>https://lxb.wiki/6541b31d/</link>
        <pubDate>Wed, 15 Sep 2021 21:34:12 +0000</pubDate>
        
        <guid>https://lxb.wiki/6541b31d/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;一定要参考[官网](&lt;a class=&#34;link&#34; href=&#34;https://mermaid-js.github.io/mermaid/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs. (mermaid-js.github.io)&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;不要相信垃圾 CSDN&lt;/p&gt;
&lt;h2 id=&#34;安装插件&#34;&gt;安装插件&lt;/h2&gt;
&lt;p&gt;npm 安装&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install hexo-filter-mermaid-diagrams
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;项目 [GitHub 主页]&lt;a class=&#34;link&#34; href=&#34;https://github.com/webappdevelp/hexo-filter-mermaid-diagrams&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;webappdevelp/hexo-filter-mermaid-diagrams: mermaid diagrams for hexo (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;编辑配置文件&#34;&gt;编辑配置文件&lt;/h2&gt;
&lt;p&gt;修改文件 &lt;code&gt;themes/pure/_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件最好添加以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mermaid chart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;mermaid&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;## mermaid url https://github.com/knsv/mermaid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enable&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# default true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7.1.2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# default v7.1.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;options&lt;/span&gt;:  &lt;span style=&#34;color:#75715e&#34;&gt;# find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#startOnload: true  // default true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在-ejs-中引入-mermaidjs&#34;&gt;在 ejs 中引入 mermaid.js&lt;/h2&gt;
&lt;p&gt;修改 &lt;code&gt;themes/pure/layout/_common/footer.ejs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加以下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt;) { &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (window.&lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;forest&amp;#39;&lt;/span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;%&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;qa&#34;&gt;Q&amp;amp;A&lt;/h2&gt;
&lt;p&gt;如果加载完后，显示的图不正确，那么很有可能是因为引入 &lt;code&gt;mermaid.min.js&lt;/code&gt; 的链接不正确&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mac iTerm2，使用rz和sz无效，解决方式</title>
        <link>https://lxb.wiki/32451f0a/</link>
        <pubDate>Thu, 13 May 2021 23:25:13 +0000</pubDate>
        
        <guid>https://lxb.wiki/32451f0a/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;1安装lrzsz要先安装brew&#34;&gt;1.安装lrzsz（要先安装brew）&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install lrzsz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2配置&#34;&gt;2.配置&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /usr/local/bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在&lt;code&gt;/usr/loal/bin&lt;/code&gt; 目录下创建两个文件&lt;/p&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi iterm2-recv-zmodem.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi iterm2-send-zmodem.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建好两个文件后分别添加内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;iterm2-recv-zmodem.sh&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Author: Matt Mastracci (matthew@mastracci.com)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# licensed under cc-wiki with attribution required &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remainder of script public domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osascript -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm2&amp;#34; to version&amp;#39;&lt;/span&gt; &amp;gt; /dev/null 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iTerm2 &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iTerm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $NAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iTerm&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FILE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;osascript -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm&amp;#34; to activate&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm&amp;#34; to set thefile to choose folder with prompt &amp;#34;Choose a folder to place received files in&amp;#34;&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;do shell script (\&amp;#34;echo \&amp;#34;&amp;amp;(quoted form of POSIX path of thefile as Unicode text)&amp;amp;\&amp;#34;\&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FILE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;osascript -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm2&amp;#34; to activate&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm2&amp;#34; to set thefile to choose folder with prompt &amp;#34;Choose a folder to place received files in&amp;#34;&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;do shell script (\&amp;#34;echo \&amp;#34;&amp;amp;(quoted form of POSIX path of thefile as Unicode text)&amp;amp;\&amp;#34;\&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $FILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo Cancelled.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Send ZModem cancel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo -e &lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#ae81ff&#34;&gt;\#&lt;/span&gt; Cancelled transfer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$FILE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    /usr/local/bin/rz -E -e -b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#ae81ff&#34;&gt;\#&lt;/span&gt; Sent &lt;span style=&#34;color:#ae81ff&#34;&gt;\-\&amp;gt;&lt;/span&gt; $FILE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;iterm2-send-zmodem.sh&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Author: Matt Mastracci (matthew@mastracci.com)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# licensed under cc-wiki with attribution required &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remainder of script public domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;osascript -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm2&amp;#34; to version&amp;#39;&lt;/span&gt; &amp;gt; /dev/null 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iTerm2 &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;iTerm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $NAME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iTerm&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FILE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;osascript -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm&amp;#34; to activate&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm&amp;#34; to set thefile to choose file with prompt &amp;#34;Choose a file to send&amp;#34;&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;do shell script (\&amp;#34;echo \&amp;#34;&amp;amp;(quoted form of POSIX path of thefile as Unicode text)&amp;amp;\&amp;#34;\&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FILE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;osascript -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm2&amp;#34; to activate&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tell application &amp;#34;iTerm2&amp;#34; to set thefile to choose file with prompt &amp;#34;Choose a file to send&amp;#34;&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;do shell script (\&amp;#34;echo \&amp;#34;&amp;amp;(quoted form of POSIX path of thefile as Unicode text)&amp;amp;\&amp;#34;\&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $FILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo Cancelled.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Send ZModem cancel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo -e &lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;x18
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#ae81ff&#34;&gt;\#&lt;/span&gt; Cancelled transfer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    /usr/local/bin/sz &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$FILE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -e -b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#ae81ff&#34;&gt;\#&lt;/span&gt; Received $FILE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将文件写好后保存好，使用如下命令添加权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;777&lt;/span&gt; iterm2-*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置好配置文件之后，开始对iTerm2进行配置&lt;/p&gt;
&lt;p&gt;点击 iTerm2 的设置界面 &lt;code&gt;Perference-&amp;gt; Profiles -&amp;gt; Default -&amp;gt; Advanced -&amp;gt; Triggers&lt;/code&gt; 的 &lt;code&gt;Edit&lt;/code&gt; 按钮，加入以下配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210513232741.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Regular expression: rz waiting to receive.&lt;span style=&#34;color:#ae81ff&#34;&gt;\*\*&lt;/span&gt;B0100
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Action: Run Silent Coprocess
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Parameters: /usr/local/bin/iterm2-send-zmodem.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Regular expression: &lt;span style=&#34;color:#ae81ff&#34;&gt;\*\*&lt;/span&gt;B00000000000000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Action: Run Silent Coprocess
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Parameters: /usr/local/bin/iterm2-recv-zmodem.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;备注：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;rz 上传功能：在bash中，也就是iTerm2终端输入rz 就会弹出文件选择框，选择文件 choose 就开始上传，会上传到当前目录
sz 下载功能 ：sz fileName(你要下载的文件的名字) 回车，会弹出窗体 我们选择要保存的地方即可。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>误删了Mac中Chrome书签后如何恢复</title>
        <link>https://lxb.wiki/ef3fb32/</link>
        <pubDate>Sat, 01 May 2021 18:44:48 +0000</pubDate>
        
        <guid>https://lxb.wiki/ef3fb32/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;书签误删该如何恢复&lt;/p&gt;
&lt;p&gt;1 打开访达，在菜单栏上点击【前往】—【前往文件夹】，或者使用快捷键【Command+Shift+G】即可打开【前往文件夹】&lt;/p&gt;
&lt;p&gt;输入以下路径【/Users/用户名/Library/Application Support/Google/Chrome】（注：路径中的用户名就是你电脑用户名称&lt;/p&gt;
&lt;p&gt;2 在chrome文件目录下找到 【Default】文件夹，将里面的 【Bookmarks.bak】 的文件复制到桌面，将.bak名的后缀去掉，如下图所示：&lt;/p&gt;
&lt;p&gt;注：如果你有多个用户的话，则需要找到对应的用户，一般在文件名为“Profile1、2、3”底下。&lt;/p&gt;
&lt;p&gt;3 在同样的文件夹底下，将修改好的 Bookmarks 复制进 去替换，重启chrome即可。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Joplin&#43;坚果云作为主力笔记工具</title>
        <link>https://lxb.wiki/f5496f4b/</link>
        <pubDate>Tue, 09 Mar 2021 21:07:57 +0000</pubDate>
        
        <guid>https://lxb.wiki/f5496f4b/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;之前的云笔记工具一直是有道云，免费版本已经足够使用了。&lt;/p&gt;
&lt;p&gt;让我下定决心放弃有道云的导火索是，突然有一天，我发现 MAC 和 Android 端都无法登录了。微博、知乎随便一搜“有道云不能登录”，发现这个问题从 2016 年就有很多用户遇到过（是很多用户，我遇到的问题并不是偶发），一直到 2021 年还没有解决（后来还发现，有道云把微博和知乎有关“有道云不能登录”的用户发帖全删了）。有道云连最基本的可用性和可靠性都无法保证，遂决定弃用有道云，转战其他工具平台。&lt;/p&gt;
&lt;p&gt;尝试过的笔记工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;印象笔记&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OneNote&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Notion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语雀&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不看好语雀&lt;/li&gt;
&lt;li&gt;纯在线服务，不能本地存储；当有一天服务端故障时，用户就完全不能使用&lt;/li&gt;
&lt;li&gt;阿里内部的绩效项目，开发人员凭这个项目完成晋升后，一定会进入不再开发新功能的轮回&lt;/li&gt;
&lt;li&gt;阿里系的其他产品也应谨慎使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为知笔记&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能不完善，搜索功能不能用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他笔记都无法完全匹配我的使用习惯。最后决定，使用开源的 joplin。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://joplinapp.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;joplin 官网&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;joplin-介绍&#34;&gt;Joplin 介绍&lt;/h1&gt;
&lt;p&gt;Joplin 旨在取代印象笔记，成为全平台的免费开源笔记，其笔记的的书写格式是 markdown，界面支持中文。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开源&lt;/li&gt;
&lt;li&gt;多种同步方式可选择: WebDav、OneDrive、DroupOut、Nextcloud
&lt;ul&gt;
&lt;li&gt;支持 WebDav 的网盘：
&lt;ul&gt;
&lt;li&gt;国外网盘：Box、Dropbox、&lt;strong&gt;TeraCLOUD&lt;/strong&gt;、yandex、TransIP&lt;/li&gt;
&lt;li&gt;国内网盘：坚果云、城通网盘&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;支持笔记加密，防止数据存储平台偷看笔记内容&lt;/li&gt;
&lt;li&gt;全平台支持。我使用的平台有 MacOS、Android、Linux&lt;/li&gt;
&lt;li&gt;支持从印象笔记和 markdown 文件导入&lt;/li&gt;
&lt;li&gt;有浏览器剪藏插件&lt;/li&gt;
&lt;li&gt;笔记格式为 markdown&lt;/li&gt;
&lt;li&gt;支持各种插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;joplin-安装&#34;&gt;Joplin 安装&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://joplinapp.org/#installation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Joplin 官网&lt;/a&gt; 下载 + 安装&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210509103914.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;界面说明&#34;&gt;界面说明&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210509103956.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h1 id=&#34;配置坚果云同步&#34;&gt;配置坚果云同步&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;我的同步服务器已从坚果云迁移到 TeraCLOUD&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://lxb.wiki/f3376d3f/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Joplin配置TeraCloud的WebDav进行同步&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注册&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;坚果云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;创建文件夹，起名为 joplin&lt;/li&gt;
&lt;li&gt;点击右上角 &lt;strong&gt;账户信息 -&amp;gt; 安全选项 -&amp;gt; 添加应用&lt;/strong&gt;；应用名称为 joplin&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210509104440.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;打开 Joplin，点击菜单&lt;strong&gt;首选项-&amp;gt;同步&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;同步目标&lt;/strong&gt; WebDAV&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工具-&amp;gt;选项-&amp;gt;同步&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://dav.jianguoyun.com/dav/joplin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://dav.jianguoyun.com/dav/joplin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebDAV 用户名&lt;/strong&gt; 注册坚果云的用户名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebDAV 密码&lt;/strong&gt; 坚果云新添加的 joplin 的应用密码（不是坚果云登录密码）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210509104829.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;strong&gt;检查同步配置&lt;/strong&gt;，显示成功即可点击应用开始同步&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置外部编辑器（可选）。&lt;strong&gt;首选项 -&amp;gt; 通用选项 -&amp;gt; Path&lt;/strong&gt;，在应用程序中选择 Typora&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210509105652.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【译】使用子模块和子树来管理 Git 项目</title>
        <link>https://lxb.wiki/331c3227/</link>
        <pubDate>Wed, 23 Dec 2020 22:11:17 +0000</pubDate>
        
        <guid>https://lxb.wiki/331c3227/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;使用子模块和子树来帮助你管理多个存储库中共有的子项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103222058.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果你参与了开源项目的开发，那么你很可能已经用了 Git 来管理你的源码。你可能遇到过有很多依赖和/或子项目的项目。你是如何管理它们的？&lt;/p&gt;
&lt;p&gt;对于一个开源组织，要实现社区&lt;strong&gt;和&lt;/strong&gt;产品的单一来源文档和依赖管理比较棘手。文档和项目往往会碎片化和变得冗余，这致使它们很难维护。&lt;/p&gt;
&lt;h3 id=&#34;必要性&#34;&gt;必要性&lt;/h3&gt;
&lt;p&gt;假设你想把单个项目作为一个存储库内的子项目，传统的方法是把该项目复制到父存储库中，但是，如果你想要在多个父项目中使用同一个子项目呢？如果把子项目复制到所有父项目中，当有更新时，你都要在每个父项目中做修改，这是不太可行的。这会导致父项目中的冗余和数据不一致，使更新和维护子项目变得很困难。&lt;/p&gt;
&lt;h3 id=&#34;git-子模块和子树&#34;&gt;Git 子模块和子树&lt;/h3&gt;
&lt;p&gt;如果你可以用一条命令把一个项目放进另一个项目中，会怎样呢？如果你随时可以把一个项目作为子项目添加到任意数目的项目中，并可以同步更新修改呢？Git 提供了这类问题的解决方案：Git 子模块submodule&lt;!-- raw HTML omitted --&gt;子模块&lt;!-- raw HTML omitted --&gt;submodule&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;和 Git 子树subtree&lt;!-- raw HTML omitted --&gt;子树&lt;!-- raw HTML omitted --&gt;subtree&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;。创建这些工具的目的是以更加模块化的水平来支持共用代码的开发工作流，旨在 Git 存储库源码管理source-code management&lt;!-- raw HTML omitted --&gt;源码管理&lt;!-- raw HTML omitted --&gt;source-code management&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（SCM）与它下面的子树之间架起一座桥梁。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103222135.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Cherry tree growing on a mulberry tree&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;生长在桑树上的樱桃树&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下面是本文要详细介绍的概念的一个真实应用场景。如果你已经很熟悉树形结构，这个模型看起来是下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103222254.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Tree with subtrees&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;git-子模块是什么&#34;&gt;Git 子模块是什么？&lt;/h3&gt;
&lt;p&gt;Git 在它默认的包中提供了子模块，子模块可以把 Git 存储库嵌入到其他存储库中。确切地说，Git 子模块指向子树中的某次提交。下面是我 &lt;a class=&#34;link&#34; href=&#34;https://github.com/manaswinidas/Docs-test/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docs-test&lt;/a&gt; GitHub 存储库中的 Git 子模块的样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103222434.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Git submodules screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:folder@commitId&#34; &gt;文件夹@提交 Id&lt;/a&gt; 格式表明这个存储库是一个子模块，你可以直接点击文件夹进入该子树。名为 &lt;code&gt;.gitmodules&lt;/code&gt; 的配置文件包含所有子模块存储库的详细信息。我的存储库的 &lt;code&gt;.gitmodules&lt;/code&gt; 文件如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103222553.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Screenshot of .gitmodules file&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;你可以用下面的命令在你的存储库中使用 Git 子模块：&lt;/p&gt;
&lt;h4 id=&#34;克隆一个存储库并加载子模块&#34;&gt;克隆一个存储库并加载子模块&lt;/h4&gt;
&lt;p&gt;克隆一个含有子模块的存储库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git clone --recursive &amp;lt;URL to Git repo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你之前已经克隆了存储库，现在想加载它的子模块：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update --init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果有嵌套的子模块：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;下载子模块&#34;&gt;下载子模块&lt;/h4&gt;
&lt;p&gt;串行地连续下载多个子模块是很枯燥的工作，所以 &lt;code&gt;clone&lt;/code&gt; 和 &lt;code&gt;submodule update&lt;/code&gt; 会支持 &lt;code&gt;--jobs&lt;/code&gt; （或 &lt;code&gt;-j&lt;/code&gt;）参数：&lt;/p&gt;
&lt;p&gt;例如，想一次下载 8 个子模块，使用：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update --init --recursive -j 8
$ git clone --recursive --jobs 8 &amp;lt;URL to Git repo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;拉取子模块&#34;&gt;拉取子模块&lt;/h4&gt;
&lt;p&gt;在运行或构建父项目之前，你需要确保依赖的子项目都是最新的。&lt;/p&gt;
&lt;p&gt;拉取子模块的所有修改：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update --remote
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;使用子模块创建存储库&#34;&gt;使用子模块创建存储库：&lt;/h4&gt;
&lt;p&gt;向一个父存储库添加子树：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule add &amp;lt;URL to Git repo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;初始化一个已存在的 Git 子模块：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以通过为 &lt;code&gt;submodule update&lt;/code&gt; 命令添加 &lt;code&gt;--update&lt;/code&gt; 参数在子模块中创建分支和追踪提交：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update --remote
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;更新子模块的提交&#34;&gt;更新子模块的提交&lt;/h4&gt;
&lt;p&gt;上面提到过，一个子模块就是一个指向子树中某次提交的链接。如果你想更新子模块的提交，不要担心。你不需要显式地指定最新的提交。你只需要使用通用的 &lt;code&gt;submodule update&lt;/code&gt; 命令：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git submodule update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就像你平时创建父存储库和把父存储库推送到 GitHub 那样添加和提交就可以了。&lt;/p&gt;
&lt;h4 id=&#34;从一个父存储库中删除一个子模块&#34;&gt;从一个父存储库中删除一个子模块&lt;/h4&gt;
&lt;p&gt;仅仅手动删除一个子项目文件夹不会从父项目中移除这个子项目。想要删除名为 &lt;code&gt;childmodule&lt;/code&gt; 的子模块，使用：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git rm -f childmodule
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;虽然 Git 子模块看起来很容易上手，但是对于初学者来说，有一定的使用门槛。&lt;/p&gt;
&lt;h3 id=&#34;git-子树是什么&#34;&gt;Git 子树是什么？&lt;/h3&gt;
&lt;p&gt;Git 子树 subtree&lt;!-- raw HTML omitted --&gt;子树&lt;!-- raw HTML omitted --&gt; subtree&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;，是在 Git 1.7.11 引入的，让你可以把任何存储库的副本作为子目录嵌入另一个存储库中。它是 Git 项目可以注入和管理项目依赖的几种方法之一。它在常规的提交中保存了外部依赖信息。Git 子树提供了整洁的集成点，因此很容易复原它们。&lt;/p&gt;
&lt;p&gt;如果你参考 &lt;a class=&#34;link&#34; href=&#34;https://help.github.com/en/github/using-git/about-git-subtree-merges&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 提供的子树教程&lt;/a&gt;来使用子树，那么无论你什么时候添加子树，在本地都不会看到 &lt;code&gt;.gittrees&lt;/code&gt; 配置文件。这让我们很难分辨哪个是子树，因为它们看起来很像普通的文件夹，但是它们却是子树的副本。默认的 Git 包中不提供带 &lt;code&gt;.gittrees&lt;/code&gt; 配置文件的 Git 子树版本，因此如果你想要带 &lt;code&gt;.gittrees&lt;/code&gt; 配置文件的 git-subtree 命令，必须从 Git 源码存储库的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/git/git/tree/master/contrib/subtree&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;/contrib/subtree 文件夹&lt;/a&gt; 下载 git-subtree。&lt;/p&gt;
&lt;p&gt;你可以像克隆其他常规的存储库那样克隆任何含有子树的存储库，但由于在父存储库中有整个子树的副本，因此克隆过程可能会持续很长时间。&lt;/p&gt;
&lt;p&gt;你可以用下面的命令在你的存储库中使用 Git 子树。&lt;/p&gt;
&lt;h4 id=&#34;向父存储库中添加一个子树&#34;&gt;向父存储库中添加一个子树&lt;/h4&gt;
&lt;p&gt;想要向父存储库中添加一个子树，首先你需要执行 &lt;code&gt;remote add&lt;/code&gt;，之后执行 &lt;code&gt;subtree add&lt;/code&gt; 命令：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git remote add remote-name &amp;lt;URL to Git repo&amp;gt;
$ git subtree add --prefix=folder/ remote-name &amp;lt;URL to Git repo&amp;gt; subtree-branchname
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的命令会把整个子项目的提交历史合并到父存储库。&lt;/p&gt;
&lt;h4 id=&#34;向子树推送修改以及从子树拉取修改&#34;&gt;向子树推送修改以及从子树拉取修改&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git subtree push-all
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git subtree pull-all
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;你应该使用哪个&#34;&gt;你应该使用哪个？&lt;/h3&gt;
&lt;p&gt;任何工具都有优缺点。下面是一些可能会帮助你决定哪种最适合你的特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git 子模块的存储库占用空间更小，因为它们只是指向子项目的某次提交的链接，而 Git 子树保存了整个子项目及其提交历史。&lt;/li&gt;
&lt;li&gt;Git 子模块需要在服务器中可访问，但子树是去中心化的。&lt;/li&gt;
&lt;li&gt;Git 子模块大量用于基于组件的开发，而 Git 子树多用于基于系统的开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git 子树并不是 Git 子模块的直接可替代项。有明确的说明来指导我们该使用哪种。如果有一个归属于你的外部存储库，使用场景是向它回推代码，那么就使用 Git 子模块，因为推送代码更容易。如果你有第三方代码，且不会向它推送代码，那么使用 Git 子树，因为拉取代码更容易。&lt;/p&gt;
&lt;p&gt;自己尝试使用 Git 子树和子模块，然后在评论中留下你的使用感想。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/20/5/git-submodules-subtrees&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/20/5/git-submodules-subtrees&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://opensource.com/users/manaswinidas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Manaswini Das&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Xiaobin.Liu&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【译】了解一下 Fossil，一个 Git 的替代品</title>
        <link>https://lxb.wiki/ff3c9770/</link>
        <pubDate>Thu, 10 Dec 2020 21:54:47 +0000</pubDate>
        
        <guid>https://lxb.wiki/ff3c9770/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;blockquote&gt;
&lt;p&gt;Fossil 是一个集版本控制系统、bug 追踪、维基、论坛以及文档解决方案于一体的系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103215724.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;每个开发者都知道，追踪代码的修改是至关重要的。有时候你会处于好奇或者教育的目的需要展示你的项目开始和进化的历史。有时候你想让其他的开发者参与到你的项目中，因此你需要一种值得信赖的能合并不同代码分支的方法。更极端一点，有时候你为了解决一个问题而修改的代码导致已有的功能不能正常使用。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://fossil-scm.org/home/doc/trunk/www/index.wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Fossil&lt;/a&gt; 源码管理系统是由著名的 &lt;a class=&#34;link&#34; href=&#34;https://www.sqlite.org/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SQLite&lt;/a&gt; 数据库的作者开发的一个集版本控制系统、bug 追踪、维基、论坛以及文档解决方案于一体的系统。&lt;/p&gt;
&lt;h3 id=&#34;安装-fossil&#34;&gt;安装 Fossil&lt;/h3&gt;
&lt;p&gt;Fossil 是一个独立的 C 程序，因此你可以从它的网站上&lt;a class=&#34;link&#34; href=&#34;https://fossil-scm.org/home/uv/download.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载&lt;/a&gt;后放在环境变量 &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/17/6/set-path-linux&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PATH&lt;/a&gt; 中的任意位置。例如，假定 &lt;code&gt;/usr/local/bin&lt;/code&gt; 已经在你的环境变量中（默认情况下是在的）：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ wget https://fossil-scm.org/home/uv/fossil-linux-x64-X.Y.tar.gz
$ sudo tar xvf fossil-linux-x64-X.Y.tar.gz --directory /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你也可以通过包管理器从软件仓库中找到 Fossil，或者直接从源码编译。&lt;/p&gt;
&lt;h3 id=&#34;创建一个-fossil-仓库&#34;&gt;创建一个 Fossil 仓库&lt;/h3&gt;
&lt;p&gt;如果你已经有一个代码项目，想用 Fossil 来追踪，那么第一步就是创建一个 Fossil 仓库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil init myproject.fossil
project-id: 010836ac6112fefb0b015702152d447c8c1d8604
server-id:  54d837e9dc938ba1caa56d31b99c35a4c9627f44
admin-user: klaatu (initial password is &amp;#34;14b605&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建 Fossil 仓库的过程中会返回三行信息：一个唯一的项目 ID、一个唯一的服务器 ID 以及管理员 ID 和密码。项目 ID 和服务器 ID 是版本数字。管理员凭证表明你对这个仓库的所有权，当你把 Fossil 作为服务器让其他用户来访问时可以使用管理员权限。&lt;/p&gt;
&lt;h3 id=&#34;fossil-仓库工作流&#34;&gt;Fossil 仓库工作流&lt;/h3&gt;
&lt;p&gt;在你使用 Fossil 仓库之前，你需要先为它的数据创建一个工作路径。你可以把这个过程类比为使用 Python 时创建一个虚拟环境或者解压一个只用来备份的 ZIP 文件。&lt;/p&gt;
&lt;p&gt;创建一个工作目录并进入：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mkdir myprojectdir
$ cd myprojectdir
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;把你的 Fossil 打开到刚刚创建的目录：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil open ../myproject
project-name: &amp;lt;unnamed&amp;gt;
repository:   /home/klaatu/myprojectdir/../myproject
local-root:   /home/klaatu/myprojectdir/
config-db:    /home/klaatu/.fossil
project-code: 010836ac6112fefb0b015702152d447c8c1d8604
checkout:     9e6cd96dd675544c58a246520ad58cdd460d1559 2020-11-09 04:09:35 UTC
tags:         trunk
comment:      initial empty check-in (user: klaatu)
check-ins:    1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可能注意到了，Fossil 在你的家目录下创建了一个名为 &lt;code&gt;.fossil&lt;/code&gt; 的隐藏文件，用来追踪你的全局 Fossil 配置。这个配置不是只适用于你的一个项目的；这个文件只会在你第一次使用 Fossil 时生成。&lt;/p&gt;
&lt;h4 id=&#34;添加文件&#34;&gt;添加文件&lt;/h4&gt;
&lt;p&gt;使用 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;commit&lt;/code&gt; 子命令来向你的仓库添加文件。例如，创建一个简单的 &lt;code&gt;README&lt;/code&gt; 文件，把它添加到仓库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ echo &amp;#34;My first Fossil project&amp;#34; &amp;gt; README
$ fossil add README
ADDED  README
$ fossil commit -m &amp;#39;My first commit&amp;#39;
New_Version: 2472a43acd11c93d08314e852dedfc6a476403695e44f47061607e4e90ad01aa
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;使用分支&#34;&gt;使用分支&lt;/h4&gt;
&lt;p&gt;Fossil 仓库开始时默认使用的主分支名为 &lt;code&gt;trunk&lt;/code&gt;。当你想修改代码而又不影响主干代码时，你可以从 trunk 分支切走。创建新分支需要使用 &lt;code&gt;branch&lt;/code&gt; 子命令，这个命令需要两个参数：一个新分支的名字，一个新分支的基分支名字。在本例中，只有一个分支 &lt;code&gt;trunk&lt;/code&gt;，因此尝试创建一个名为 &lt;code&gt;dev&lt;/code&gt; 的新分支：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil branch --help
Usage: fossil branch new BRANCH-NAME BASIS ?OPTIONS?
$ fossil branch new dev trunk
New branch: cb90e9c6f23a9c98e0c3656d7e18d320fa52e666700b12b5ebbc4674a0703695
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你已经创建了一个新分支，但是你当前所在的分支仍然是 &lt;code&gt;trunk&lt;/code&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil branch current
trunk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用 &lt;code&gt;checkout&lt;/code&gt; 命令切换到你的新分支 &lt;code&gt;dev&lt;/code&gt;：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil checkout dev
dev
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;合并修改&#34;&gt;合并修改&lt;/h4&gt;
&lt;p&gt;假设你在 &lt;code&gt;dev&lt;/code&gt; 分支中添加了一个新文件，完成了测试，现在想把它合并到 &lt;code&gt;trunk&lt;/code&gt;。这个过程叫做&lt;em&gt;合并&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;首先，切回目标分支（本例中目标分支为 &lt;code&gt;trunk&lt;/code&gt;）：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil checkout trunk
trunk
$ ls
README
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个分支中没有你的新文件（或者你对其他文件的修改），而那些内容是合并的过程需要的信息：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil merge dev
 &amp;#34;fossil undo&amp;#34; is available to undo changes to the working checkout.
$ ls
myfile.lua  README
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;查看-fossil-时间线&#34;&gt;查看 Fossil 时间线&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;timeline&lt;/code&gt; 选项来查看仓库的历史。这个命令列出了你的仓库的所有活动的详细信息，包括用来表示每次修改的哈希值、每次提交时填写的信息以及提交者：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil timeline
=== 2020-11-09 ===
06:24:16 [5ef06e668b] added exciting new file (user: klaatu tags: dev)
06:11:19 [cb90e9c6f2] Create new branch named &amp;#34;dev&amp;#34; (user: klaatu tags: dev)
06:08:09 [a2bb73e4a3] *CURRENT* some additions were made (user: klaatu tags: trunk)
06:00:47 [2472a43acd] This is my first commit. (user: klaatu tags: trunk)
04:09:35 [9e6cd96dd6] initial empty check-in (user: klaatu tags: trunk)
+++ no more data (5) +++
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20210103215802.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Fossil UI&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;公开你的-fossil-仓库&#34;&gt;公开你的 Fossil 仓库&lt;/h3&gt;
&lt;p&gt;因为 Fossil 有个内置的 web 界面，所以 Fossil 不像 GitLab 和 Gitea 那样需要主机服务。Fossil 就是它自己的主机服务，只要你把它放在一台机器上就行了。在你公开你的 Fossil 仓库之前，你还需要通过 web 用户界面（UI）来配置一些信息：&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;ui&lt;/code&gt; 子命令启动一个本地的实例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ pwd
/home/klaatu/myprojectdir/
$ fossil ui
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;“Users” 和 “Settings” 是安全相关的，“Configuration” 是项目属性相关的（包括一个合适的标题）。web 界面不仅仅是一个方便的功能。 它是能在生产环境中使用并作为 Fossil 项目的宿主机来使用的。它还有一些其他的高级选项，比如用户管理（或者叫自我管理）、在同一个服务器上与其他的 Fossil 仓库进行单点登录（SSO）。&lt;/p&gt;
&lt;p&gt;当配置完成后，关掉 web 界面并按下 &lt;code&gt;Ctrl+C&lt;/code&gt; 来停止 UI 引擎。像提交代码一样提交你的 web 修改。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil commit -m &amp;#39;web ui updates&amp;#39;
New_Version: 11fe7f2855a3246c303df00ec725d0fca526fa0b83fa67c95db92283e8273c60
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在你可以配置你的 Fossil 服务器了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把你的 Fossil 仓库（本例中是 &lt;code&gt;myproject.fossil&lt;/code&gt;）复制到服务器，你只需要这一个文件。&lt;/li&gt;
&lt;li&gt;如果你的服务器没有安装 Fossil，就在你的服务器上安装 Fossil。在服务器上安装的过程跟在本地一样。&lt;/li&gt;
&lt;li&gt;在你的 &lt;code&gt;cgi-bin&lt;/code&gt; 目录下（或它对应的目录，这取决于你的 HTTP 守护进程）创建一个名为 &lt;code&gt;repo_myproject.cgi&lt;/code&gt; 的文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/usr/local/bin/fossil
repository: /home/klaatu/public_html/myproject.fossil
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;添加可执行权限：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ chmod +x repo_myproject.cgi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你需要做的都已经做完了。现在可以通过互联网访问你的项目了。&lt;/p&gt;
&lt;p&gt;你可以通过 CGI 脚本来访问 web UI，例如 &lt;code&gt;https://example.com/cgi-bin/repo_myproject.cgi&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;你也可以通过命令行来进行交互：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil clone https://klaatu@example.com/cgi-bin/repo_myproject.cgi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在本地的克隆仓库中工作时，你需要使用 &lt;code&gt;push&lt;/code&gt; 子命令把本地的修改推送到远程的仓库，使用 &lt;code&gt;pull&lt;/code&gt; 子命令把远程的修改拉取到本地仓库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fossil push https://klaatu@example.com/cgi-bin/repo_myproject.cgi
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用-fossil-作为独立的托管&#34;&gt;使用 Fossil 作为独立的托管&lt;/h3&gt;
&lt;p&gt;Fossil 将大量的权力交到了你的手中（以及你的合作者的手中），让你不再依赖托管服务。本文只是简单的介绍了基本概念。你的代码项目还会用到很多有用的 Fossil 功能。尝试一下 Fossil。它不仅会改变你对版本控制的理解；它会让你不再考虑其他的版本控制系统。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/20/11/fossil&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/20/11/fossil&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://opensource.com/users/klaatu&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Klaatu&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lxbwolf&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Tmux 使用教程</title>
        <link>https://lxb.wiki/176a23be/</link>
        <pubDate>Mon, 30 Nov 2020 23:46:08 +0000</pubDate>
        
        <guid>https://lxb.wiki/176a23be/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;1-tmux-是什么&#34;&gt;1 Tmux 是什么？&lt;/h2&gt;
&lt;h3 id=&#34;11-会话与进程&#34;&gt;1.1 会话与进程&lt;/h3&gt;
&lt;p&gt;命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称&amp;quot;窗口&amp;quot;），在里面输入命令。&lt;strong&gt;用户与计算机的这种临时的交互，称为一次&amp;quot;会话&amp;quot;（session）&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;会话的一个重要特点是，窗口与其中启动的进程是&lt;a class=&#34;link&#34; href=&#34;https://lxb.wiki/2e3ff18f/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;连在一起&lt;/a&gt;的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。&lt;/p&gt;
&lt;p&gt;一个典型的例子就是，SSH 登录远程计算机，打开一个远程窗口执行命令。这时，网络突然断线，再次登录的时候，是找不回上一次执行的命令的。因为上一次 SSH 会话已经终止了，里面的进程也随之消失了。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，会话与窗口可以&amp;quot;解绑&amp;quot;：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话&amp;quot;绑定&amp;quot;其他窗口。&lt;/p&gt;
&lt;h3 id=&#34;12-tmux-的作用&#34;&gt;1.2 Tmux 的作用&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Tmux 就是会话与窗口的&amp;quot;解绑&amp;quot;工具，将它们彻底分离。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。&lt;/p&gt;
&lt;p&gt;（2） 它可以让新窗口&amp;quot;接入&amp;quot;已经存在的会话。&lt;/p&gt;
&lt;p&gt;（3）它允许每个会话有多个连接窗口，因此可以多人实时共享会话。&lt;/p&gt;
&lt;p&gt;（4）它还支持窗口任意的垂直和水平拆分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大。&lt;/p&gt;
&lt;h2 id=&#34;2-基本用法&#34;&gt;2 基本用法&lt;/h2&gt;
&lt;h3 id=&#34;21-安装&#34;&gt;2.1 安装&lt;/h3&gt;
&lt;p&gt;Tmux 一般需要自己安装。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Ubuntu 或 Debian&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get install tmux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# CentOS 或 Fedora&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo yum install tmux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;22-启动与退出&#34;&gt;2.2 启动与退出&lt;/h3&gt;
&lt;p&gt;安装完成后，键入&lt;code&gt;tmux&lt;/code&gt;命令，就进入了 Tmux 窗口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;上面命令会启动 Tmux 窗口，底部有一个状态栏。状态栏的左侧是窗口信息（编号和名称），右侧是系统信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20201201001437.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;按下&lt;code&gt;Ctrl+d&lt;/code&gt;或者显式输入&lt;code&gt;exit&lt;/code&gt;命令，就可以退出 Tmux 窗口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;23-前缀键&#34;&gt;2.3 前缀键&lt;/h3&gt;
&lt;p&gt;Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是&lt;code&gt;Ctrl+b&lt;/code&gt;，即先按下&lt;code&gt;Ctrl+b&lt;/code&gt;，快捷键才会生效。&lt;/p&gt;
&lt;p&gt;举例来说，帮助命令的快捷键是&lt;code&gt;Ctrl+b ?&lt;/code&gt;。它的用法是，在 Tmux 窗口中，先按下&lt;code&gt;Ctrl+b&lt;/code&gt;，再按下&lt;code&gt;?&lt;/code&gt;，就会显示帮助信息。&lt;/p&gt;
&lt;p&gt;然后，按下 ESC 键或&lt;code&gt;q&lt;/code&gt;键，就可以退出帮助。&lt;/p&gt;
&lt;h2 id=&#34;3-会话管理&#34;&gt;3 会话管理&lt;/h2&gt;
&lt;h3 id=&#34;31-新建会话&#34;&gt;3.1 新建会话&lt;/h3&gt;
&lt;p&gt;第一个启动的 Tmux 窗口，编号是&lt;code&gt;0&lt;/code&gt;，第二个窗口的编号是&lt;code&gt;1&lt;/code&gt;，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。&lt;/p&gt;
&lt;p&gt;使用编号区分会话，不太直观，更好的方法是为会话起名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux new -s &amp;lt;session-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;上面命令新建一个指定名称的会话。&lt;/p&gt;
&lt;h3 id=&#34;32-分离会话&#34;&gt;3.2 分离会话&lt;/h3&gt;
&lt;p&gt;在 Tmux 窗口中，按下&lt;code&gt;Ctrl+b d&lt;/code&gt;或者输入&lt;code&gt;tmux detach&lt;/code&gt;命令，就会将当前会话与窗口分离。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux detach
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tmux ls&lt;/code&gt;命令可以查看当前所有的 Tmux 会话。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# or&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux list-session
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;33-接入会话&#34;&gt;3.3 接入会话&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux attach&lt;/code&gt;命令用于重新接入某个已存在的会话。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用会话编号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux attach -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用会话名称&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux attach -t &amp;lt;session-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;34-杀死会话&#34;&gt;3.4 杀死会话&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux kill-session&lt;/code&gt;命令用于杀死某个会话。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用会话编号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux kill-session -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用会话名称&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux kill-session -t &amp;lt;session-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;35-切换会话&#34;&gt;3.5 切换会话&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux switch&lt;/code&gt;命令用于切换会话。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用会话编号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux switch -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用会话名称&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux switch -t &amp;lt;session-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;36-重命名会话&#34;&gt;3.6 重命名会话&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux rename-session&lt;/code&gt;命令用于重命名会话。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux rename-session -t &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &amp;lt;new-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;上面命令将0号会话重命名。&lt;/p&gt;
&lt;h3 id=&#34;37-会话快捷键&#34;&gt;3.7 会话快捷键&lt;/h3&gt;
&lt;p&gt;下面是一些会话相关的快捷键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b d&lt;/code&gt;：分离当前会话。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b s&lt;/code&gt;：列出所有会话。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b $&lt;/code&gt;：重命名当前会话。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;4-最简操作流程&#34;&gt;4 最简操作流程&lt;/h2&gt;
&lt;p&gt;综上所述，以下是 Tmux 的最简操作流程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;新建会话&lt;code&gt;tmux new -s my_session&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在 Tmux 窗口运行所需的程序。&lt;/li&gt;
&lt;li&gt;按下快捷键&lt;code&gt;Ctrl+b d&lt;/code&gt;将会话分离。&lt;/li&gt;
&lt;li&gt;下次使用时，重新连接到会话&lt;code&gt;tmux attach-session -t my_session&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;5-窗格操作&#34;&gt;5 窗格操作&lt;/h2&gt;
&lt;p&gt;Tmux 可以将窗口分成多个窗格（pane），每个窗格运行不同的命令。以下命令都是在 Tmux 窗口中执行。&lt;/p&gt;
&lt;h3 id=&#34;51-划分窗格&#34;&gt;5.1 划分窗格&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux split-window&lt;/code&gt;命令用来划分窗格。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 划分上下两个窗格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux split-window
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 划分左右两个窗格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux split-window -h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20201201002216.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;52-移动光标&#34;&gt;5.2 移动光标&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux select-pane&lt;/code&gt;命令用来移动光标位置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 光标切换到上方窗格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -U
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 光标切换到下方窗格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -D
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 光标切换到左边窗格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -L
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 光标切换到右边窗格&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -R
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;53-交换窗格位置&#34;&gt;5.3 交换窗格位置&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux swap-pane&lt;/code&gt;命令用来交换窗格位置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 当前窗格上移&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux swap-pane -U
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 当前窗格下移&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux swap-pane -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;54-窗格快捷键&#34;&gt;5.4 窗格快捷键&lt;/h3&gt;
&lt;p&gt;下面是一些窗格操作的快捷键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b %&lt;/code&gt;：划分左右两个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;quot;&lt;/code&gt;：划分上下两个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;lt;arrow key&amp;gt;&lt;/code&gt;：光标切换到其他窗格。&lt;code&gt;&amp;lt;arrow key&amp;gt;&lt;/code&gt;是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键&lt;code&gt;↓&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b ;&lt;/code&gt;：光标切换到上一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b o&lt;/code&gt;：光标切换到下一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b {&lt;/code&gt;：当前窗格与上一个窗格交换位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b }&lt;/code&gt;：当前窗格与下一个窗格交换位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b Ctrl+o&lt;/code&gt;：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b Alt+o&lt;/code&gt;：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b x&lt;/code&gt;：关闭当前窗格。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b !&lt;/code&gt;：将当前窗格拆分为一个独立窗口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b z&lt;/code&gt;：当前窗格全屏显示，再使用一次会变回原来大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b Ctrl+&amp;lt;arrow key&amp;gt;&lt;/code&gt;：按箭头方向调整窗格大小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b q&lt;/code&gt;：显示窗格编号。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;6-窗口管理&#34;&gt;6 窗口管理&lt;/h2&gt;
&lt;p&gt;除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口。&lt;/p&gt;
&lt;h3 id=&#34;61-新建窗口&#34;&gt;6.1 新建窗口&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux new-window&lt;/code&gt;命令用来创建新窗口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux new-window
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 新建一个指定名称的窗口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux new-window -n &amp;lt;window-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;62-切换窗口&#34;&gt;6.2 切换窗口&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux select-window&lt;/code&gt;命令用来切换窗口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 切换到指定编号的窗口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-window -t &amp;lt;window-number&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 切换到指定名称的窗口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-window -t &amp;lt;window-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;63-重命名窗口&#34;&gt;6.3 重命名窗口&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tmux rename-window&lt;/code&gt;命令用于为当前窗口起名（或重命名）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux rename-window &amp;lt;new-name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;64-窗口快捷键&#34;&gt;6.4 窗口快捷键&lt;/h3&gt;
&lt;p&gt;下面是一些窗口操作的快捷键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b c&lt;/code&gt;：创建一个新窗口，状态栏会显示多个窗口的信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b p&lt;/code&gt;：切换到上一个窗口（按照状态栏上的顺序）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b n&lt;/code&gt;：切换到下一个窗口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b &amp;lt;number&amp;gt;&lt;/code&gt;：切换到指定编号的窗口，其中的&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;是状态栏上的窗口编号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b w&lt;/code&gt;：从列表中选择窗口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+b ,&lt;/code&gt;：窗口重命名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;7-其他命令&#34;&gt;7 其他命令&lt;/h2&gt;
&lt;p&gt;下面是一些其他命令。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 列出所有快捷键，及其对应的 Tmux 命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux list-keys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 列出所有 Tmux 命令及其参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux list-commands
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 列出当前所有 Tmux 会话的信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 重新加载当前的 Tmux 配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tmux source-file ~/.tmux.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;8-参考链接&#34;&gt;8 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;A Quick and Easy Guide to tmux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://danielmiessler.com/study/tmux/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tactical tmux: The 10 Most Important Commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://linuxize.com/post/getting-started-with-tmux/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Getting started with Tmux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>流量复制重放工具goreplay</title>
        <link>https://lxb.wiki/8c9efcce/</link>
        <pubDate>Sun, 04 Oct 2020 23:17:17 +0000</pubDate>
        
        <guid>https://lxb.wiki/8c9efcce/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;goreplay简介&#34;&gt;goreplay简介&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/buger/goreplay&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/buger/goreplay&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://goreplay.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://goreplay.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GoReplay是一个开源工具，用于捕获实时HTTP流量并将其重放到测试环境中，以便使用真实数据持续测试系统。
GoReplay不是代理，而是监听网络接口上的流量，不需要更改生产基础架构，而是在与服务相同的计算机上运行GoReplay守护程序。&lt;/p&gt;
&lt;h2 id=&#34;goreplay工作原理&#34;&gt;goreplay工作原理&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20201206205553.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;goreplay常见用法&#34;&gt;goreplay常见用法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 简单的 HTTP 流量复制：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor –input-raw :80 –output-http “http://staging.com”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.HTTP 流量复制频率控制：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor –input-tcp :28020 –output-http “http://staging.com|10″
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.HTTP 流量复制缩小：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor –input-raw :80 –output-tcp “replay.local:28020|10%”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.HTTP 流量记录到本地文件：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor –input-raw :80 –output-file requests.gor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.HTTP 流量回放和压测：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor –input-file “requests.gor|200%” –output-http “staging.com”
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6.HTTP 流量过滤复制：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor –input-raw :8080 –output-http staging.com –output-http-url-regexp ^www.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7.HTTP指定接口流量复制：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gor --input-raw :80 --http-allow-url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/api/v1&amp;#39;&lt;/span&gt; --output-stdout      //--output-stdout表示直接在控制台输出
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gor参数&#34;&gt;gor参数&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# gor --help&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Gor is a simple http traffic replication tool written in Go. Its main goal is to replay traffic from production servers to staging and dev environments.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Project page: https://github.com/buger/gor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author: &amp;lt;Leonid Bugaev&amp;gt; leonsbox@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Current Version: 1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -copy-buffer-size int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Set the buffer size &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; an individual request &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 5M&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 5242880&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -cpuprofile string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	write cpu profile to file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -debug verbose		//打开debug模式，显示所有接口的流量 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Turn on debug output, shows all intercepted traffic. Works only when with verbose flag
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -exit-after duration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	exit after specified duration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-allow-header value      //用一个正则表达式来匹配http头部，如果请求的头部没有匹配上，则被拒绝
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	A regexp to match a specific header against. Requests with non-matching headers will be dropped:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-allow-header api-version:^v1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-allow-method value      // 类似于一个白名单机制来允许通过的http请求方法，除此之外的方法都被拒绝.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Whitelist of HTTP methods to replay. Anything &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; will be dropped:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com --http-allow-method GET --http-allow-method OPTIONS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-allow-url value             //一个正则表达式用来匹配url， 用来过滤完全匹配的的url，在此之外的都被过滤掉
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	A regexp to match requests against. Filter get matched against full url with domain. Anything &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; will be dropped:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-allow-url ^www.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-basic-auth-filter value         //匹配认证头重放
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	A regexp to match the decoded basic auth string against. Requests with non-matching headers will be dropped:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-basic-auth-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^customer[0-9].*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-disallow-header value       //用一个正则表达式来匹配http头部，匹配到的请求会被拒绝掉
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	A regexp to match a specific header against. Requests with matching headers will be dropped:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-disallow-header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent: Replayed by Gor&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-disallow-url value      //用一个正则表达式来匹配url，如果请求匹配上了，则会被拒绝
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	A regexp to match requests against. Filter get matched against full url with domain. Anything &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; will be forwarded:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-disallow-url ^www.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-header-limiter value	//读取请求，基于FNV32-1A散列来拒绝一定比例的特殊请求 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Takes a fraction of requests, consistently taking or rejecting a request based on the FNV32-1A hash of a specific header:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-header-limiter user-id:25%
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-original-host       //在--output-http的输出中，通常gor会使用取代请求的http头，所以应该禁用该选项，保留原始的主机头
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Normally gor replaces the Host http header with the host supplied with --output-http.  This option disables that behavior, preserving the original Host header.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-param-limiter value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Takes a fraction of requests, consistently taking or rejecting a request based on the FNV32-1A hash of a specific GET param:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		 gor --input-raw :8080 --output-http staging.com --http-param-limiter user_id:25%
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-pprof :8181
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Enable profiling. Starts  http server on specified port, exposing special /debug/pprof endpoint. Example: :8181
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-rewrite-header value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Rewrite the request header based on a mapping:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com --http-rewrite-header Host: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.example.com,$1.beta.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-rewrite-url value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Rewrite the request url based on a mapping:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com --http-rewrite-url /v1/user/&lt;span style=&#34;color:#f92672&#34;&gt;([&lt;/span&gt;^&lt;span style=&#34;color:#ae81ff&#34;&gt;\/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;/ping:/v2/user/$1/ping
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-set-header value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Inject additional headers to http reqest:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com --http-set-header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;User-Agent: Gor&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -http-set-param value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Set request url param, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; param already exists it will be overwritten:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com --http-set-param api_key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-dummy value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; testing outputs. Emits &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Get /&amp;#39;&lt;/span&gt; request every 1s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-file value		//从一个文件中读取请求
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Read requests from file: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-file ./requests.gor --output-http staging.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-file-loop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Loop input files, useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; performance testing.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-kafka-host string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Send request and response stats to Kafka:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --output-stdout --input-kafka-host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;192.168.0.1:9092,192.168.0.2:9092&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-kafka-json-format
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	If turned on, it will assume that messages coming in JSON format rather than  GoReplay text format.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-kafka-topic string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Send request and response stats to Kafka:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --output-stdout --input-kafka-topic &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kafka-log&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Capture traffic from given port &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use RAW sockets and require *sudo* access&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		&lt;span style=&#34;color:#75715e&#34;&gt;# Capture traffic from 8080 port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-bpf-filter string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	BPF filter to write custom expressions. Can be useful in &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; of non standard network interfaces like tunneling or SPAN port. Example: --input-raw-bpf-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dst port 80&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-buffer-size int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Controls size of the OS buffer &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;in bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; which holds packets &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; they dispatched. Default value depends by system: in Linux around 2MB. If you see big package drop, increase this value.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-engine libpcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Intercept traffic using libpcap &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, and &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;raw_socket&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;libpcap&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-expire duration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	How much it should wait &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the last TCP packet, till consider that TCP message complete. &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 2s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-immediate-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Set pcap interface to immediate mode.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-override-snaplen
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Override the capture snaplen to be 64k. Required &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; some Virtualized environments
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-realip-header string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	If not blank, injects header with given name and real IP value to the request payload. Usually this header should be named: X-Real-IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-timestamp-type string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Possible values: PCAP_TSTAMP_HOST, PCAP_TSTAMP_HOST_LOWPREC, PCAP_TSTAMP_HOST_HIPREC, PCAP_TSTAMP_ADAPTER, PCAP_TSTAMP_ADAPTER_UNSYNCED. This values not supported on all systems, GoReplay will tell you available values of you put wrong one.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-raw-track-response
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	If turned on Gor will track responses in addition to requests, and they will be available to middleware and file output.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-tcp value		// 用来在多个gor之间流转流量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; internal communication between Gor instances. Example: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		&lt;span style=&#34;color:#75715e&#34;&gt;# Receive requests from other Gor instances on 28020 port, and redirect output to staging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-tcp :28020 --output-http staging.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-tcp-certificate string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Path to PEM encoded certificate file. Used when TLS turned on.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-tcp-certificate-key string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Path to PEM encoded certificate key file. Used when TLS turned on.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -input-tcp-secure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Turn on TLS security. Do not forget to specify certificate and key files.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -memprofile string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	write memory profile to this file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -middleware string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; modifying traffic using external command
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-dummy value		//用来测试输入，打印出接收的数据.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	DEPRECATED: use --output-stdout instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-file value		//把进入的请求写入一个文件中 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Write incoming requests to file: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :80 --output-file ./requests.gor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-file-append
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	The flushed chunk is appended to existence file or not. 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-file-flush-interval duration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Interval &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; forcing buffer flush to the file, default: 1s. &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 1s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-file-max-size-limit value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Max size of output file, Default: 1TB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default -1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-file-queue-limit int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	The length of the chunk queue. Default: &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 256&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-file-size-limit value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Size of each chunk. Default: 32mb &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 33554432&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http value		//转发进入的请求到一个http地址上
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Forwards incoming requests to given http address.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		&lt;span style=&#34;color:#75715e&#34;&gt;# Redirect all incoming requests to staging.com address &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :80 --output-http http://staging.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-compatibility-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Use standard Go client, instead of built-in implementation. Can be slower, but more compatible.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-debug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Enables http debug output.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-elasticsearch string		//把请求和响应状态发送到ElasticSearch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Send request and response stats to ElasticSearch:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-http staging.com --output-http-elasticsearch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;es_host:api_port/index_name&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-header --output-http-header
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	WARNING: --output-http-header DEPRECATED, use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;--http-set-header&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-header-filter --output-http-header-filter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	WARNING: --output-http-header-filter DEPRECATED, use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;--http-allow-header&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-header-hash-filter output-http-header-hash-filter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	WARNING: output-http-header-hash-filter DEPRECATED, use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;--http-header-hash-limiter&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-method --output-http-method
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	WARNING: --output-http-method DEPRECATED, use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;--http-allow-method&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-queue-len int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Number of requests that can be queued &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; output, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; all workers are busy. default &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 1000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-redirects int		//设置多少次重定向被允许
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Enable how often redirects should be followed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-response-buffer int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	HTTP response buffer size, all data after this size will be discarded.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-rewrite-url --output-http-rewrite-url
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	WARNING: --output-http-rewrite-url DEPRECATED, use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;--http-rewrite-url&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-stats		//每5秒钟输出一次输出队列的状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Report http output queue stats to console every N milliseconds. See output-http-stats-ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-stats-ms int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Report http output queue stats to console every N milliseconds. default: &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 5000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-timeout duration		//指定http的request/response超时时间，默认是5秒 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Specify HTTP request/response timeout. By default 5s. Example: --output-http-timeout 30s &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default 5s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-track-response
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	If turned on, HTTP output responses will be set to all outputs like stdout, file and etc.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-url-regexp --output-http-url-regexp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	WARNING: --output-http-url-regexp DEPRECATED, use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;--http-allow-url&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; instead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-workers int		// gor默认是动态的扩展工作者数量，你也可以指定固定数量的工作者
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Gor uses dynamic worker scaling. Enter a number to set a maximum number of workers. default &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; unlimited.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-http-workers-min int
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Gor uses dynamic worker scaling. Enter a number to set a minimum number of workers. default &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-kafka-host string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Read request and response stats from Kafka:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-kafka-host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;192.168.0.1:9092,192.168.0.2:9092&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-kafka-json-format
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	If turned on, it will serialize messages from GoReplay text format to JSON.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-kafka-topic string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Read request and response stats from Kafka:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :8080 --output-kafka-topic &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kafka-log&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; testing inputs. Drops all requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-stdout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; testing inputs. Just prints to console data coming from inputs.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-tcp value		//用来在多个gor之间流转流量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Used &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; internal communication between Gor instances. Example: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		&lt;span style=&#34;color:#75715e&#34;&gt;# Listen for requests on 80 port and forward them to other Gor instance on 28020 port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    		gor --input-raw :80 --output-tcp replay.local:28020
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-tcp-secure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Use TLS secure connection. --input-file on another end should have TLS turned on as well.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -output-tcp-stats		//每5秒钟报告一次tcp输出队列的状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Report TCP output queue stats to console every &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; seconds.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -prettify-http
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	If enabled, will automatically decode requests and responses with: Content-Encodning: gzip and Transfer-Encoding: chunked. Useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; debugging, in conjuction with --output-stdout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -split-output true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	By default each output gets same traffic. If set to true it splits traffic equally among all outputs.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -stats		//打开输出队列的状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Turn on queue stats output
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -verbose
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	Turn on more verbose output
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>hexo使用hexo-toc锚点失效问题</title>
        <link>https://lxb.wiki/b4c41686/</link>
        <pubDate>Thu, 03 Sep 2020 21:02:23 +0000</pubDate>
        
        <guid>https://lxb.wiki/b4c41686/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;现象&#34;&gt;现象&lt;/h4&gt;
&lt;p&gt;使用 hexo-toc 生成文章目录时，点击某个目录，url 变成&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://localhost:4000/690c8418/#null
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;原因&#34;&gt;原因&lt;/h4&gt;
&lt;p&gt;插件在把 markdown 编译成 HTML 时，&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;## title
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会编译为&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;span id=&amp;#34;title&amp;#34;&amp;gt;title&amp;lt;/span&amp;gt;&amp;lt;/h2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而在插件源码的&lt;a class=&#34;link&#34; href=&#34;https://github.com/hexojs/hexo/blob/master/lib/plugins/helper/toc.js#L27&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这次提交&lt;/a&gt;之前，是会编译成&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;h2 id=&amp;#34;title&amp;#34;&amp;gt;title&amp;lt;/h2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因此新版本的 &lt;code&gt;hexo-toc&lt;/code&gt; 生成 TOC 时，元素没有 &lt;code&gt;id&lt;/code&gt; 这个属性，进而导致 TOC 中的锚点失效。&lt;/p&gt;
&lt;h4 id=&#34;修复方法&#34;&gt;修复方法&lt;/h4&gt;
&lt;p&gt;修改 &lt;code&gt;node_modules/hexo-toc/lib/filter.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把 28 行的 &lt;code&gt;$title.attr(&#39;id&#39;, id);&lt;/code&gt; 注释打开&lt;/p&gt;
&lt;p&gt;把 31 行的 &lt;code&gt;$title.removeAttr(&#39;id&#39;);&lt;/code&gt; 注释掉&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派安装TT-RSS</title>
        <link>https://lxb.wiki/afdc720c/</link>
        <pubDate>Sat, 30 May 2020 22:05:48 +0000</pubDate>
        
        <guid>https://lxb.wiki/afdc720c/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tiny Tiny RSS&lt;/a&gt;（TT-RSS）是一个自由开源的基于 Web 的新闻&lt;!-- raw HTML omitted --&gt;馈送&lt;!-- raw HTML omitted --&gt;feed&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;（RSS/Atom）阅读器和聚合工具。它非常适合那些注重隐私，并且仍然依赖 RSS 来获取日常新闻的人。TT-RSS 是自行托管的软件，因此你可以 100% 的掌控你的服务器、数据以及你的全部隐私。它还支持大量的插件、扩展和主题。你喜欢黑暗模式的界面？没问题。想基于关键词过滤发来的消息？TT-RSS 也能让你得偿所愿。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/tt-rss.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Tiny Tiny RSS screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现在你知道 TT-RSS 是什么了，那么为什么你可能会想用它。我会讲述要把它安装到树莓派或 Debian 10 服务器上你需要了解的所有的东西。&lt;/p&gt;
&lt;h3 id=&#34;安装和配置-tt-rss&#34;&gt;安装和配置 TT-RSS&lt;/h3&gt;
&lt;p&gt;要把 TT-RSS 安装到树莓派上，你还需要安装和配置最新版本的 PHP（本文撰写时 PHP 最新版本是 7.3）、后端数据库 PostgreSQL、Nginx web 服务器、Git，最后才是 TT-RSS。&lt;/p&gt;
&lt;h4 id=&#34;1安装-php-7&#34;&gt;1、安装 PHP 7&lt;/h4&gt;
&lt;p&gt;安装 PHP 7 是整个过程中最复杂的部分。幸运的是，它并不像看起来那样困难。从安装下面的支持包开始：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y ca-certificates apt-transport-https
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，添加存储库 PGP 密钥：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ wget -q https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下一步，把 PHP 库添加到你的 apt 源：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ echo &amp;#34;deb https://packages.sury.org/php/ buster main&amp;#34; | sudo tee /etc/apt/sources.list.d/php.list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后更新你的存储库索引：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后，安装 PHP 7.3（或最新版本）和一些通用组件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y php7.3 php7.3-cli php7.3-fpm php7.3-opcache php7.3-curl php7.3-mbstring php7.3-pgsql php7.3-zip php7.3-xml php7.3-gd php7.3-intl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的命令默认你使用的后端数据库是 PostgreSQL，会安装 &lt;code&gt;php7.3-pgsql&lt;/code&gt;。如果你想用 MySQL 或 MariaDB，你可以把命令参数改为 &lt;code&gt;php7.3-mysql&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下一步，确认 PHP 已安装并在你的树莓派上运行着：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ php -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在是时候安装和配置 Web 服务器了。&lt;/p&gt;
&lt;h4 id=&#34;2安装-nginx&#34;&gt;2、安装 Nginx&lt;/h4&gt;
&lt;p&gt;可以用下面的命令安装 Nginx：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y nginx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改默认的 Nginx 虚拟主机配置，这样 Web 服务器才能识别 PHP 文件以及知道如何处理它们。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo nano /etc/nginx/sites-available/default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以安全地删除原文件中的所有内容，用下面的内容替换：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;
        index index.html index.htm index.php;
        server_name _;

        location / {
                try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
          include snippets/fastcgi-php.conf;
          fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        }

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;按 &lt;code&gt;Ctrl+O&lt;/code&gt; 保存修改后的配置文件，然后按 &lt;code&gt;Ctrl+X&lt;/code&gt; 退出 Nano。你可以用下面的命令测试你的新配置文件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ nginx -t
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果没有报错，重启 Nginx 服务：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3安装-postgresql&#34;&gt;3、安装 PostgreSQL&lt;/h4&gt;
&lt;p&gt;接下来是安装数据库服务器。在树莓派上安装 PostgreSQL 超级简单：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install -y postgresql postgresql-client postgis
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入下面的命令看一下数据库服务器安装是否成功：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ psql --version
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4创建-tiny-tiny-rss-数据库&#34;&gt;4、创建 Tiny Tiny RSS 数据库&lt;/h4&gt;
&lt;p&gt;在做其他事之前，你需要创建一个数数据库，用来给 TT-RSS 软件保存数据。首先，登录 PostgreSQL 服务器：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo -u postgres psql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下一步，新建一个用户，设置密码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE USER username WITH PASSWORD &amp;#39;your_password&amp;#39; VALID UNTIL &amp;#39;infinity&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后创建一个给 TT-RSS 用的数据库：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE DATABASE tinyrss;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后，给新建的用户赋最高权限：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GRANT ALL PRIVILEGES ON DATABASE tinyrss to user_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这是安装数据库的步骤。你可以输入 &lt;code&gt;\q&lt;/code&gt; 来退出 &lt;code&gt;psql&lt;/code&gt; 程序。&lt;/p&gt;
&lt;h4 id=&#34;5安装-git&#34;&gt;5、安装 Git&lt;/h4&gt;
&lt;p&gt;安装 TT-RSS 需要用 Git，所以输入下面的命令安装 Git：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt install git -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，进入到 Nginx 服务器的根目录：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd /var/www/html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下载 TT-RSS 最新源码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git clone https://git.tt-rss.org/fox/tt-rss.git tt-rss
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意，这一步会创建一个 &lt;code&gt;tt-rss&lt;/code&gt; 文件夹。&lt;/p&gt;
&lt;h4 id=&#34;6安装和配置tiny-tiny-rss&#34;&gt;6、安装和配置Tiny Tiny RSS&lt;/h4&gt;
&lt;p&gt;现在是安装和配置你的新 TT-RSS 服务器的最后时刻了。首先，确认下你在浏览器中能打开 &lt;code&gt;http://your.site/tt-rss/install/index.php&lt;/code&gt;。如果浏览器显示 &lt;code&gt;403 Forbidden&lt;/code&gt;，那么就证明 &lt;code&gt;/var/www/html&lt;/code&gt; 文件夹的权限没有设置正确。下面的命令通常能解决这个问题：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ chmod 755 /var/www/html/ -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果一切正常，你会看到 TT-RSS 安装页面，它会让你输入一些数据的信息。你只需要输入前面你创建的数据库用户名和密码；数据库名；主机名填 &lt;code&gt;localhost&lt;/code&gt;；端口填 &lt;code&gt;5432&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;点击“Test Configuration”。如果一切正常，你会看到一个标记着“Initialize Database”的红色按钮。点击它来开始安装。结束后，你会看到一个配置文件，你可以把它复制到 TT-RSS 的目录，另存为 &lt;code&gt;config.php&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;安装过程结束后，浏览器输入 &lt;code&gt;http://yoursite/tt-rss/&lt;/code&gt; 打开 TT-RSS，使用默认的凭证登录（用户名：&lt;code&gt;admin&lt;/code&gt;，密码：&lt;code&gt;password&lt;/code&gt;）。登录后系统会提示你修改密码。我强烈建议你尽快修改密码。&lt;/p&gt;
&lt;h3 id=&#34;配置-tt-rss&#34;&gt;配置 TT-RSS&lt;/h3&gt;
&lt;p&gt;如果一切正常，你现在就可以开始使用 TT-RSS 了。建议你新建一个非管理员用户，使用新用户名登录，并开始导入你的馈送、订阅，按照你的意愿来配置它。&lt;/p&gt;
&lt;p&gt;最后，并且是超级重要的事，不要忘了阅读 TT-RSS 维基上的 &lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/wiki/UpdatingFeeds&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Updating Feeds&lt;/a&gt; 部分。它讲述了如何创建一个简单的 systemd 服务来更新馈送。如果你跳过了这一步，你的 RSS 馈送就不会自动更新。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;呵！工作量不小，但是你做完了！你现在有自己的 RSS 聚合服务器了。想了解 TT-RSS 更多的知识？我推荐你去看官方的 &lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/wiki/FAQ&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FAQ&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://community.tt-rss.org/c/tiny-tiny-rss/support&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;支持&lt;/a&gt;论坛，和详细的&lt;a class=&#34;link&#34; href=&#34;https://tt-rss.org/wiki/InstallationNotes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安装&lt;/a&gt;笔记。如果你有任何问题，尽情地在下面评论吧。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;via: &lt;a class=&#34;link&#34; href=&#34;https://opensource.com/article/20/2/ttrss-raspberry-pi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://opensource.com/article/20/2/ttrss-raspberry-pi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a class=&#34;link&#34; href=&#34;https://opensource.com/users/pmullins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Patrick H. Mullins&lt;/a&gt;
选题：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lujun9972&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lujun9972&lt;/a&gt;
译者：&lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lxbwolf&lt;/a&gt;
校对：&lt;a class=&#34;link&#34; href=&#34;https://github.com/wxy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;wxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文由 &lt;a class=&#34;link&#34; href=&#34;https://github.com/LCTT/TranslateProject&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LCTT&lt;/a&gt; 原创编译，&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux中国&lt;/a&gt; 荣誉推出&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派做BT下载器</title>
        <link>https://lxb.wiki/fb1d9193/</link>
        <pubDate>Wed, 11 Mar 2020 22:29:00 +0000</pubDate>
        
        <guid>https://lxb.wiki/fb1d9193/</guid>
        <description>&lt;p&gt;可以用 &lt;a class=&#34;link&#34; href=&#34;https://www.transmissionbt.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;transmission&lt;/a&gt;，它提供了 Web 界面&lt;/p&gt;
&lt;h4 id=&#34;1-安装-transmission&#34;&gt;1. 安装 transmission：&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install transmission-daemon
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-创建下载目录一个是下载完成的目录一个是未完成的目录&#34;&gt;2. 创建下载目录，一个是下载完成的目录，一个是未完成的目录&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir Public/bt_complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir Public/bt_incomplete
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-配置目录权限&#34;&gt;3. 配置目录权限&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -a -G debian-transmission pi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chgrp debian-transmission bt_complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chgrp debian-transmission bt_incomplete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;770&lt;/span&gt; bt_complete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;770&lt;/span&gt; bt_incomplete
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4-修改配置文件-etctransmission-daemonsettingsjson&#34;&gt;4. 修改配置文件 /etc/transmission-daemon/settings.json&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;download-dir&amp;#34;:&amp;#34;/home/pi/Public/bt_complete&amp;#34;
&amp;#34;incomplete-dir&amp;#34;:&amp;#34;/home/pi/Public/bt_incomplete&amp;#34;
&amp;#34;rpc-host-whitelist&amp;#34;: &amp;#34;192.168.1.*&amp;#34;,
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;5-重启-transmission&#34;&gt;5. 重启 transmission&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo service transmission-daemon reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo service transmission-daemon restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;两个命令按顺序执行，单独 restart 的话配置不会保存：&lt;/p&gt;
&lt;p&gt;浏览器中输入 &lt;code&gt;http://192.168.1.8:9091/&lt;/code&gt;，默认用户名密码：&lt;code&gt;transmission&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改 transmission 用户名和密码的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先停止服务： &lt;code&gt;sudo service transmission-daemon stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改配置文件，看到这个是加密的密码，直接把密码改为密码明文就可以：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“rpc-username”: “明文”,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“rpc-password”: “密文”,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;再此启动服务 ：&lt;code&gt;sudo service transmission-daemon start&lt;/code&gt;
启动的时候 transmission 会自动把新密码加密。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;transmission 默认监听 51413 端口，最好在路由器上做个端口转发，把这个端口转到它的 IP 地址&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派搭建GitHub镜像服务</title>
        <link>https://lxb.wiki/2073ae8b/</link>
        <pubDate>Tue, 10 Mar 2020 19:03:42 +0000</pubDate>
        
        <guid>https://lxb.wiki/2073ae8b/</guid>
        <description>&lt;h3 id=&#34;1--树莓派上创建-git-账号创建用于存放代码的目录&#34;&gt;1.  树莓派上创建 git 账号，创建用于存放代码的目录&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/srv/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-github-库-clone-到树莓派&#34;&gt;2. GitHub 库 clone 到树莓派&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git clone git@github.com:user/XXXX.git /srv/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-添加-remote&#34;&gt;3. 添加 remote&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git remote add upstream https://github.com/abcd/XXXX&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-修改-hook&#34;&gt;4. 修改 hook&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#.git/hooks/post-update&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;push_branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;param##refs/heads/&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#获取到更新的分支名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin $push_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-添加定时任务&#34;&gt;5. 添加定时任务&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;5,35 * * * * cd /srv/XXXX &amp;amp;&amp;amp; git pull upstream master&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-在本地代码添加-remote&#34;&gt;6. 在本地代码添加 remote&lt;/h3&gt;
&lt;h4 id=&#34;61-有多个项目时为避免修改每个项目的-remote直接添加-host&#34;&gt;6.1 有多个项目时，为避免修改每个项目的 remote，直接添加 host&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;192.168.1.8 gitsrv&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;62-在每个项目在添加一次-remote&#34;&gt;6.2 在每个项目在添加一次 remote&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git remote add pi git@192.168.1.8:/srv/XXXX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样即使以后地址改变，只需要改一次 host 就可以了&lt;/p&gt;
&lt;h3 id=&#34;7-推拉代码时从-pi-推拉&#34;&gt;7. 推拉代码时，从 pi 推拉&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git pull pi branch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push pi branch&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Symbol Names of Keyboard</title>
        <link>https://lxb.wiki/2d9f52fc/</link>
        <pubDate>Sat, 07 Dec 2019 10:22:50 +0000</pubDate>
        
        <guid>https://lxb.wiki/2d9f52fc/</guid>
        <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;符号	英文名	中文名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~	tilde or swung dash	波浪字符或代字号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!	exclamation mark	惊叹号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@	at sign or commercial at	爱特或小老鼠
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#	number sign	井号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$	dollar sign	美元符
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%	percent sign	百分号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;^	caret	脱字符
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;amp;	ampersand	与和符
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*	asterisk	星号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;	parentheses, round brackets, soft brackets, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	or circle brackets 	小括号，圆括号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;	brackets &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;US&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, square brackets, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	closed brackets or hard brackets	中括号，方括号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;	braces &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UK and US&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, French brackets, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	curly brackets	大括号，花括号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&amp;gt; 	angle brackets or chevrons	尖括号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_	underscore	下划线
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+	plus sign	加号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;−	minus sign	减号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;	equals sign	等号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt; 	less-than sign	小于号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; 	greater-than sign	大于号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.	period, full stop or dot	句号，点
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;,	comma	逗号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:	colon 	冒号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;	semicolon	分号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;?	question mark	问号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-	hyphen	连字符
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...	ellipsis	省略号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;–	dash	破折号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/	slash, forward slash	斜线
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\	&lt;/span&gt;backslash	反斜线
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|	vertical bar	竖线
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“	quotation mark	双引号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘	apostrophe	单引号，省略符号
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>如何使用GitHub搜索</title>
        <link>https://lxb.wiki/a813d59a/</link>
        <pubDate>Mon, 28 Oct 2019 23:03:30 +0000</pubDate>
        
        <guid>https://lxb.wiki/a813d59a/</guid>
        <description>&lt;p&gt;&lt;strong&gt;1. 明确搜索仓库标题、仓库描述、README&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;in:name 关键词&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果想查找描述的内容，可以使用这样的方式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;in:descripton 关键词&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里就是搜索上面项目描述的内容。&lt;/p&gt;
&lt;p&gt;一般项目，都会有个README文件，如果要查该文件包含特定关键词的话&lt;/p&gt;
&lt;p&gt;&lt;code&gt;in:readme 关键词&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 明确搜索 star、fork 数大于多少的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个项目 star 数的多少，一般代表该项目有受欢迎程度。虽然现在也有垃圾项目刷 star ，但毕竟是少数， star 依然是个不错的衡量标准。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;stars:&amp;gt; 数字 关键字&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;比如要找 star 数大于 3000 的Spring Cloud 仓库，就可以这样&lt;/p&gt;
&lt;p&gt;&lt;code&gt;stars:&amp;gt;3000 spring cloud&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果不加 &amp;gt;= 的话，是要精确找 star 数等于具体数字的，这个一般有点困难。&lt;/p&gt;
&lt;p&gt;如果要找在指定数字区间的话，使用&lt;/p&gt;
&lt;p&gt;&lt;code&gt;stars: 10..20 关键词&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;fork 数同理，将上面的 stars 换成 &lt;strong&gt;fork&lt;/strong&gt;，其它语法相同&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 明确搜索仓库大小的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如只想看个简单的 Demo，不想找特别复杂的且占用磁盘空间较多的，可以在搜索的时候直接限定仓库的 &lt;strong&gt;size&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;使用方式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;size:&amp;gt;=5000 关键词&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里注意下，这个数字代表K, 5000代表着5M。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 明确仓库是否还在更新维护&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们在确认是否要使用一些开源产品，框架的时候，是否继续维护是很重要的一点。如果已经过时没人维护的东西，踩了坑就不好办了。而在 GitHub 上找项目的时候，不再需要每个都点到项目里看看最近 push 的时间，直接在搜索框即可完成。&lt;/p&gt;
&lt;p&gt;元旦刚过，比如咱们要找临近年底依然在勤快更新的项目，就可以直接指定&lt;strong&gt;更新时间&lt;/strong&gt;在哪个时间前或后的&lt;/p&gt;
&lt;p&gt;通过这样一条搜索 &lt;code&gt;pushed:&amp;gt;2019-01-03 spring cloud&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就找到了1月3号之后，还在更新的项目&lt;/p&gt;
&lt;p&gt;想找指定时间之前或之后创建的仓库也是可以的，把 &lt;strong&gt;pushed&lt;/strong&gt; 改成 &lt;strong&gt;created&lt;/strong&gt; 就行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 明确搜索仓库的 LICENSE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经常使用开源软件，一定都知道，开源软件也是分不同的「门派」不同的&lt;strong&gt;LICENSE&lt;/strong&gt;。开源不等于一切免费，不同的许可证要求也大不相同。 2018年就出现了 Facebook 修改 React 的许可协议导致各个公司纷纷修改自己的代码，寻找替换的框架。&lt;/p&gt;
&lt;p&gt;例如要找协议是最为宽松的 Apache License 2 的代码，可以这样&lt;/p&gt;
&lt;p&gt;&lt;code&gt;license:apache-2.0 spring cloud&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其它协议就把 apache-2.0 替换一下即可，比如换成 &lt;strong&gt;mit&lt;/strong&gt; 之类的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 明确搜索仓库的语言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如咱们就找 Java 的库， 除了像上面在左侧点击选择之外，还可以在搜索中过滤。像这样：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;language:java 关键词&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.明确搜索某个人或组织的仓库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user:joshlong&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;组合使用一下，把 Java 项目过滤出来，多个查询之间「空格」分隔即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user:joshlong language:java&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;找某个组织的代码话，可以这样：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;org:spring-cloud&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就可以列出具体org 的仓库。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>网易云音乐破版权</title>
        <link>https://lxb.wiki/c6996379/</link>
        <pubDate>Tue, 08 Oct 2019 18:07:13 +0000</pubDate>
        
        <guid>https://lxb.wiki/c6996379/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;源码地址: &lt;a class=&#34;link&#34; href=&#34;https://github.com/lxbwolf/UnblockNeteaseMusic&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/lxbwolf/UnblockNeteaseMusic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原理:&lt;/strong&gt;
使用其它音乐平台的歌曲替换网易云音乐无版权歌曲。
目前备用的平台有：网易云旧链 、QQ 、 虾米 、 百度 、酷狗 、酷我 、咕咪 、JOOX 音源替换变灰歌曲链接 (默认仅启用前四)。&lt;/p&gt;
&lt;p&gt;1、打开网易云音乐客户端的时候，客户端不再直接访问网易云服务器而是访问UnblockNeteaseMusic服务。&lt;/p&gt;
&lt;p&gt;2、UnblockNeteaseMusic收到客户端的请求后，透传给网易云音乐的服务器，并再拿到相关的数据后进行检查，如果发现其中的歌曲没有版权，那么去其它平台查询此歌曲的相关信息。&lt;/p&gt;
&lt;p&gt;3、将查到的数据返回给网易云客户端。&lt;/p&gt;
&lt;p&gt;4、至此完成网易云音乐的解锁。&lt;/p&gt;
&lt;p&gt;整个流程要解决两个重要的问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心工作:&lt;/strong&gt;
1、将UnblockNeteaseMusic部署到服务器。可以是本地服务器也可以是云服务器。&lt;/p&gt;
&lt;p&gt;2、为网易云客户端设置代理，以达到访问UnblockNeteaseMusic项目的目的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部署服务部分&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装node.js&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/lxbwolf/UnblockNeteaseMusic.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;UnblockNeteaseMusic&lt;/code&gt; 目录下, 执行&lt;code&gt;npx @nondanee/unblockneteasemusic(官方)&lt;/code&gt; 或者 用docker 启动&lt;code&gt;docker run nondanee/unblockneteasemusic &amp;amp;&amp;amp; docker-compose up&lt;/code&gt;, 还有另一种方式:
在&lt;code&gt;UnblockNeteaseMusic&lt;/code&gt; 目录下, 执行
&lt;code&gt;node app.js -p 8080:443 -f 59.111.160.195&lt;/code&gt;
其中&lt;code&gt;59.111.160.195&lt;/code&gt; 这个地址是通过
&lt;code&gt;ping music.163.com&lt;/code&gt; 测出来的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正常情况下, 服务端启动进程, 客户端配置好IP Port, 就可以用了,&lt;/p&gt;
&lt;p&gt;此时服务端接收到请求会有log, 如果服务端log一直卡在&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;HTTP Server running @ http://0.0.0.0:8080
HTTPS Server running @ https://0.0.0.0:443
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;说明客户端的请求并没有打到服务器上, 可能原因是8080和443端口还没有开启&lt;/p&gt;
&lt;p&gt;配置参数&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ unblockneteasemusic -h
usage: unblockneteasemusic [-v] [-p port] [-a address] [-u url] [-f host]
                           [-o source [source ...]] [-t token] [-e url] [-s]
                           [-h]

optional arguments:
  -v, --version                   output the version number
  -p port, --port port            specify server port
  -a address, --address address   specify server host
  -u url, --proxy-url url         request through upstream proxy
  -f host, --force-host host      force the netease server ip
  -o source [source ...], --match-order source [source ...]
                                  set priority of sources
  -t token, --token token         set up proxy authentication
  -e url, --endpoint url          replace virtual endpoint with public host
  -s, --strict                    enable proxy limitation
  -h, --help                      output usage information
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;客户端配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;源码中的&lt;code&gt;README&lt;/code&gt; 有详细说明&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;平台&lt;/th&gt;
&lt;th&gt;基础设置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;设置 &amp;gt; 工具 &amp;gt; 自定义代理 (客户端内)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UWP&lt;/td&gt;
&lt;td&gt;Windows 设置 &amp;gt; 网络和 Internet &amp;gt; 代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;系统设置 &amp;gt; 网络 &amp;gt; 网络代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;td&gt;系统偏好设置 &amp;gt; 网络 &amp;gt; 高级 &amp;gt; 代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Android&lt;/td&gt;
&lt;td&gt;WLAN &amp;gt; 修改网络 &amp;gt; 高级选项 &amp;gt; 代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;td&gt;无线局域网 &amp;gt; HTTP 代理 &amp;gt; 配置代理&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Android 手机详细配置:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置 &amp;gt; WLAN &amp;gt; 修改网络 &amp;gt; 高级选项 &amp;gt; 代理&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IP: 106.13.86.198
Port: 8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;破解前效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20201201004909.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;pojieqian-163&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;破解后效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20201201004946.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;pojiehou-163&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/lxbwolf/blog_source_image@main/20201201005015.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;tingge-163&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>docker挂载目录失败/权限拒绝</title>
        <link>https://lxb.wiki/498654c2/</link>
        <pubDate>Tue, 23 Jul 2019 17:32:38 +0000</pubDate>
        
        <guid>https://lxb.wiki/498654c2/</guid>
        <description>&lt;p&gt;把宿主机的一个目录挂载到容器中的一个目录，当访问容器中的这个目录时，出现如下问题：
&lt;code&gt;ls: cannot open directory .: Permission denied&lt;/code&gt;
无法访问目录，权限拒绝。
该问题通常在centos7下出现。或者一个容器启动成功后，里面的服务无法成功访问，这是因为centos7中的安全模块selinux把权限禁掉了，一般的解决方案有以下两种：
（1）临时关闭selinux
直接在centos服务器上执行以下命令即可。执行完成以后建议重新&lt;code&gt;docker run&lt;/code&gt;。 &lt;code&gt;setenforce 0&lt;/code&gt;
（2）给容器加权限
在&lt;code&gt;docker run&lt;/code&gt;时给该容器加权限，加上以下参数即可：
&lt;code&gt;--privileged=true&lt;/code&gt;
一般都推荐使用这种方式。
按上述方法修改后, 如果执行下面命令失败
&lt;code&gt;docker run --name rookie-nginx-test -d -p 8082:80 -v ~/nginx/www:/usr/share/nginx/html -v ~/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v ~/nginx/logs:/var/log/nginx -v ~/nginx/conf/conf.d:/etc/nginx/conf.d --link php7-fpm:php nginx&lt;/code&gt;
则是因为&lt;code&gt;~/nginx/www/&lt;/code&gt; 目录下没有index 文件导致. 手动创建&lt;code&gt;index.php&lt;/code&gt; 文件解决&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mac iTerm2登陆CentOS提示warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</title>
        <link>https://lxb.wiki/784beb8f/</link>
        <pubDate>Tue, 02 Jul 2019 11:48:53 +0000</pubDate>
        
        <guid>https://lxb.wiki/784beb8f/</guid>
        <description>&lt;p&gt;【报错原因】：没有utf-8这个语系（没添加语言_国名前缀），LC_ALL又没设定值。 &lt;strong&gt;服务端解决方法：&lt;/strong&gt; 在远程系统上， &lt;code&gt;/etc/environment&lt;/code&gt;加入以下两行，重新登陆即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LANG=en_US.utf-8
LC_ALL=en_US.utf-8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Mac终端解决方法：&lt;/strong&gt; 编辑&lt;code&gt;~/.bashrc&lt;/code&gt;或者&lt;code&gt;~/.zshrc&lt;/code&gt;文件，添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LC_ALL=en_US.UTF-8  
export LANG=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>制作种子</title>
        <link>https://lxb.wiki/7592d71b/</link>
        <pubDate>Thu, 01 Nov 2018 21:20:18 +0000</pubDate>
        
        <guid>https://lxb.wiki/7592d71b/</guid>
        <description>&lt;p&gt;1.下载mktorrent
&lt;code&gt;git clone https://github.com/lxbwolf/mktorrent.git&lt;/code&gt;
2.下载完成后进入到文件夹里面
例如：&lt;code&gt;cd mktorrent&lt;/code&gt;（如果是根目录的话）
3. &lt;code&gt;make&lt;/code&gt;
4. &lt;code&gt;make install&lt;/code&gt;
5. 默认安装目录位于&lt;code&gt;/usr/local/bin&lt;/code&gt;，使用cd命令，从默认的/root路径切换到要制作成种子的文件上一级。
例如&lt;code&gt;cd /Downloads&lt;/code&gt;
6. 制作种子命令为： &lt;code&gt;mktorrent -v -p -l 22 -a tracker_address -o name.torrent file_name&lt;/code&gt;
参数说明： tracker_address为你要发布的网站的tracker。 name.torrent为对生成torrent种子文件的命名，规则为：xxx.torrent。 file_name为你要做种的文件或文件夹。避免含有空格。
7. 等待一会儿会提示做种完成，在当前目录下即可找到。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派搭建迅雷远程下载服务器</title>
        <link>https://lxb.wiki/1846a864/</link>
        <pubDate>Thu, 01 Nov 2018 20:09:55 +0000</pubDate>
        
        <guid>https://lxb.wiki/1846a864/</guid>
        <description>&lt;h3 id=&#34;1-下载路由器固件&#34;&gt;1. 下载路由器固件&lt;/h3&gt;
&lt;p&gt;从 &lt;a class=&#34;link&#34; href=&#34;http://luyou.xunlei.com/forum-51-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt; 或者 百度网盘&lt;/p&gt;
&lt;p&gt;解压到指定目录如 &lt;code&gt;/root/xunlei&lt;/code&gt; 进入目录 执行&lt;code&gt;./portal&lt;/code&gt; 稍等片刻，会在最后输出一个激活码&lt;/p&gt;
&lt;h3 id=&#34;2-在迅雷远程下载页面绑定树莓派&#34;&gt;2. 在迅雷远程下载页面绑定树莓派&lt;/h3&gt;
&lt;p&gt;登录&lt;a class=&#34;link&#34; href=&#34;http://yuancheng.xunlei.com/login.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;迅雷远程下载&lt;/a&gt;主页,登录之后，左侧会有一个添加按钮，点击添加按钮&lt;/p&gt;
&lt;p&gt;不需要选择绑定设备类型, 直接将树莓派上获得的激活码填入框中，点击绑定后左侧就会出现树莓派对应的设备列表了，但是，如果我们此时就在右侧点击新建之后会发现,弹出的新建页面中会提示找不到挂载磁盘&lt;/p&gt;
&lt;h3 id=&#34;3-自定义迅雷的下载目录&#34;&gt;3. 自定义迅雷的下载目录&lt;/h3&gt;
&lt;p&gt;进入/mnt目录，创建目录TDDOWNLOAD(名字随意) 执行&lt;code&gt;mount --bind /data/TDDOWNLOAD /mnt/TDDOWNLOAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中/data/TDDOWNLOAD就是自定义的下载目录，你可以指定为其他任何目录。&lt;/p&gt;
&lt;p&gt;然后再刚刚迅雷固件的解压目录下创建目录etc,同时在etc下创建文件thunder_mounts.cfg,编辑此文件, 写入内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;avaliable_mount_path_pattern
{
/mnt/TDDOWNLOAD
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启路由器固件 &lt;code&gt;./root/xunlei/portal&lt;/code&gt; 再进入远程下载界面新建下载就没有了没挂载磁盘的提示了&lt;/p&gt;
&lt;h3 id=&#34;4-迅雷路由器固件开机启动&#34;&gt;4. 迅雷路由器固件开机启动&lt;/h3&gt;
&lt;p&gt;在/etc/init.d/下新建xunlei脚本，写入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh
#
# Xunlei initscript
#
### BEGIN INIT INFO
# Provides:          xunlei
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop::    $network $local_fs $remote_fs
# Should-Start:      $all
# Should-Stop:       $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start xunlei at boot time
# Description:       A downloader
### END INIT INFO

do_start()
{
./root/xunlei/portal
}

do_stop()
{
./root/xunlei/portal -s
}

case &amp;quot;$1&amp;quot; in
start)
do_start
;;
stop)
do_stop
;;
esac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后将该脚本加入默认自启动中 &lt;code&gt;update-rc.d xunlei defaults&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派基础环境</title>
        <link>https://lxb.wiki/5976aace/</link>
        <pubDate>Thu, 18 Oct 2018 22:24:19 +0000</pubDate>
        
        <guid>https://lxb.wiki/5976aace/</guid>
        <description>&lt;h3 id=&#34;修改软件源&#34;&gt;修改软件源&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo -s
echo -e &amp;quot;deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi \n deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi&amp;quot; &amp;amp;gt; /etc/apt/sources.list
echo -e &amp;quot;deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui&amp;quot; &amp;amp;gt; /etc/apt/sources.list.d/raspi.list
exit
sudo apt update &amp;amp;amp;&amp;amp;amp; sudo apt -y upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;中文输入法&#34;&gt;中文输入法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install -y ttf-wqy-zenhei
sudo apt-get install -y scim-pinyin
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;看门狗防止树莓派死机的监控&#34;&gt;看门狗(防止树莓派死机的监控)&lt;/h3&gt;
&lt;p&gt;当利用树莓派来做一些需要长期待机的应用时，如下载机、云储存、家庭影院等应用，我们往往会遇到的一个问题就是树莓派会因为过热而死机，需要我们重新启动树莓派，然后再次开启树莓派上的应用。这会给我们的日常操作带来许多麻烦。 Watchdog（看门狗）就能让树莓派永不死机。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//树莓派自带看门狗模块，我们需要添加进去就好。
sudo modprobe bcm2708_wdog
echo -e &amp;quot;\nbcm2708_wdog&amp;quot; &amp;amp;gt; sudo tee -a /etc/modules
// 安装看门狗软件
sudo apt-get install -y chkconfig watchdog
// 配置
sudo vim /etc/watchdog.conf
// 去掉&amp;quot;watchdog-device=/dev/watchdog&amp;quot;这一行的#注释
// 其它配置参考如下:
# 用于设定CPU温度重启条件
temperature-device = /sys/class/thermal/thermal_zone0/temp
# 最大温度为100度，超过立即重启
max-temperature = 100000
# 1分钟最多进程为24个，超过即重启
max-load-15=12
# 5分钟最多进程为18个，超过即重启
max-load-15=12
# 15分钟最多进程为12个，超过即重启
max-load-15=12

// 完成配置后，启动看门狗
sudo /etc/init.d/watchdog start
// 设置为开机自启
chkconfig watchdog on
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;screen让树莓派永不失联&#34;&gt;Screen(让树莓派永不失联)&lt;/h3&gt;
&lt;p&gt;利用SSH（Serare Shell，安全外壳协议）来远程控制树莓派应该是我们最常用的 操作树莓派的方式，但在用SSH连接时，我们常常会遇到连接突然断开的问题。连 接一旦断开，原米我们进行的操作也就中断了，若再使用，就得从头再来了。相信你肯定因为电脑待机而中断树莓派的任务而苦恼过。 Screen来让树莓派永不失联的方法。此方法下，就算连接断开了，当我们重新连接后依旧进行原来的操作，而不需要从头再来。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 直接安装Screen
sudo apt-get install -y screen
// 开启一个后台view（后台的终端，不会因为断开连接而终止）
screen -S 终端名
// 然后就可以继续你的操作了
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>树莓派3B&#43; 安装系统</title>
        <link>https://lxb.wiki/cfbe6b0a/</link>
        <pubDate>Wed, 17 Oct 2018 22:11:38 +0000</pubDate>
        
        <guid>https://lxb.wiki/cfbe6b0a/</guid>
        <description>&lt;p&gt;安装步骤: &lt;code&gt;官网下载系统 -- 刷入TF卡 -- 设置开启显示器和SSH -- 通电 -- 进入系统&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;0-很重要&#34;&gt;0. 很重要&lt;/h3&gt;
&lt;p&gt;装完系统，写完 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 配置文件后，无论如何不要 &lt;code&gt;reboot&lt;/code&gt;，不要 &lt;code&gt;reboot&lt;/code&gt;， 不要 &lt;code&gt;reboot&lt;/code&gt; ！！！
3B+ 有极大的概率，&lt;code&gt;reboot&lt;/code&gt; 后无法正常连接 WIFI，只能重新烧录系统。&lt;/p&gt;
&lt;h3 id=&#34;1-进入官方网站下载系统镜像&#34;&gt;1. 进入官方网站下载系统镜像&lt;/h3&gt;
&lt;p&gt;官方系统 raspbian地址 &lt;a class=&#34;link&#34; href=&#34;https://www.raspberrypi.org/downloads/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-windows系统下的安装&#34;&gt;2. Windows系统下的安装&lt;/h3&gt;
&lt;h4 id=&#34;21-下载sd格式化工具&#34;&gt;2.1 下载SD格式化工具&lt;/h4&gt;
&lt;p&gt;SDFormatter 地址 &lt;a class=&#34;link&#34; href=&#34;https://www.sdcard.org/downloads/formatter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.sdcard.org/downloads/formatter&lt;/a&gt;_4/eula_windows/&lt;/p&gt;
&lt;p&gt;安装后直接用默认选项 格式化SD卡&lt;/p&gt;
&lt;h4 id=&#34;22-下载写镜像工具&#34;&gt;2.2 下载写镜像工具&lt;/h4&gt;
&lt;p&gt;Win32 DiskImager 地址 &lt;a class=&#34;link&#34; href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://sourceforge.net/projects/win32diskimager/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-mac系统下的安装&#34;&gt;3. MAC系统下的安装&lt;/h3&gt;
&lt;h4 id=&#34;31-查看当前已挂载的卷&#34;&gt;3.1 查看当前已挂载的卷&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[liuxb@liuxb-mac]$ df -h
Filesystem      Size   Used  Avail Capacity iused      ifree %iused  Mounted on
/dev/disk1     112Gi   81Gi   30Gi    73% 1014786 4293952493    0%   /
devfs          188Ki  188Ki    0Bi   100%     654          0  100%   /dev
map -hosts       0Bi    0Bi    0Bi   100%       0          0  100%   /net
map auto_home    0Bi    0Bi    0Bi   100%       0          0  100%   /home
/dev/disk2s3    92Gi   51Gi   41Gi    56%  336662   42525054    1%   /Volumes/系统
/dev/disk2s4    20Gi   15Gi  4.4Gi    78%   92859    4579733    2%   /Volumes/数据
/dev/disk3s1    29Gi  2.3Mi   29Gi     1%  107876    8373436    2%   /Volumes/未命名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;对比Size和Name可以找到SD卡的分区在系统里对应的设备文件（这里是/dev/disk3s1），如果你有多个分区，可能还会有disk3s2之类的&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;32-使用diskutil-unmount将分区卸载&#34;&gt;3.2 使用diskutil unmount将分区卸载&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[liuxb@liuxb-mac]$ diskutil unmount /dev/disk3s1
Volume 未命名 on disk3s1 unmounted
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;33-先对下载的zip压缩包进行解压然后使用dd命令将系统镜像写入需要特别特别注意disk后的数字不能搞错&#34;&gt;3.3 先对下载的zip压缩包进行解压，然后使用dd命令将系统镜像写入，需要特别特别注意disk后的数字，不能搞错&lt;/h4&gt;
&lt;p&gt;这部分可以参考&lt;a class=&#34;link&#34; href=&#34;#correct&#34; &gt;Mac 烧录系统&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说明：/dev/disk3s1是分区，/dev/disk3是块设备，/dev/rdisk3是原始字符设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[liuxb@liuxb-mac]$ unzip 2017-09-07-raspbian-stretch.zip
[liuxb@liuxb-mac]$ sudo dd bs=16m if=2017-09-07-raspbian-stretch.img of=/dev/rdisk3
_
输入用户密码
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;经过几分钟的等待，出现下面的提示，说明TF卡刷好了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1172+1 records in
1172+1 records out
4916019200 bytes transferred in 127.253638 secs (9691442 bytes/sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4-开启ssh&#34;&gt;4. 开启SSH&lt;/h3&gt;
&lt;p&gt;在TF卡分区里创建一个名为&amp;quot;ssh&amp;quot;的不带后缀的空文件&lt;/p&gt;
&lt;h3 id=&#34;5-开启强制hdmi输出&#34;&gt;5. 开启强制HDMI输出&lt;/h3&gt;
&lt;p&gt;在TF卡分区，打开config.txt文件(开机后位置： /boot/config.txt)，修改如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hdmi_safe=1
config_hdmi_boost=4
hdmi_ignore_edid=0xa5000080
hdmi_group=2
hdmi_mode=82
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参数介绍:&lt;/p&gt;
&lt;p&gt;项&lt;/p&gt;
&lt;p&gt;解释&lt;/p&gt;
&lt;p&gt;hdmi_safe=1&lt;/p&gt;
&lt;p&gt;安全启动HDMI&lt;/p&gt;
&lt;p&gt;config_hdmi_boost=4&lt;/p&gt;
&lt;p&gt;开启热插拔&lt;/p&gt;
&lt;p&gt;hdmi_group=1&lt;/p&gt;
&lt;p&gt;CEA电视显示器&lt;/p&gt;
&lt;p&gt;hdmi_group=2&lt;/p&gt;
&lt;p&gt;DMT电脑显示器&lt;/p&gt;
&lt;p&gt;hdmi_ignore_edid=0xa5000080&lt;/p&gt;
&lt;p&gt;忽略自动探测的分辨率&lt;/p&gt;
&lt;p&gt;输出分辨率：&lt;/p&gt;
&lt;p&gt;hdmi_mode=4&lt;/p&gt;
&lt;p&gt;640x480 60Hz&lt;/p&gt;
&lt;p&gt;hdmi_mode=9&lt;/p&gt;
&lt;p&gt;800x600 60Hz&lt;/p&gt;
&lt;p&gt;hdmi_mode=16&lt;/p&gt;
&lt;p&gt;1024x768 60Hz&lt;/p&gt;
&lt;p&gt;hdmi_mode=82&lt;/p&gt;
&lt;p&gt;1080p 60Hz&lt;/p&gt;
&lt;h3 id=&#34;6设置无线wi-fi连接假设没有网线而且没能连接显示器&#34;&gt;6.设置无线WI-FI连接：（假设没有网线，而且没能连接显示器）&lt;/h3&gt;
&lt;p&gt;在TF卡的boot分区，创建wpa_supplicant.conf文件，加入如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;country=CN
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
ssid=&amp;quot;lxb-wifi&amp;quot;
psk=&amp;quot;123456789&amp;quot;
priority=1
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在树莓派通电后会自动添加到&lt;code&gt;/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code&gt;文件里面，进行自动连接。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 详细介绍：
#ssid:网络的ssid
#psk:密码
#priority:连接优先级，数字越大优先级越高（不可以是负数）
#scan_ssid:连接隐藏WiFi时需要指定该值为1

// 如果WiFi 没有密码
network={
ssid=&amp;quot;无线网络名称（ssid）&amp;quot;
key_mgmt=NONE
}
// 如果WiFi 使用WEP加密

network={
ssid=&amp;quot;无线网络名称（ssid）&amp;quot;
key_mgmt=NONE
wep_key0=&amp;quot;wifi密码&amp;quot;
}
// 如果你的 WiFi 使用WPA/WPA2加密

network={
ssid=&amp;quot;无线网络名称（ssid）&amp;quot;
key_mgmt=WPA-PSK
psk=&amp;quot;wifi密码&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上设置完成后, TF卡可以插入树莓派了, 通电. 默认登录账号:&lt;code&gt;pi&lt;/code&gt; 密码: &lt;code&gt;raspberry&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Mac 烧录操作：&lt;!-- raw HTML omitted --&gt;&amp;gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;核心就一行指令
sudo dd bs=4m if=2017-11-29-raspbian-stretch.img of=/dev/rdisk4

其中if参数为镜像文件，of参数为设备名称。但是烧写系统进sd卡前需要一个准备工作，其一是将sd卡抹掉格式化一下，然后卸载sd卡分区，最后将系统烧进指定sd卡位置。

抹掉sd卡很简单，mac的磁盘工具，选中sd卡，点抹掉，格式选择MS-DOS(FAT)。
sd卡格式化之后，Mac命令行输入df -h，得到挂载的SD卡位置（卷），比如/dev/disk4s1。
然后使用 diskutil unmount /dev/disk4s1 卸载这个分区
最后，使用 diskutil list 这个命令，获得我们要安装系统的设备。
注意：此处我们看到的是 /dev/disk4，但是写核心指令的时候要加一个字母r，即/dev/rdisk4。
最终得到的就是
sudo dd bs=4m if=2017-11-29-raspbian-stretch.img of=/dev/rdisk4

最后安全退出sd卡
diskutil unmountDisk /dev/disk4
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
